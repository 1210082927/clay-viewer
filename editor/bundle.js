!function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=65)}([function(e,t,n){!function(e){"use strict";var n={};n.exports=t,function(e){if(!t)var t=1e-6;if(!n)var n="undefined"!=typeof Float32Array?Float32Array:Array;if(!r)var r=Math.random;var i={};i.setMatrixArrayType=function(e){n=e},void 0!==e&&(e.glMatrix=i);var a=Math.PI/180;i.toRadian=function(e){return e*a};var o={};o.create=function(){var e=new n(2);return e[0]=0,e[1]=0,e},o.clone=function(e){var t=new n(2);return t[0]=e[0],t[1]=e[1],t},o.fromValues=function(e,t){var r=new n(2);return r[0]=e,r[1]=t,r},o.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e},o.set=function(e,t,n){return e[0]=t,e[1]=n,e},o.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e},o.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e},o.sub=o.subtract,o.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e},o.mul=o.multiply,o.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e},o.div=o.divide,o.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e},o.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e},o.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e},o.scaleAndAdd=function(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e},o.distance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1];return Math.sqrt(n*n+r*r)},o.dist=o.distance,o.squaredDistance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r},o.sqrDist=o.squaredDistance,o.length=function(e){var t=e[0],n=e[1];return Math.sqrt(t*t+n*n)},o.len=o.length,o.squaredLength=function(e){var t=e[0],n=e[1];return t*t+n*n},o.sqrLen=o.squaredLength,o.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},o.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},o.normalize=function(e,t){var n=t[0],r=t[1],i=n*n+r*r;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},o.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},o.cross=function(e,t,n){var r=t[0]*n[1]-t[1]*n[0];return e[0]=e[1]=0,e[2]=r,e},o.lerp=function(e,t,n,r){var i=t[0],a=t[1];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e},o.random=function(e,t){t=t||1;var n=2*r()*Math.PI;return e[0]=Math.cos(n)*t,e[1]=Math.sin(n)*t,e},o.transformMat2=function(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[2]*i,e[1]=n[1]*r+n[3]*i,e},o.transformMat2d=function(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[2]*i+n[4],e[1]=n[1]*r+n[3]*i+n[5],e},o.transformMat3=function(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[3]*i+n[6],e[1]=n[1]*r+n[4]*i+n[7],e},o.transformMat4=function(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[4]*i+n[12],e[1]=n[1]*r+n[5]*i+n[13],e},o.forEach=function(){var e=o.create();return function(t,n,r,i,a,o){var s,u;for(n||(n=2),r||(r=0),u=i?Math.min(i*n+r,t.length):t.length,s=r;s<u;s+=n)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}(),o.str=function(e){return"vec2("+e[0]+", "+e[1]+")"},void 0!==e&&(e.vec2=o);var s={};s.create=function(){var e=new n(3);return e[0]=0,e[1]=0,e[2]=0,e},s.clone=function(e){var t=new n(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.fromValues=function(e,t,r){var i=new n(3);return i[0]=e,i[1]=t,i[2]=r,i},s.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.set=function(e,t,n,r){return e[0]=t,e[1]=n,e[2]=r,e},s.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e},s.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e},s.sub=s.subtract,s.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e},s.mul=s.multiply,s.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e},s.div=s.divide,s.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e},s.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e},s.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e},s.scaleAndAdd=function(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e},s.distance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(n*n+r*r+i*i)},s.dist=s.distance,s.squaredDistance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2];return n*n+r*r+i*i},s.sqrDist=s.squaredDistance,s.length=function(e){var t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)},s.len=s.length,s.squaredLength=function(e){var t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r},s.sqrLen=s.squaredLength,s.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},s.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},s.normalize=function(e,t){var n=t[0],r=t[1],i=t[2],a=n*n+r*r+i*i;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},s.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},s.cross=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[0],s=n[1],u=n[2];return e[0]=i*u-a*s,e[1]=a*o-r*u,e[2]=r*s-i*o,e},s.lerp=function(e,t,n,r){var i=t[0],a=t[1],o=t[2];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e[2]=o+r*(n[2]-o),e},s.random=function(e,t){t=t||1;var n=2*r()*Math.PI,i=2*r()-1,a=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(n)*a,e[1]=Math.sin(n)*a,e[2]=i*t,e},s.transformMat4=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[3]*r+n[7]*i+n[11]*a+n[15];return o=o||1,e[0]=(n[0]*r+n[4]*i+n[8]*a+n[12])/o,e[1]=(n[1]*r+n[5]*i+n[9]*a+n[13])/o,e[2]=(n[2]*r+n[6]*i+n[10]*a+n[14])/o,e},s.transformMat3=function(e,t,n){var r=t[0],i=t[1],a=t[2];return e[0]=r*n[0]+i*n[3]+a*n[6],e[1]=r*n[1]+i*n[4]+a*n[7],e[2]=r*n[2]+i*n[5]+a*n[8],e},s.transformQuat=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[0],s=n[1],u=n[2],l=n[3],c=l*r+s*a-u*i,f=l*i+u*r-o*a,h=l*a+o*i-s*r,d=-o*r-s*i-u*a;return e[0]=c*l+d*-o+f*-u-h*-s,e[1]=f*l+d*-s+h*-o-c*-u,e[2]=h*l+d*-u+c*-s-f*-o,e},s.rotateX=function(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[0],a[1]=i[1]*Math.cos(r)-i[2]*Math.sin(r),a[2]=i[1]*Math.sin(r)+i[2]*Math.cos(r),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e},s.rotateY=function(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[2]*Math.sin(r)+i[0]*Math.cos(r),a[1]=i[1],a[2]=i[2]*Math.cos(r)-i[0]*Math.sin(r),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e},s.rotateZ=function(e,t,n,r){var i=[],a=[];return i[0]=t[0]-n[0],i[1]=t[1]-n[1],i[2]=t[2]-n[2],a[0]=i[0]*Math.cos(r)-i[1]*Math.sin(r),a[1]=i[0]*Math.sin(r)+i[1]*Math.cos(r),a[2]=i[2],e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e},s.forEach=function(){var e=s.create();return function(t,n,r,i,a,o){var s,u;for(n||(n=3),r||(r=0),u=i?Math.min(i*n+r,t.length):t.length,s=r;s<u;s+=n)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),s.angle=function(e,t){var n=s.fromValues(e[0],e[1],e[2]),r=s.fromValues(t[0],t[1],t[2]);s.normalize(n,n),s.normalize(r,r);var i=s.dot(n,r);return i>1?0:Math.acos(i)},s.str=function(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"},void 0!==e&&(e.vec3=s);var u={};u.create=function(){var e=new n(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},u.clone=function(e){var t=new n(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.fromValues=function(e,t,r,i){var a=new n(4);return a[0]=e,a[1]=t,a[2]=r,a[3]=i,a},u.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.set=function(e,t,n,r,i){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e},u.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e},u.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e},u.sub=u.subtract,u.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e[3]=t[3]*n[3],e},u.mul=u.multiply,u.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e[3]=t[3]/n[3],e},u.div=u.divide,u.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e[3]=Math.min(t[3],n[3]),e},u.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e[3]=Math.max(t[3],n[3]),e},u.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e},u.scaleAndAdd=function(e,t,n,r){return e[0]=t[0]+n[0]*r,e[1]=t[1]+n[1]*r,e[2]=t[2]+n[2]*r,e[3]=t[3]+n[3]*r,e},u.distance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(n*n+r*r+i*i+a*a)},u.dist=u.distance,u.squaredDistance=function(e,t){var n=t[0]-e[0],r=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return n*n+r*r+i*i+a*a},u.sqrDist=u.squaredDistance,u.length=function(e){var t=e[0],n=e[1],r=e[2],i=e[3];return Math.sqrt(t*t+n*n+r*r+i*i)},u.len=u.length,u.squaredLength=function(e){var t=e[0],n=e[1],r=e[2],i=e[3];return t*t+n*n+r*r+i*i},u.sqrLen=u.squaredLength,u.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},u.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},u.normalize=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*n+r*r+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},u.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},u.lerp=function(e,t,n,r){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+r*(n[0]-i),e[1]=a+r*(n[1]-a),e[2]=o+r*(n[2]-o),e[3]=s+r*(n[3]-s),e},u.random=function(e,t){return t=t||1,e[0]=r(),e[1]=r(),e[2]=r(),e[3]=r(),u.normalize(e,e),u.scale(e,e,t),e},u.transformMat4=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3];return e[0]=n[0]*r+n[4]*i+n[8]*a+n[12]*o,e[1]=n[1]*r+n[5]*i+n[9]*a+n[13]*o,e[2]=n[2]*r+n[6]*i+n[10]*a+n[14]*o,e[3]=n[3]*r+n[7]*i+n[11]*a+n[15]*o,e},u.transformQuat=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=n[0],s=n[1],u=n[2],l=n[3],c=l*r+s*a-u*i,f=l*i+u*r-o*a,h=l*a+o*i-s*r,d=-o*r-s*i-u*a;return e[0]=c*l+d*-o+f*-u-h*-s,e[1]=f*l+d*-s+h*-o-c*-u,e[2]=h*l+d*-u+c*-s-f*-o,e},u.forEach=function(){var e=u.create();return function(t,n,r,i,a,o){var s,u;for(n||(n=4),r||(r=0),u=i?Math.min(i*n+r,t.length):t.length,s=r;s<u;s+=n)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),u.str=function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.vec4=u);var l={};l.create=function(){var e=new n(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},l.clone=function(e){var t=new n(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},l.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},l.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},l.transpose=function(e,t){if(e===t){var n=t[1];e[1]=t[2],e[2]=n}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},l.invert=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*a-i*r;return o?(o=1/o,e[0]=a*o,e[1]=-r*o,e[2]=-i*o,e[3]=n*o,e):null},l.adjoint=function(e,t){var n=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=n,e},l.determinant=function(e){return e[0]*e[3]-e[2]*e[1]},l.multiply=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],u=n[1],l=n[2],c=n[3];return e[0]=r*s+a*u,e[1]=i*s+o*u,e[2]=r*l+a*c,e[3]=i*l+o*c,e},l.mul=l.multiply,l.rotate=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),u=Math.cos(n);return e[0]=r*u+a*s,e[1]=i*u+o*s,e[2]=r*-s+a*u,e[3]=i*-s+o*u,e},l.scale=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],u=n[1];return e[0]=r*s,e[1]=i*s,e[2]=a*u,e[3]=o*u,e},l.str=function(e){return"mat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},l.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))},l.LDU=function(e,t,n,r){return e[2]=r[2]/r[0],n[0]=r[0],n[1]=r[1],n[3]=r[3]-e[2]*n[1],[e,t,n]},void 0!==e&&(e.mat2=l);var c={};c.create=function(){var e=new n(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.clone=function(e){var t=new n(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},c.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},c.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.invert=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=n*a-r*i;return u?(u=1/u,e[0]=a*u,e[1]=-r*u,e[2]=-i*u,e[3]=n*u,e[4]=(i*s-a*o)*u,e[5]=(r*o-n*s)*u,e):null},c.determinant=function(e){return e[0]*e[3]-e[1]*e[2]},c.multiply=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=n[0],c=n[1],f=n[2],h=n[3],d=n[4],p=n[5];return e[0]=r*l+a*c,e[1]=i*l+o*c,e[2]=r*f+a*h,e[3]=i*f+o*h,e[4]=r*d+a*p+s,e[5]=i*d+o*p+u,e},c.mul=c.multiply,c.rotate=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=Math.sin(n),c=Math.cos(n);return e[0]=r*c+a*l,e[1]=i*c+o*l,e[2]=r*-l+a*c,e[3]=i*-l+o*c,e[4]=s,e[5]=u,e},c.scale=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=n[0],c=n[1];return e[0]=r*l,e[1]=i*l,e[2]=a*c,e[3]=o*c,e[4]=s,e[5]=u,e},c.translate=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=n[0],c=n[1];return e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=r*l+a*c+s,e[5]=i*l+o*c+u,e},c.str=function(e){return"mat2d("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+")"},c.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)},void 0!==e&&(e.mat2d=c);var f={};f.create=function(){var e=new n(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},f.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},f.clone=function(e){var t=new n(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},f.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},f.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},f.transpose=function(e,t){if(e===t){var n=t[1],r=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=n,e[5]=t[7],e[6]=r,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},f.invert=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],f=c*o-s*l,h=-c*a+s*u,d=l*a-o*u,p=n*f+r*h+i*d;return p?(p=1/p,e[0]=f*p,e[1]=(-c*r+i*l)*p,e[2]=(s*r-i*o)*p,e[3]=h*p,e[4]=(c*n-i*u)*p,e[5]=(-s*n+i*a)*p,e[6]=d*p,e[7]=(-l*n+r*u)*p,e[8]=(o*n-r*a)*p,e):null},f.adjoint=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8];return e[0]=o*c-s*l,e[1]=i*l-r*c,e[2]=r*s-i*o,e[3]=s*u-a*c,e[4]=n*c-i*u,e[5]=i*a-n*s,e[6]=a*l-o*u,e[7]=r*u-n*l,e[8]=n*o-r*a,e},f.determinant=function(e){var t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8];return t*(l*a-o*u)+n*(-l*i+o*s)+r*(u*i-a*s)},f.multiply=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],f=t[8],h=n[0],d=n[1],p=n[2],_=n[3],m=n[4],g=n[5],v=n[6],y=n[7],x=n[8];return e[0]=h*r+d*o+p*l,e[1]=h*i+d*s+p*c,e[2]=h*a+d*u+p*f,e[3]=_*r+m*o+g*l,e[4]=_*i+m*s+g*c,e[5]=_*a+m*u+g*f,e[6]=v*r+y*o+x*l,e[7]=v*i+y*s+x*c,e[8]=v*a+y*u+x*f,e},f.mul=f.multiply,f.translate=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],f=t[8],h=n[0],d=n[1];return e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=h*r+d*o+l,e[7]=h*i+d*s+c,e[8]=h*a+d*u+f,e},f.rotate=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],f=t[8],h=Math.sin(n),d=Math.cos(n);return e[0]=d*r+h*o,e[1]=d*i+h*s,e[2]=d*a+h*u,e[3]=d*o-h*r,e[4]=d*s-h*i,e[5]=d*u-h*a,e[6]=l,e[7]=c,e[8]=f,e},f.scale=function(e,t,n){var r=n[0],i=n[1];return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},f.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},f.fromQuat=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n+n,s=r+r,u=i+i,l=n*o,c=r*o,f=r*s,h=i*o,d=i*s,p=i*u,_=a*o,m=a*s,g=a*u;return e[0]=1-f-p,e[3]=c-g,e[6]=h+m,e[1]=c+g,e[4]=1-l-p,e[7]=d-_,e[2]=h-m,e[5]=d+_,e[8]=1-l-f,e},f.normalFromMat4=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],f=t[9],h=t[10],d=t[11],p=t[12],_=t[13],m=t[14],g=t[15],v=n*s-r*o,y=n*u-i*o,x=n*l-a*o,T=r*u-i*s,E=r*l-a*s,b=i*l-a*u,S=c*_-f*p,A=c*m-h*p,w=c*g-d*p,N=f*m-h*_,C=f*g-d*_,R=h*g-d*m,M=v*R-y*C+x*N+T*w-E*A+b*S;return M?(M=1/M,e[0]=(s*R-u*C+l*N)*M,e[1]=(u*w-o*R-l*A)*M,e[2]=(o*C-s*w+l*S)*M,e[3]=(i*C-r*R-a*N)*M,e[4]=(n*R-i*w+a*A)*M,e[5]=(r*w-n*C-a*S)*M,e[6]=(_*b-m*E+g*T)*M,e[7]=(m*x-p*b-g*y)*M,e[8]=(p*E-_*x+g*v)*M,e):null},f.str=function(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"},f.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))},void 0!==e&&(e.mat3=f);var h={};h.create=function(){var e=new n(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},h.clone=function(e){var t=new n(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},h.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},h.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},h.transpose=function(e,t){if(e===t){var n=t[1],r=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=n,e[6]=t[9],e[7]=t[13],e[8]=r,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},h.invert=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],f=t[9],h=t[10],d=t[11],p=t[12],_=t[13],m=t[14],g=t[15],v=n*s-r*o,y=n*u-i*o,x=n*l-a*o,T=r*u-i*s,E=r*l-a*s,b=i*l-a*u,S=c*_-f*p,A=c*m-h*p,w=c*g-d*p,N=f*m-h*_,C=f*g-d*_,R=h*g-d*m,M=v*R-y*C+x*N+T*w-E*A+b*S;return M?(M=1/M,e[0]=(s*R-u*C+l*N)*M,e[1]=(i*C-r*R-a*N)*M,e[2]=(_*b-m*E+g*T)*M,e[3]=(h*E-f*b-d*T)*M,e[4]=(u*w-o*R-l*A)*M,e[5]=(n*R-i*w+a*A)*M,e[6]=(m*x-p*b-g*y)*M,e[7]=(c*b-h*x+d*y)*M,e[8]=(o*C-s*w+l*S)*M,e[9]=(r*w-n*C-a*S)*M,e[10]=(p*E-_*x+g*v)*M,e[11]=(f*x-c*E-d*v)*M,e[12]=(s*A-o*N-u*S)*M,e[13]=(n*N-r*A+i*S)*M,e[14]=(_*y-p*T-m*v)*M,e[15]=(c*T-f*y+h*v)*M,e):null},h.adjoint=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],f=t[9],h=t[10],d=t[11],p=t[12],_=t[13],m=t[14],g=t[15];return e[0]=s*(h*g-d*m)-f*(u*g-l*m)+_*(u*d-l*h),e[1]=-(r*(h*g-d*m)-f*(i*g-a*m)+_*(i*d-a*h)),e[2]=r*(u*g-l*m)-s*(i*g-a*m)+_*(i*l-a*u),e[3]=-(r*(u*d-l*h)-s*(i*d-a*h)+f*(i*l-a*u)),e[4]=-(o*(h*g-d*m)-c*(u*g-l*m)+p*(u*d-l*h)),e[5]=n*(h*g-d*m)-c*(i*g-a*m)+p*(i*d-a*h),e[6]=-(n*(u*g-l*m)-o*(i*g-a*m)+p*(i*l-a*u)),e[7]=n*(u*d-l*h)-o*(i*d-a*h)+c*(i*l-a*u),e[8]=o*(f*g-d*_)-c*(s*g-l*_)+p*(s*d-l*f),e[9]=-(n*(f*g-d*_)-c*(r*g-a*_)+p*(r*d-a*f)),e[10]=n*(s*g-l*_)-o*(r*g-a*_)+p*(r*l-a*s),e[11]=-(n*(s*d-l*f)-o*(r*d-a*f)+c*(r*l-a*s)),e[12]=-(o*(f*m-h*_)-c*(s*m-u*_)+p*(s*h-u*f)),e[13]=n*(f*m-h*_)-c*(r*m-i*_)+p*(r*h-i*f),e[14]=-(n*(s*m-u*_)-o*(r*m-i*_)+p*(r*u-i*s)),e[15]=n*(s*h-u*f)-o*(r*h-i*f)+c*(r*u-i*s),e},h.determinant=function(e){var t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8],c=e[9],f=e[10],h=e[11],d=e[12],p=e[13],_=e[14],m=e[15];return(t*o-n*a)*(f*m-h*_)-(t*s-r*a)*(c*m-h*p)+(t*u-i*a)*(c*_-f*p)+(n*s-r*o)*(l*m-h*d)-(n*u-i*o)*(l*_-f*d)+(r*u-i*s)*(l*p-c*d)},h.multiply=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],f=t[8],h=t[9],d=t[10],p=t[11],_=t[12],m=t[13],g=t[14],v=t[15],y=n[0],x=n[1],T=n[2],E=n[3];return e[0]=y*r+x*s+T*f+E*_,e[1]=y*i+x*u+T*h+E*m,e[2]=y*a+x*l+T*d+E*g,e[3]=y*o+x*c+T*p+E*v,y=n[4],x=n[5],T=n[6],E=n[7],e[4]=y*r+x*s+T*f+E*_,e[5]=y*i+x*u+T*h+E*m,e[6]=y*a+x*l+T*d+E*g,e[7]=y*o+x*c+T*p+E*v,y=n[8],x=n[9],T=n[10],E=n[11],e[8]=y*r+x*s+T*f+E*_,e[9]=y*i+x*u+T*h+E*m,e[10]=y*a+x*l+T*d+E*g,e[11]=y*o+x*c+T*p+E*v,y=n[12],x=n[13],T=n[14],E=n[15],e[12]=y*r+x*s+T*f+E*_,e[13]=y*i+x*u+T*h+E*m,e[14]=y*a+x*l+T*d+E*g,e[15]=y*o+x*c+T*p+E*v,e},h.multiplyAffine=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[4],s=t[5],u=t[6],l=t[8],c=t[9],f=t[10],h=t[12],d=t[13],p=t[14],_=n[0],m=n[1],g=n[2];return e[0]=_*r+m*o+g*l,e[1]=_*i+m*s+g*c,e[2]=_*a+m*u+g*f,_=n[4],m=n[5],g=n[6],e[4]=_*r+m*o+g*l,e[5]=_*i+m*s+g*c,e[6]=_*a+m*u+g*f,_=n[8],m=n[9],g=n[10],e[8]=_*r+m*o+g*l,e[9]=_*i+m*s+g*c,e[10]=_*a+m*u+g*f,_=n[12],m=n[13],g=n[14],e[12]=_*r+m*o+g*l+h,e[13]=_*i+m*s+g*c+d,e[14]=_*a+m*u+g*f+p,e},h.mul=h.multiply,h.mulAffine=h.multiplyAffine,h.translate=function(e,t,n){var r,i,a,o,s,u,l,c,f,h,d,p,_=n[0],m=n[1],g=n[2];return t===e?(e[12]=t[0]*_+t[4]*m+t[8]*g+t[12],e[13]=t[1]*_+t[5]*m+t[9]*g+t[13],e[14]=t[2]*_+t[6]*m+t[10]*g+t[14],e[15]=t[3]*_+t[7]*m+t[11]*g+t[15]):(r=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],f=t[8],h=t[9],d=t[10],p=t[11],e[0]=r,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=l,e[7]=c,e[8]=f,e[9]=h,e[10]=d,e[11]=p,e[12]=r*_+s*m+f*g+t[12],e[13]=i*_+u*m+h*g+t[13],e[14]=a*_+l*m+d*g+t[14],e[15]=o*_+c*m+p*g+t[15]),e},h.scale=function(e,t,n){var r=n[0],i=n[1],a=n[2];return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},h.rotate=function(e,n,r,i){var a,o,s,u,l,c,f,h,d,p,_,m,g,v,y,x,T,E,b,S,A,w,N,C,R=i[0],M=i[1],L=i[2],P=Math.sqrt(R*R+M*M+L*L);return Math.abs(P)<t?null:(P=1/P,R*=P,M*=P,L*=P,a=Math.sin(r),o=Math.cos(r),s=1-o,u=n[0],l=n[1],c=n[2],f=n[3],h=n[4],d=n[5],p=n[6],_=n[7],m=n[8],g=n[9],v=n[10],y=n[11],x=R*R*s+o,T=M*R*s+L*a,E=L*R*s-M*a,b=R*M*s-L*a,S=M*M*s+o,A=L*M*s+R*a,w=R*L*s+M*a,N=M*L*s-R*a,C=L*L*s+o,e[0]=u*x+h*T+m*E,e[1]=l*x+d*T+g*E,e[2]=c*x+p*T+v*E,e[3]=f*x+_*T+y*E,e[4]=u*b+h*S+m*A,e[5]=l*b+d*S+g*A,e[6]=c*b+p*S+v*A,e[7]=f*b+_*S+y*A,e[8]=u*w+h*N+m*C,e[9]=l*w+d*N+g*C,e[10]=c*w+p*N+v*C,e[11]=f*w+_*N+y*C,n!==e&&(e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15]),e)},h.rotateX=function(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[4],o=t[5],s=t[6],u=t[7],l=t[8],c=t[9],f=t[10],h=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+l*r,e[5]=o*i+c*r,e[6]=s*i+f*r,e[7]=u*i+h*r,e[8]=l*i-a*r,e[9]=c*i-o*r,e[10]=f*i-s*r,e[11]=h*i-u*r,e},h.rotateY=function(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[0],o=t[1],s=t[2],u=t[3],l=t[8],c=t[9],f=t[10],h=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-l*r,e[1]=o*i-c*r,e[2]=s*i-f*r,e[3]=u*i-h*r,e[8]=a*r+l*i,e[9]=o*r+c*i,e[10]=s*r+f*i,e[11]=u*r+h*i,e},h.rotateZ=function(e,t,n){var r=Math.sin(n),i=Math.cos(n),a=t[0],o=t[1],s=t[2],u=t[3],l=t[4],c=t[5],f=t[6],h=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+l*r,e[1]=o*i+c*r,e[2]=s*i+f*r,e[3]=u*i+h*r,e[4]=l*i-a*r,e[5]=c*i-o*r,e[6]=f*i-s*r,e[7]=h*i-u*r,e},h.fromRotationTranslation=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=r+r,u=i+i,l=a+a,c=r*s,f=r*u,h=r*l,d=i*u,p=i*l,_=a*l,m=o*s,g=o*u,v=o*l;return e[0]=1-(d+_),e[1]=f+v,e[2]=h-g,e[3]=0,e[4]=f-v,e[5]=1-(c+_),e[6]=p+m,e[7]=0,e[8]=h+g,e[9]=p-m,e[10]=1-(c+d),e[11]=0,e[12]=n[0],e[13]=n[1],e[14]=n[2],e[15]=1,e},h.fromQuat=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n+n,s=r+r,u=i+i,l=n*o,c=r*o,f=r*s,h=i*o,d=i*s,p=i*u,_=a*o,m=a*s,g=a*u;return e[0]=1-f-p,e[1]=c+g,e[2]=h-m,e[3]=0,e[4]=c-g,e[5]=1-l-p,e[6]=d+_,e[7]=0,e[8]=h+m,e[9]=d-_,e[10]=1-l-f,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},h.frustum=function(e,t,n,r,i,a,o){var s=1/(n-t),u=1/(i-r),l=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*u,e[6]=0,e[7]=0,e[8]=(n+t)*s,e[9]=(i+r)*u,e[10]=(o+a)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*l,e[15]=0,e},h.perspective=function(e,t,n,r,i){var a=1/Math.tan(t/2),o=1/(r-i);return e[0]=a/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(i+r)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*i*r*o,e[15]=0,e},h.ortho=function(e,t,n,r,i,a,o){var s=1/(t-n),u=1/(r-i),l=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*u,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+n)*s,e[13]=(i+r)*u,e[14]=(o+a)*l,e[15]=1,e},h.lookAt=function(e,n,r,i){var a,o,s,u,l,c,f,d,p,_,m=n[0],g=n[1],v=n[2],y=i[0],x=i[1],T=i[2],E=r[0],b=r[1],S=r[2];return Math.abs(m-E)<t&&Math.abs(g-b)<t&&Math.abs(v-S)<t?h.identity(e):(f=m-E,d=g-b,p=v-S,_=1/Math.sqrt(f*f+d*d+p*p),f*=_,d*=_,p*=_,a=x*p-T*d,o=T*f-y*p,s=y*d-x*f,_=Math.sqrt(a*a+o*o+s*s),_?(_=1/_,a*=_,o*=_,s*=_):(a=0,o=0,s=0),u=d*s-p*o,l=p*a-f*s,c=f*o-d*a,_=Math.sqrt(u*u+l*l+c*c),_?(_=1/_,u*=_,l*=_,c*=_):(u=0,l=0,c=0),e[0]=a,e[1]=u,e[2]=f,e[3]=0,e[4]=o,e[5]=l,e[6]=d,e[7]=0,e[8]=s,e[9]=c,e[10]=p,e[11]=0,e[12]=-(a*m+o*g+s*v),e[13]=-(u*m+l*g+c*v),e[14]=-(f*m+d*g+p*v),e[15]=1,e)},h.str=function(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"},h.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))},void 0!==e&&(e.mat4=h);var d={};d.create=function(){var e=new n(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},d.rotationTo=function(){var e=s.create(),t=s.fromValues(1,0,0),n=s.fromValues(0,1,0);return function(r,i,a){var o=s.dot(i,a);return o<-.999999?(s.cross(e,t,i),s.length(e)<1e-6&&s.cross(e,n,i),s.normalize(e,e),d.setAxisAngle(r,e,Math.PI),r):o>.999999?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(s.cross(e,i,a),r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=1+o,d.normalize(r,r))}}(),d.setAxes=function(){var e=f.create();return function(t,n,r,i){return e[0]=r[0],e[3]=r[1],e[6]=r[2],e[1]=i[0],e[4]=i[1],e[7]=i[2],e[2]=-n[0],e[5]=-n[1],e[8]=-n[2],d.normalize(t,d.fromMat3(t,e))}}(),d.clone=u.clone,d.fromValues=u.fromValues,d.copy=u.copy,d.set=u.set,d.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},d.setAxisAngle=function(e,t,n){n*=.5;var r=Math.sin(n);return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=Math.cos(n),e},d.add=u.add,d.multiply=function(e,t,n){var r=t[0],i=t[1],a=t[2],o=t[3],s=n[0],u=n[1],l=n[2],c=n[3];return e[0]=r*c+o*s+i*l-a*u,e[1]=i*c+o*u+a*s-r*l,e[2]=a*c+o*l+r*u-i*s,e[3]=o*c-r*s-i*u-a*l,e},d.mul=d.multiply,d.scale=u.scale,d.rotateX=function(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),u=Math.cos(n);return e[0]=r*u+o*s,e[1]=i*u+a*s,e[2]=a*u-i*s,e[3]=o*u-r*s,e},d.rotateY=function(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),u=Math.cos(n);return e[0]=r*u-a*s,e[1]=i*u+o*s,e[2]=a*u+r*s,e[3]=o*u-i*s,e},d.rotateZ=function(e,t,n){n*=.5;var r=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(n),u=Math.cos(n);return e[0]=r*u+i*s,e[1]=i*u-r*s,e[2]=a*u+o*s,e[3]=o*u-a*s,e},d.calculateW=function(e,t){var n=t[0],r=t[1],i=t[2];return e[0]=n,e[1]=r,e[2]=i,e[3]=Math.sqrt(Math.abs(1-n*n-r*r-i*i)),e},d.dot=u.dot,d.lerp=u.lerp,d.slerp=function(e,t,n,r){var i,a,o,s,u,l=t[0],c=t[1],f=t[2],h=t[3],d=n[0],p=n[1],_=n[2],m=n[3];return a=l*d+c*p+f*_+h*m,a<0&&(a=-a,d=-d,p=-p,_=-_,m=-m),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-r)*i)/o,u=Math.sin(r*i)/o):(s=1-r,u=r),e[0]=s*l+u*d,e[1]=s*c+u*p,e[2]=s*f+u*_,e[3]=s*h+u*m,e},d.invert=function(e,t){var n=t[0],r=t[1],i=t[2],a=t[3],o=n*n+r*r+i*i+a*a,s=o?1/o:0;return e[0]=-n*s,e[1]=-r*s,e[2]=-i*s,e[3]=a*s,e},d.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},d.length=u.length,d.len=d.length,d.squaredLength=u.squaredLength,d.sqrLen=d.squaredLength,d.normalize=u.normalize,d.fromMat3=function(e,t){var n,r=t[0]+t[4]+t[8];if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{var i=0;t[4]>t[0]&&(i=1),t[8]>t[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;n=Math.sqrt(t[3*i+i]-t[3*a+a]-t[3*o+o]+1),e[i]=.5*n,n=.5/n,e[3]=(t[3*a+o]-t[3*o+a])*n,e[a]=(t[3*a+i]+t[3*i+a])*n,e[o]=(t[3*o+i]+t[3*i+o])*n}return e},d.str=function(e){return"quat("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.quat=d)}(n.exports)}()},function(e,t,n){"use strict";var r=n(66),i=n(22),a=n(11),o=function(){this.__GUID__=a.a.genGUID()};o.__initializers__=[function(e){a.a.extend(this,e)}],a.a.extend(o,r.a),a.a.extend(o.prototype,i.a),t.a=o},function(e,t,n){"use strict";function r(e,t,n){return e<t?t:e>n?n:e}var i=n(0),a=n.n(i),o=a.a.vec3,s=function(e,t,n){e=e||0,t=t||0,n=n||0,this._array=o.fromValues(e,t,n),this._dirty=!0};s.prototype={constructor:s,add:function(e){return o.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,n){return this._array[0]=e,this._array[1]=t,this._array[2]=n,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._dirty=!0,this},clone:function(){return new s(this.x,this.y,this.z)},copy:function(e){return o.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return o.cross(this._array,e._array,t._array),this._dirty=!0,this},dist:function(e){return o.dist(this._array,e._array)},distance:function(e){return o.distance(this._array,e._array)},div:function(e){return o.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return o.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return o.dot(this._array,e._array)},len:function(){return o.len(this._array)},length:function(){return o.length(this._array)},lerp:function(e,t,n){return o.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},min:function(e){return o.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return o.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return o.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return o.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return o.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return o.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return o.random(this._array,e),this._dirty=!0,this},scale:function(e){return o.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return o.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return o.sqrDist(this._array,e._array)},squaredDistance:function(e){return o.squaredDistance(this._array,e._array)},sqrLen:function(){return o.sqrLen(this._array)},squaredLength:function(){return o.squaredLength(this._array)},sub:function(e){return o.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return o.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat3:function(e){return o.transformMat3(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return o.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return o.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},applyProjection:function(e){var t=this._array;if(e=e._array,0===e[15]){var n=-1/t[2];t[0]=e[0]*t[0]*n,t[1]=e[5]*t[1]*n,t[2]=(e[10]*t[2]+e[14])*n}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){s.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){s.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var u=Object.defineProperty;if(u){var l=s.prototype;u(l,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),u(l,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),u(l,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}})}s.add=function(e,t,n){return o.add(e._array,t._array,n._array),e._dirty=!0,e},s.set=function(e,t,n,r){o.set(e._array,t,n,r),e._dirty=!0},s.copy=function(e,t){return o.copy(e._array,t._array),e._dirty=!0,e},s.cross=function(e,t,n){return o.cross(e._array,t._array,n._array),e._dirty=!0,e},s.dist=function(e,t){return o.distance(e._array,t._array)},s.distance=s.dist,s.div=function(e,t,n){return o.divide(e._array,t._array,n._array),e._dirty=!0,e},s.divide=s.div,s.dot=function(e,t){return o.dot(e._array,t._array)},s.len=function(e){return o.length(e._array)},s.lerp=function(e,t,n,r){return o.lerp(e._array,t._array,n._array,r),e._dirty=!0,e},s.min=function(e,t,n){return o.min(e._array,t._array,n._array),e._dirty=!0,e},s.max=function(e,t,n){return o.max(e._array,t._array,n._array),e._dirty=!0,e},s.mul=function(e,t,n){return o.multiply(e._array,t._array,n._array),e._dirty=!0,e},s.multiply=s.mul,s.negate=function(e,t){return o.negate(e._array,t._array),e._dirty=!0,e},s.normalize=function(e,t){return o.normalize(e._array,t._array),e._dirty=!0,e},s.random=function(e,t){return o.random(e._array,t),e._dirty=!0,e},s.scale=function(e,t,n){return o.scale(e._array,t._array,n),e._dirty=!0,e},s.scaleAndAdd=function(e,t,n,r){return o.scaleAndAdd(e._array,t._array,n._array,r),e._dirty=!0,e},s.sqrDist=function(e,t){return o.sqrDist(e._array,t._array)},s.squaredDistance=s.sqrDist,s.sqrLen=function(e){return o.sqrLen(e._array)},s.squaredLength=s.sqrLen,s.sub=function(e,t,n){return o.subtract(e._array,t._array,n._array),e._dirty=!0,e},s.subtract=s.sub,s.transformMat3=function(e,t,n){return o.transformMat3(e._array,t._array,n._array),e._dirty=!0,e},s.transformMat4=function(e,t,n){return o.transformMat4(e._array,t._array,n._array),e._dirty=!0,e},s.transformQuat=function(e,t,n){return o.transformQuat(e._array,t._array,n._array),e._dirty=!0,e};var c=Math.atan2,f=Math.asin,h=Math.abs;s.eulerFromQuat=function(e,t,n){e._dirty=!0,t=t._array;var i=e._array,a=t[0],o=t[1],s=t[2],u=t[3],l=a*a,h=o*o,d=s*s,p=u*u,n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":i[0]=c(2*(a*u-o*s),p-l-h+d),i[1]=f(r(2*(a*s+o*u),-1,1)),i[2]=c(2*(s*u-a*o),p+l-h-d);break;case"YXZ":i[0]=f(r(2*(a*u-o*s),-1,1)),i[1]=c(2*(a*s+o*u),p-l-h+d),i[2]=c(2*(a*o+s*u),p-l+h-d);break;case"ZXY":i[0]=f(r(2*(a*u+o*s),-1,1)),i[1]=c(2*(o*u-s*a),p-l-h+d),i[2]=c(2*(s*u-a*o),p-l+h-d);break;case"ZYX":i[0]=c(2*(a*u+s*o),p-l-h+d),i[1]=f(r(2*(o*u-a*s),-1,1)),i[2]=c(2*(a*o+s*u),p+l-h-d);break;case"YZX":i[0]=c(2*(a*u-s*o),p-l+h-d),i[1]=c(2*(o*u-a*s),p+l-h-d),i[2]=f(r(2*(a*o+s*u),-1,1));break;case"XZY":i[0]=c(2*(a*u+o*s),p-l+h-d),i[1]=c(2*(a*s+o*u),p+l-h-d),i[2]=f(r(2*(s*u-a*o),-1,1));break;default:console.warn("Unkown order: "+n)}return e},s.eulerFromMat3=function(e,t,n){var i=t._array,a=i[0],o=i[3],s=i[6],u=i[1],l=i[4],d=i[7],p=i[2],_=i[5],m=i[8],g=e._array,n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":g[1]=f(r(s,-1,1)),h(s)<.99999?(g[0]=c(-d,m),g[2]=c(-o,a)):(g[0]=c(_,l),g[2]=0);break;case"YXZ":g[0]=f(-r(d,-1,1)),h(d)<.99999?(g[1]=c(s,m),g[2]=c(u,l)):(g[1]=c(-p,a),g[2]=0);break;case"ZXY":g[0]=f(r(_,-1,1)),h(_)<.99999?(g[1]=c(-p,m),g[2]=c(-o,l)):(g[1]=0,g[2]=c(u,a));break;case"ZYX":g[1]=f(-r(p,-1,1)),h(p)<.99999?(g[0]=c(_,m),g[2]=c(u,a)):(g[0]=0,g[2]=c(-o,l));break;case"YZX":g[2]=f(r(u,-1,1)),h(u)<.99999?(g[0]=c(-d,l),g[1]=c(-p,a)):(g[0]=0,g[1]=c(s,m));break;case"XZY":g[2]=f(-r(o,-1,1)),h(o)<.99999?(g[0]=c(_,l),g[1]=c(s,a)):(g[0]=c(-d,m),g[1]=0);break;default:console.warn("Unkown order: "+n)}return e._dirty=!0,e},s.POSITIVE_X=new s(1,0,0),s.NEGATIVE_X=new s(-1,0,0),s.POSITIVE_Y=new s(0,1,0),s.NEGATIVE_Y=new s(0,-1,0),s.POSITIVE_Z=new s(0,0,1),s.NEGATIVE_Z=new s(0,0,-1),s.UP=new s(0,1,0),s.ZERO=new s(0,0,0),t.a=s},function(e,t,n){"use strict";function r(){return{locations:{},attriblocations:{}}}function i(e,t,n){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),a(n)].join("\n")}function a(e){for(var t=e.split("\n"),n=0,r=t.length;n<r;n++)t[n]=n+1+": "+t[n];return t.join("\n")}var o=n(1),s=n(11),u=n(23),l=n(12),c=n(0),f=n.n(c),h=f.a.mat2,d=f.a.mat3,p=f.a.mat4,_=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,m=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,g=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,v=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g,y={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},x={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return h.create()},mat3:function(){return d.create()},mat4:function(){return p.create()},array:function(){return[]}},T=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],E=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],b=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],S={},A=o.a.extend(function(){return{vertex:"",fragment:"",precision:"highp",attribSemantics:{},matrixSemantics:{},uniformSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},extensions:["OES_standard_derivatives","EXT_shader_texture_lod"],lightGroup:0,lightNumber:{},_textureSlot:0,_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new u.a,this._codeDirty=!0,this._updateShaderString()},{isEqual:function(e){return!!e&&(this===e?!this._codeDirty:(e._codeDirty&&e._updateShaderString(),this._codeDirty&&this._updateShaderString(),!(e._vertexProcessed!==this._vertexProcessed||e._fragmentProcessed!==this._fragmentProcessed)))},setVertex:function(e){this.vertex=e,this._updateShaderString(),this.dirty()},setFragment:function(e){this.fragment=e,this._updateShaderString(),this.dirty()},bind:function(e){var t=this._cache,n=e.gl;if(t.use(e.__GUID__,r),this._currentLocationsMap=t.get("locations"),this._textureSlot=0,this._codeDirty&&this._updateShaderString(),t.isDirty("program")){var i=this._buildProgram(n,this._vertexProcessed,this._fragmentProcessed);if(t.fresh("program"),i)return i}n.useProgram(t.get("program"))},dirty:function(){var e=this._cache;this._codeDirty=!0,e.dirtyAll("program");for(var t=0;t<e._caches.length;t++)if(e._caches[t]){var n=e._caches[t];n.locations={},n.attriblocations={}}},_updateShaderString:function(e){this.vertex===this._vertexPrev&&this.fragment===this._fragmentPrev||(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefineExtensionAndPrecision(e),this._vertexProcessed=this._unrollLoop(this._vertexProcessed,this.vertexDefines),this._fragmentProcessed=this._unrollLoop(this._fragmentProcessed,this.fragmentDefines),this._codeDirty=!1},define:function(e,t,n){var r=this.vertexDefines,i=this.fragmentDefines;"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<3&&(n=t,t=e,e="both"),n=null!=n?n:null,"vertex"!==e&&"both"!==e||r[t]!==n&&(r[t]=n,this.dirty()),"fragment"!==e&&"both"!==e||i[t]!==n&&(i[t]=n,"both"!==e&&this.dirty())},undefine:function(e,t){"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<2&&(t=e,e="both"),"vertex"!==e&&"both"!==e||this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this.dirty()),"fragment"!==e&&"both"!==e||this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],"both"!==e&&this.dirty())},isDefined:function(e,t){switch(e){case"vertex":return void 0!==this.vertexDefines[t];case"fragment":return void 0!==this.fragmentDefines[t]}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.enableTexture(e[t]);else{var n=this._textureStatus[e];if(n){n.enabled||(n.enabled=!0,this.dirty())}}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this.dirty()},disableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.disableTexture(e[t]);else{var n=this._textureStatus[e];if(n){!n.enabled||(n.enabled=!1,this.dirty())}}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this.dirty()},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var n in t)t[n].enabled&&e.push(n);return e},hasUniform:function(e){var t=this._currentLocationsMap[e];return null!==t&&void 0!==t},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var n=this._textureSlot;return this.useTextureSlot(e,t,n),this._textureSlot++,n},useTextureSlot:function(e,t,n){t&&(e.gl.activeTexture(e.gl.TEXTURE0+n),t.isRenderable()?t.bind(e):t.unbind(e))},setUniform:function(e,t,n,r){var i=this._currentLocationsMap,a=i[n];if(null===a||void 0===a)return!1;switch(t){case"m4":e.uniformMatrix4fv(a,!1,r);break;case"2i":e.uniform2i(a,r[0],r[1]);break;case"2f":e.uniform2f(a,r[0],r[1]);break;case"3i":e.uniform3i(a,r[0],r[1],r[2]);break;case"3f":e.uniform3f(a,r[0],r[1],r[2]);break;case"4i":e.uniform4i(a,r[0],r[1],r[2],r[3]);break;case"4f":e.uniform4f(a,r[0],r[1],r[2],r[3]);break;case"1i":e.uniform1i(a,r);break;case"1f":e.uniform1f(a,r);break;case"1fv":e.uniform1fv(a,r);break;case"1iv":e.uniform1iv(a,r);break;case"2iv":e.uniform2iv(a,r);break;case"2fv":e.uniform2fv(a,r);break;case"3iv":e.uniform3iv(a,r);break;case"3fv":e.uniform3fv(a,r);break;case"4iv":e.uniform4iv(a,r);break;case"4fv":e.uniform4fv(a,r);break;case"m2":case"m2v":e.uniformMatrix2fv(a,!1,r);break;case"m3":case"m3v":e.uniformMatrix3fv(a,!1,r);break;case"m4v":if(Array.isArray(r)){for(var o=new l.a.Float32Array(16*r.length),s=0,u=0;u<r.length;u++)for(var c=r[u],f=0;f<16;f++)o[s++]=c[f];e.uniformMatrix4fv(a,!1,o)}else r instanceof l.a.Float32Array&&e.uniformMatrix4fv(a,!1,r)}return!0},setUniformOfSemantic:function(e,t,n){var r=this.uniformSemantics[t];return!!r&&this.setUniform(e,r.type,r.symbol,n)},enableAttributes:function(e,t,n){var r,i=e.gl,a=this._cache.get("program"),o=this._cache.get("attriblocations");(r=n?n.__enabledAttributeList:S[e.__GUID__])||(r=n?n.__enabledAttributeList=[]:S[e.__GUID__]=[]);for(var s=[],u=0;u<t.length;u++){var l=t[u];if(this.attributeTemplates[l]){var c=o[l];if(void 0===c){if(-1===(c=i.getAttribLocation(a,l))){s[u]=-1;continue}o[l]=c}s[u]=c,r[c]?r[c]=2:r[c]=1}else s[u]=-1}for(var u=0;u<r.length;u++)switch(r[u]){case 1:i.enableVertexAttribArray(u),r[u]=3;break;case 2:r[u]=3;break;case 3:i.disableVertexAttribArray(u),r[u]=0}return s},_parseImport:function(){this._vertexProcessedWithoutDefine=A.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=A.parseImport(this.fragment)},_addDefineExtensionAndPrecision:function(e){e=e||this.extensions;for(var t=[],n=0;n<e.length;n++)t.push("#extension GL_"+e[n]+" : enable");var r=this._getDefineStr(this.vertexDefines);this._vertexProcessed=r+"\n"+this._vertexProcessedWithoutDefine,r=this._getDefineStr(this.fragmentDefines);var i=r+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=t.join("\n")+"\n"+["precision",this.precision,"float"].join(" ")+";\n"+["precision",this.precision,"int"].join(" ")+";\n"+["precision",this.precision,"sampler2D"].join(" ")+";\n"+i},_getDefineStr:function(e){var t=this.lightNumber,n=this._textureStatus,r=[];for(var i in t){var a=t[i];a>0&&r.push("#define "+i.toUpperCase()+"_COUNT "+a)}for(var o in n){n[o].enabled&&r.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in e){var s=e[o];null===s?r.push("#define "+o):r.push("#define "+o+" "+s.toString())}return r.join("\n")},_unrollLoop:function(e,t){function n(e,n,i,a){var o="";isNaN(n)&&(n=n in t?t[n]:r[n]),isNaN(i)&&(i=i in t?t[i]:r[i]);for(var s=parseInt(n);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var r={};for(var i in this.lightNumber)r[i+"_COUNT"]=this.lightNumber[i];return e.replace(v,n)},_parseUniforms:function(){function e(e,i,a,o,s,u){if(i&&a){var l,c=y[i],f=!0;if(c){if(n._uniformList.push(a),"sampler2D"!==i&&"samplerCube"!==i||(n._textureStatus[a]={enabled:!1,shaderType:r}),o&&(c+="v"),u)if(T.indexOf(u)>=0)n.attribSemantics[u]={symbol:a,type:c},f=!1;else if(b.indexOf(u)>=0){var h=!1,d=u;u.match(/TRANSPOSE$/)&&(h=!0,d=u.slice(0,-9)),n.matrixSemantics[u]={symbol:a,type:c,isTranspose:h,semanticNoTranspose:d},f=!1}else if(E.indexOf(u)>=0)n.uniformSemantics[u]={symbol:a,type:c},f=!1;else if("unconfigurable"===u)f=!1;else{if(!(l=n._parseDefaultValue(i,u)))throw new Error('Unkown semantic "'+u+'"');u=""}f&&(t[a]={type:c,value:o?x.array:l||x[i],semantic:u||null})}return["uniform",i,a,o].join(" ")+";\n"}}var t={},n=this,r="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(_,e),r="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(_,e),n.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=t},_parseDefaultValue:function(e,t){var n=/\[\s*(.*)\s*\]/;{if("vec2"!==e&&"vec3"!==e&&"vec4"!==e)return"bool"===e?function(){return"true"===t.toLowerCase()}:"float"===e?function(){return parseFloat(t)}:"int"===e?function(){return parseInt(t)}:void 0;var r=n.exec(t)[1];if(r){var i=r.split(/\s*,\s*/);return function(){return new l.a.Float32Array(i)}}}},createUniforms:function(){var e={};for(var t in this.uniformTemplates){var n=this.uniformTemplates[t];e[t]={type:n.type,value:n.value()}}return e},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function e(e,r,i,a,o){if(r&&i){var s=1;switch(r){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}if(t[i]={type:"float",size:s,semantic:o||null},o){if(T.indexOf(o)<0)throw new Error('Unkown semantic "'+o+'"');n.attribSemantics[o]={symbol:i,type:r}}}return["attribute",r,i].join(" ")+";\n"}var t={},n=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(m,e),this.attributeTemplates=t},_parseDefines:function(){function e(e,r,i){var a="vertex"===n?t.vertexDefines:t.fragmentDefines;return a[r]||(a[r]="false"!=i&&("true"==i||(i?isNaN(parseFloat(i))?i:parseFloat(i):null))),""}var t=this,n="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(g,e),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(g,e)},_buildProgram:function(e,t,n){var r=this._cache;r.get("program")&&e.deleteProgram(r.get("program"));var a=e.createProgram(),o=e.createShader(e.VERTEX_SHADER);e.shaderSource(o,t),e.compileShader(o);var s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(s,n),e.compileShader(s);var u=i(e,o,t);if(u)return u;if(u=i(e,s,n))return u;if(e.attachShader(a,o),e.attachShader(a,s),this.attribSemantics.POSITION)e.bindAttribLocation(a,0,this.attribSemantics.POSITION.symbol);else{var l=Object.keys(this.attributeTemplates);e.bindAttribLocation(a,0,l[0])}if(e.linkProgram(a),!e.getProgramParameter(a,e.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+e.getProgramParameter(a,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]";for(var c=0;c<this._uniformList.length;c++){var f=this._uniformList[c];r.get("locations")[f]=e.getUniformLocation(a,f)}e.deleteShader(o),e.deleteShader(s),r.put("program",a)},clone:function(){var e=new A({vertex:this.vertex,fragment:this.fragment,vertexDefines:s.a.clone(this.vertexDefines),fragmentDefines:s.a.clone(this.fragmentDefines)});for(var t in this._textureStatus)e._textureStatus[t]=s.a.clone(this._textureStatus[t]);return e},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var n=t.get("program");n&&e.gl.deleteProgram(n),t.deleteContext(e.__GUID__),this._locations={}}}),w=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;A.parseImport=function(e){return e=e.replace(w,function(e,t,n){var e=A.source(n);return e?A.parseImport(e):(console.error('Shader chunk "'+n+'" not existed in library'),"")})};var N=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;A.import=function(e){e.replace(N,function(e,t,n,r){var r=r.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(r){for(var i,a=n.split("."),o=A.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=r}return r})},A.codes={},A.source=function(e){for(var t=e.split("."),n=A.codes,r=0;n&&r<t.length;){n=n[t[r++]]}return"string"!=typeof n?(console.error('Shader "'+e+'" not existed in library'),""):n},t.a=A},function(e,t,n){"use strict";var r=n(1),i=n(6),a=n(23),o=r.a.extend({width:512,height:512,type:i.a.UNSIGNED_BYTE,format:i.a.RGBA,wrapS:i.a.REPEAT,wrapT:i.a.REPEAT,minFilter:i.a.LINEAR_MIPMAP_LINEAR,magFilter:i.a.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new a.a},{getWebGLTexture:function(e){var t=e.gl,n=this._cache;return n.use(e.__GUID__),n.miss("webgl_texture")&&n.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):n.isDirty()&&(this.update(e),n.fresh()),n.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this._fallBack(e)},_fallBack:function(e){var t=this.isPowerOfTwo();this.format===i.a.DEPTH_COMPONENT&&(this.useMipmap=!1);var n=e.getGLExtension("EXT_sRGB");this.format!==o.SRGB||n||(this.format=o.RGB),this.format!==o.SRGB_ALPHA||n||(this.format=o.RGBA),t&&this.useMipmap?(this.NPOT=!1,this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter==i.a.NEAREST_MIPMAP_NEAREST||this.minFilter==i.a.NEAREST_MIPMAP_LINEAR?this.minFilter=i.a.NEAREST:this.minFilter!=i.a.LINEAR_MIPMAP_LINEAR&&this.minFilter!=i.a.LINEAR_MIPMAP_NEAREST||(this.minFilter=i.a.LINEAR),this.wrapS=i.a.CLAMP_TO_EDGE,this.wrapT=i.a.CLAMP_TO_EDGE)},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var n=t.get("webgl_texture");n&&e.gl.deleteTexture(n),t.deleteContext(e.__GUID__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(o.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}}),Object.defineProperty(o.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}}),o.BYTE=i.a.BYTE,o.UNSIGNED_BYTE=i.a.UNSIGNED_BYTE,o.SHORT=i.a.SHORT,o.UNSIGNED_SHORT=i.a.UNSIGNED_SHORT,o.INT=i.a.INT,o.UNSIGNED_INT=i.a.UNSIGNED_INT,o.FLOAT=i.a.FLOAT,o.HALF_FLOAT=36193,o.UNSIGNED_INT_24_8_WEBGL=34042,o.DEPTH_COMPONENT=i.a.DEPTH_COMPONENT,o.DEPTH_STENCIL=i.a.DEPTH_STENCIL,o.ALPHA=i.a.ALPHA,o.RGB=i.a.RGB,o.RGBA=i.a.RGBA,o.LUMINANCE=i.a.LUMINANCE,o.LUMINANCE_ALPHA=i.a.LUMINANCE_ALPHA,o.SRGB=35904,o.SRGB_ALPHA=35906,o.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,o.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,o.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,o.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,o.NEAREST=i.a.NEAREST,o.LINEAR=i.a.LINEAR,o.NEAREST_MIPMAP_NEAREST=i.a.NEAREST_MIPMAP_NEAREST,o.LINEAR_MIPMAP_NEAREST=i.a.LINEAR_MIPMAP_NEAREST,o.NEAREST_MIPMAP_LINEAR=i.a.NEAREST_MIPMAP_LINEAR,o.LINEAR_MIPMAP_LINEAR=i.a.LINEAR_MIPMAP_LINEAR,o.REPEAT=i.a.REPEAT,o.CLAMP_TO_EDGE=i.a.CLAMP_TO_EDGE,o.MIRRORED_REPEAT=i.a.MIRRORED_REPEAT,t.a=o},function(e,t,n){"use strict";var r=n(4),i=n(6),a=n(43),o=a.a.isPowerOfTwo,s=r.a.extend(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var n=this.format,r=this.type;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.magFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.minFilter);var a=e.getGLExtension("EXT_texture_filter_anisotropic");if(a&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===r){e.getGLExtension("OES_texture_half_float")||(r=i.a.FLOAT)}if(this.mipmaps.length)for(var o=this.width,s=this.height,u=0;u<this.mipmaps.length;u++){var l=this.mipmaps[u];this._updateTextureData(t,l,u,o,s,n,r),o/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,n,r),this.useMipmap&&!this.NPOT&&t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,n,i,a,o,s){t.image?e.texImage2D(e.TEXTURE_2D,n,o,o,s,t.image):o<=r.a.COMPRESSED_RGBA_S3TC_DXT5_EXT&&o>=r.a.COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,n,o,i,a,0,t.pixels):e.texImage2D(e.TEXTURE_2D,n,o,i,a,0,o,s,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){var e,t;return this.image?(e=this.image.width,t=this.image.height):(e=this.width,t=this.height),o(e)&&o(t)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var n=new Image;t&&(n.crossOrigin=t);var r=this;return n.onload=function(){r.dirty(),r.trigger("success",r),n.onload=null},n.onerror=function(){r.trigger("error",r),n.onerror=null},n.src=e,this.image=n,this}});Object.defineProperty(s.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(s.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}}),t.a=s},function(e,t,n){"use strict";t.a={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}},function(e,t,n){"use strict";var r=n(2),i=n(0),a=n.n(i),o=a.a.vec3,s=o.copy,u=o.set,l=function(e,t){this.min=e||new r.a(1/0,1/0,1/0),this.max=t||new r.a(-1/0,-1/0,-1/0)};l.prototype={constructor:l,updateFromVertices:function(e){if(e.length>0){var t=this.min,n=this.max,r=t._array,i=n._array;s(r,e[0]),s(i,e[0]);for(var a=1;a<e.length;a++){var o=e[a];o[0]<r[0]&&(r[0]=o[0]),o[1]<r[1]&&(r[1]=o[1]),o[2]<r[2]&&(r[2]=o[2]),o[0]>i[0]&&(i[0]=o[0]),o[1]>i[1]&&(i[1]=o[1]),o[2]>i[2]&&(i[2]=o[2])}t._dirty=!0,n._dirty=!0}},union:function(e){var t=this.min,n=this.max;return o.min(t._array,t._array,e.min._array),o.max(n._array,n._array,e.max._array),t._dirty=!0,n._dirty=!0,this},intersection:function(e){var t=this.min,n=this.max;return o.max(t._array,t._array,e.min._array),o.min(n._array,n._array,e.max._array),t._dirty=!0,n._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min._array,n=this.max._array,r=e.min._array,i=e.max._array;return!(t[0]>i[0]||t[1]>i[1]||t[2]>i[2]||n[0]<r[0]||n[1]<r[1]||n[2]<r[2])},containBoundingBox:function(e){var t=this.min._array,n=this.max._array,r=e.min._array,i=e.max._array;return t[0]<=r[0]&&t[1]<=r[1]&&t[2]<=r[2]&&n[0]>=i[0]&&n[1]>=i[1]&&n[2]>=i[2]},containPoint:function(e){var t=this.min._array,n=this.max._array,r=e._array;return t[0]<=r[0]&&t[1]<=r[1]&&t[2]<=r[2]&&n[0]>=r[0]&&n[1]>=r[1]&&n[2]>=r[2]},isFinite:function(){var e=this.min._array,t=this.max._array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(){var e=o.create(),t=o.create(),n=o.create(),r=o.create(),i=o.create(),a=o.create();return function(o){var s=this.min._array,u=this.max._array,l=o._array;return e[0]=l[0]*s[0],e[1]=l[1]*s[0],e[2]=l[2]*s[0],t[0]=l[0]*u[0],t[1]=l[1]*u[0],t[2]=l[2]*u[0],n[0]=l[4]*s[1],n[1]=l[5]*s[1],n[2]=l[6]*s[1],r[0]=l[4]*u[1],r[1]=l[5]*u[1],r[2]=l[6]*u[1],i[0]=l[8]*s[2],i[1]=l[9]*s[2],i[2]=l[10]*s[2],a[0]=l[8]*u[2],a[1]=l[9]*u[2],a[2]=l[10]*u[2],s[0]=Math.min(e[0],t[0])+Math.min(n[0],r[0])+Math.min(i[0],a[0])+l[12],s[1]=Math.min(e[1],t[1])+Math.min(n[1],r[1])+Math.min(i[1],a[1])+l[13],s[2]=Math.min(e[2],t[2])+Math.min(n[2],r[2])+Math.min(i[2],a[2])+l[14],u[0]=Math.max(e[0],t[0])+Math.max(n[0],r[0])+Math.max(i[0],a[0])+l[12],u[1]=Math.max(e[1],t[1])+Math.max(n[1],r[1])+Math.max(i[1],a[1])+l[13],u[2]=Math.max(e[2],t[2])+Math.max(n[2],r[2])+Math.max(i[2],a[2])+l[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min._array,n=this.max._array,r=e._array,i=t[0],a=t[1],o=t[2],s=n[0],u=n[1],l=t[2],c=n[0],f=n[1],h=n[2];if(1===r[15])t[0]=r[0]*i+r[12],t[1]=r[5]*a+r[13],n[2]=r[10]*o+r[14],n[0]=r[0]*c+r[12],n[1]=r[5]*f+r[13],t[2]=r[10]*h+r[14];else{var d=-1/o;t[0]=r[0]*i*d,t[1]=r[5]*a*d,n[2]=(r[10]*o+r[14])*d,d=-1/l,n[0]=r[0]*s*d,n[1]=r[5]*u*d,d=-1/h,t[2]=(r[10]*h+r[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){for(var e=[],t=0;t<8;t++)e[t]=o.fromValues(0,0,0);this.vertices=e}var n=this.min._array,r=this.max._array;return u(e[0],n[0],n[1],n[2]),u(e[1],n[0],r[1],n[2]),u(e[2],r[0],n[1],n[2]),u(e[3],r[0],r[1],n[2]),u(e[4],n[0],n[1],r[2]),u(e[5],n[0],r[1],r[2]),u(e[6],r[0],n[1],r[2]),u(e[7],r[0],r[1],r[2]),this},copy:function(e){var t=this.min,n=this.max;return s(t._array,e.min._array),s(n._array,e.max._array),t._dirty=!0,n._dirty=!0,this},clone:function(){var e=new l;return e.copy(this),e}},t.a=l},function(e,t,n){"use strict";var r=n(1),i=n(4),a=r.a.extend({name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(e,t,n,r){for(var a=e.gl,t=t||this.shader,o=t.currentTextureSlot(),s=0;s<this._enabledUniforms.length;s++){var u=this._enabledUniforms[s],l=this.uniforms[u].value;if(l instanceof i.a)l.__slot=-1;else if(Array.isArray(l))for(var c=0;c<l.length;c++)l[c]instanceof i.a&&(l[c].__slot=-1)}for(var s=0;s<this._enabledUniforms.length;s++){var u=this._enabledUniforms[s],f=this.uniforms[u],l=f.value;if(null!==l)if(l instanceof i.a)if(l.__slot<0){var h=t.currentTextureSlot(),d=t.setUniform(a,"1i",u,h);if(!d)continue;t.takeCurrentTextureSlot(e,l),l.__slot=h}else t.setUniform(a,"1i",u,l.__slot);else if(Array.isArray(l)){if(0===l.length)continue;var p=l[0];if(p instanceof i.a){if(!t.hasUniform(u))continue;for(var _=[],c=0;c<l.length;c++){var m=l[c];if(m.__slot<0){var h=t.currentTextureSlot();_.push(h),t.takeCurrentTextureSlot(e,m),m.__slot=h}else _.push(m.__slot)}t.setUniform(a,"1iv",u,_)}else t.setUniform(a,f.type,u,l)}else t.setUniform(a,f.type,u,l);else if("t"===f.type){var h=t.currentTextureSlot(),d=t.setUniform(a,"1i",u,h);d&&t.takeCurrentTextureSlot(e,null)}}t.resetTextureSlot(o)},setUniform:function(e,t){void 0===t&&console.warn('Uniform value "'+e+'" is undefined');var n=this.uniforms[e];n&&(n.value=t)},setUniforms:function(e){for(var t in e){var n=e[t];this.setUniform(t,n)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},set:function(e,t){if("object"==typeof e)for(var n in e){var r=e[n];this.set(n,r)}else{var i=this.uniforms[e];i&&(void 0===t&&(console.warn('Uniform value "'+e+'" is undefined'),t=null),i.value=t)}},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){this.shader&&this.shader.detached();var n=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var r=this.uniforms;if(this._enabledUniforms=Object.keys(r),this._enabledUniforms.sort(),t)for(var i in n)r[i]&&(r[i].value=n[i].value);e.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e},dispose:function(e,t){if(t)for(var n in this.uniforms){var r=this.uniforms[n].value;if(r)if(r instanceof i.a)r.dispose(e);else if(Array.isArray(r))for(var a=0;a<r.length;a++)r[a]instanceof i.a&&r[a].dispose(e)}var o=this.shader;o&&(this.detachShader(),o.isAttachedToAny()||o.dispose(e))}});t.a=a},function(e,t,n){"use strict";var r=n(0),i=n.n(r),a=n(2),o=i.a.mat4,s=i.a.vec3,u=i.a.mat3,l=i.a.quat,c=function(){this._axisX=new a.a,this._axisY=new a.a,this._axisZ=new a.a,this._array=o.create(),this._dirty=!0};c.prototype={constructor:c,setArray:function(e){for(var t=0;t<this._array.length;t++)this._array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return o.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new c).copy(this)},copy:function(e){return o.copy(this._array,e._array),this._dirty=!0,this},determinant:function(){return o.determinant(this._array)},fromQuat:function(e){return o.fromQuat(this._array,e._array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return o.fromRotationTranslation(this._array,e._array,t._array),this._dirty=!0,this},fromMat2d:function(e){return c.fromMat2d(this,e),this},frustum:function(e,t,n,r,i,a){return o.frustum(this._array,e,t,n,r,i,a),this._dirty=!0,this},identity:function(){return o.identity(this._array),this._dirty=!0,this},invert:function(){return o.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(e,t,n){return o.lookAt(this._array,e._array,t._array,n._array),this._dirty=!0,this},mul:function(e){return o.mul(this._array,this._array,e._array),this._dirty=!0,this},mulLeft:function(e){return o.mul(this._array,e._array,this._array),this._dirty=!0,this},multiply:function(e){return o.multiply(this._array,this._array,e._array),this._dirty=!0,this},multiplyLeft:function(e){return o.multiply(this._array,e._array,this._array),this._dirty=!0,this},ortho:function(e,t,n,r,i,a){return o.ortho(this._array,e,t,n,r,i,a),this._dirty=!0,this},perspective:function(e,t,n,r){return o.perspective(this._array,e,t,n,r),this._dirty=!0,this},rotate:function(e,t){return o.rotate(this._array,this._array,e,t._array),this._dirty=!0,this},rotateX:function(e){return o.rotateX(this._array,this._array,e),this._dirty=!0,this},rotateY:function(e){return o.rotateY(this._array,this._array,e),this._dirty=!0,this},rotateZ:function(e){return o.rotateZ(this._array,this._array,e),this._dirty=!0,this},scale:function(e){return o.scale(this._array,this._array,e._array),this._dirty=!0,this},translate:function(e){return o.translate(this._array,this._array,e._array),this._dirty=!0,this},transpose:function(){return o.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var e=s.create(),t=s.create(),n=s.create(),r=u.create();return function(i,a,o){var c=this._array;s.set(e,c[0],c[1],c[2]),s.set(t,c[4],c[5],c[6]),s.set(n,c[8],c[9],c[10]);var f=s.length(e),h=s.length(t),d=s.length(n);this.determinant()<0&&(f=-f),i&&i.set(f,h,d),o.set(c[12],c[13],c[14]),u.fromMat4(r,c),r[0]/=f,r[1]/=f,r[2]/=f,r[3]/=h,r[4]/=h,r[5]/=h,r[6]/=d,r[7]/=d,r[8]/=d,l.fromMat3(a._array,r),l.normalize(a._array,a._array),a._dirty=!0,o._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var f=Object.defineProperty;if(f){var h=c.prototype;f(h,"z",{get:function(){var e=this._array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this._array;e=e._array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),f(h,"y",{get:function(){var e=this._array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this._array;e=e._array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),f(h,"x",{get:function(){var e=this._array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this._array;e=e._array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}c.adjoint=function(e,t){return o.adjoint(e._array,t._array),e._dirty=!0,e},c.copy=function(e,t){return o.copy(e._array,t._array),e._dirty=!0,e},c.determinant=function(e){return o.determinant(e._array)},c.identity=function(e){return o.identity(e._array),e._dirty=!0,e},c.ortho=function(e,t,n,r,i,a,s){return o.ortho(e._array,t,n,r,i,a,s),e._dirty=!0,e},c.perspective=function(e,t,n,r,i){return o.perspective(e._array,t,n,r,i),e._dirty=!0,e},c.lookAt=function(e,t,n,r){return o.lookAt(e._array,t._array,n._array,r._array),e._dirty=!0,e},c.invert=function(e,t){return o.invert(e._array,t._array),e._dirty=!0,e},c.mul=function(e,t,n){return o.mul(e._array,t._array,n._array),e._dirty=!0,e},c.multiply=c.mul,c.fromQuat=function(e,t){return o.fromQuat(e._array,t._array),e._dirty=!0,e},c.fromRotationTranslation=function(e,t,n){return o.fromRotationTranslation(e._array,t._array,n._array),e._dirty=!0,e},c.fromMat2d=function(e,t){e._dirty=!0;var t=t._array,e=e._array;return e[0]=t[0],e[4]=t[2],e[12]=t[4],e[1]=t[1],e[5]=t[3],e[13]=t[5],e},c.rotate=function(e,t,n,r){return o.rotate(e._array,t._array,n,r._array),e._dirty=!0,e},c.rotateX=function(e,t,n){return o.rotateX(e._array,t._array,n),e._dirty=!0,e},c.rotateY=function(e,t,n){return o.rotateY(e._array,t._array,n),e._dirty=!0,e},c.rotateZ=function(e,t,n){return o.rotateZ(e._array,t._array,n),e._dirty=!0,e},c.scale=function(e,t,n){return o.scale(e._array,t._array,n._array),e._dirty=!0,e},c.transpose=function(e,t){return o.transpose(e._array,t._array),e._dirty=!0,e},c.translate=function(e,t,n){return o.translate(e._array,t._array,n._array),e._dirty=!0,e},t.a=c},function(e,t,n){"use strict";var r=n(1),i=n(4),a=n(19),o=n(6),s=n(23),u=o.a.FRAMEBUFFER,l=o.a.RENDERBUFFER,c=o.a.DEPTH_ATTACHMENT,f=o.a.COLOR_ATTACHMENT0,h=r.a.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new s.a,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer(u,this._getFrameBufferGL(e)),this._boundRenderer=e;var n=this._cache;n.put("viewport",e.viewport);var r,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(r=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=r,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,r,i,1);var f=n.get("attached_textures");if(f)for(var o in f)if(!this._textures[o]){var h=f[o];this._doDetach(t,o,h)}if(!n.get("depthtexture_attached")&&this.depthBuffer){n.miss("renderbuffer")&&n.put("renderbuffer",t.createRenderbuffer());var d=n.get("renderbuffer");r===n.get("renderbuffer_width")&&i===n.get("renderbuffer_height")||(t.bindRenderbuffer(l,d),t.renderbufferStorage(l,t.DEPTH_COMPONENT16,r,i),n.put("renderbuffer_width",r),n.put("renderbuffer_height",i),t.bindRenderbuffer(l,null)),n.get("renderbuffer_attached")||(t.framebufferRenderbuffer(u,c,l,d),n.put("renderbuffer_attached",!0))}},unbind:function(e){e.__currentFrameBuffer=null,e.gl.bindFramebuffer(u,null),this._boundRenderer=null,this._cache.use(e.__GUID__);var t=this._cache.get("viewport");t&&e.setViewport(t),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var n in this._textures){var r=this._textures[n];if(r){var s=r.texture;if(!s.NPOT&&s.useMipmap&&s.minFilter===i.a.LINEAR_MIPMAP_LINEAR){var u=s instanceof a.a?o.a.TEXTURE_CUBE_MAP:o.a.TEXTURE_2D;t.bindTexture(u,s.getWebGLTexture(e)),t.generateMipmap(u),t.bindTexture(u,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus(u)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__GUID__),t.miss("framebuffer")&&t.put("framebuffer",e.gl.createFramebuffer()),t.get("framebuffer")},attach:function(e,t,n){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||f,n=n||o.a.TEXTURE_2D;var r,i=this._boundRenderer,a=i&&i.gl;if(a){var s=this._cache;s.use(i.__GUID__),r=s.get("attached_textures")}var u=this._textures[t];if(!u||u.target!==n||u.texture!==e||!r||null==r[t]){var l=!0;i&&(l=this._doAttach(i,e,t,n),this.viewport||i.setViewport(0,0,e.width,e.height,1)),l&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=n)}},_doAttach:function(e,t,n,r){var i=e.gl,a=t.getWebGLTexture(e),s=this._cache.get("attached_textures");if(s&&s[n]){var f=s[n];if(f.texture===t&&f.target===r)return}n=+n;var h=!0;if(n===c||n===o.a.DEPTH_STENCIL_ATTACHMENT){if(e.getGLExtension("WEBGL_depth_texture")||(console.error("Depth texture is not supported by the browser"),h=!1),t.format!==o.a.DEPTH_COMPONENT&&t.format!==o.a.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),h=!1),h){var d=this._cache.get("renderbuffer");d&&(i.framebufferRenderbuffer(u,c,l,null),i.deleteRenderbuffer(d),this._cache.put("renderbuffer",!1)),this._cache.put("renderbuffer_attached",!1),this._cache.put("depthtexture_attached",!0)}}return i.framebufferTexture2D(u,n,r,a,0),s||(s={},this._cache.put("attached_textures",s)),s[n]=s[n]||{},s[n].texture=t,s[n].target=r,h},_doDetach:function(e,t,n){e.framebufferTexture2D(u,t,n,null,0);var r=this._cache.get("attached_textures");r&&r[t]&&(r[t]=null),t!==c&&t!==o.a.DEPTH_STENCIL_ATTACHMENT||this._cache.put("depthtexture_attached",!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){this._cache.use(this._boundRenderer.__GUID__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,n=this._cache;n.use(e.__GUID__);var r=n.get("renderbuffer");r&&t.deleteRenderbuffer(r);var i=n.get("framebuffer");i&&t.deleteFramebuffer(i),n.deleteContext(e.__GUID__),this._textures={}}});h.DEPTH_ATTACHMENT=c,h.COLOR_ATTACHMENT0=f,h.STENCIL_ATTACHMENT=o.a.STENCIL_ATTACHMENT,h.DEPTH_STENCIL_ATTACHMENT=o.a.DEPTH_STENCIL_ATTACHMENT,t.a=h},function(e,t,n){"use strict";var r=0,i=Array.prototype,a=i.forEach,o={genGUID:function(){return++r},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;for(var n=e.split("/"),r=t.split("/"),i=n[0];"."===i||".."===i;)".."===i&&r.pop(),n.shift(),i=n[0];return r.join("/")+"/"+n.join("/")},extend:function(e,t){if(t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e},defaults:function(e,t){if(t)for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e},extendWithPropList:function(e,t,n){if(t)for(var r=0;r<n.length;r++){var i=n[r];e[i]=t[i]}return e},defaultsWithPropList:function(e,t,n){if(t)for(var r=0;r<n.length;r++){var i=n[r];null==e[i]&&(e[i]=t[i])}return e},each:function(e,t,n){if(e&&t)if(e.forEach&&e.forEach===a)e.forEach(t,n);else if(e.length===+e.length)for(var r=0,i=e.length;r<i;r++)t.call(n,e[r],r,e);else for(var o in e)e.hasOwnProperty(o)&&t.call(n,e[o],o,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return!!e&&e.length===+e.length},clone:function(e){if(o.isObject(e)){if(o.isArray(e))return e.slice();if(o.isArrayLike(e)){for(var t=new e.constructor(e.length),n=0;n<e.length;n++)t[n]=e[n];return t}return o.extend({},e)}return e}};t.a=o},function(e,t,n){"use strict";var r=!0;try{var i=document.createElement("canvas");if(!(i.getContext("webgl")||i.getContext("experimental-webgl")))throw new Error}catch(e){r=!1}var a={};a.supportWebGL=function(){return r},a.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,a.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,a.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,a.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,a.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,a.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,a.Float64Array="undefined"==typeof Float64Array?Array:Float64Array,t.a=a},function(e,t,n){"use strict";var r=n(1),i=n(27),a=n(32),o=n(3),s=n(8),u=n(15),l=n(6),c=n(102);o.a.import(c.a);var f=new a.a,h=new u.a({geometry:f,frustumCulling:!1}),d=new i.a,p=r.a.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var e=new o.a({vertex:o.a.source("qtek.compositor.vertex"),fragment:this.fragment}),t=new s.a({shader:e});e.enableTexturesAll(),this.material=t},{setUniform:function(e,t){var n=this.material.uniforms[e];n&&(n.value=t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||l.a.COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var n in this.outputs){var r=this.outputs[n];r&&t.attach(r,n)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var n=e.gl;if(t){this.bind(e,t);var r=e.getGLExtension("EXT_draw_buffers");if(r&&this.outputs){var i=[];for(var a in this.outputs)(a=+a)>=n.COLOR_ATTACHMENT0&&a<=n.COLOR_ATTACHMENT0+8&&i.push(a);r.drawBuffersEXT(i)}}this.trigger("beforerender",this,e);var o=this.clearDepth?n.DEPTH_BUFFER_BIT:0;if(n.depthMask(!0),this.clearColor){o|=n.COLOR_BUFFER_BIT,n.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&n.clearColor(s[0],s[1],s[2],s[3])}n.clear(o),this.blendWithPrevious?(n.enable(n.BLEND),this.material.transparent=!0):(n.disable(n.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){h.material=this.material,e.renderQueue([h],d)},dispose:function(e){this.material.dispose(e)}});t.a=p},function(e,t,n){"use strict";var r=n(16),i=r.a.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var e=r.a.prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}});t.a=i},function(e,t,n){"use strict";var r=n(42),i=n(6),a=n(5),o=r.a.extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},function(){this.joints||(this.joints=[])},{isSkinnedMesh:function(){return!(!this.skeleton||!this.material.shader.isDefined("vertex","SKINNING"))},render:function(e,t){var n=e.gl;if(t=t||this.material.shader,this.skeleton){this.skeleton.update();var i=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);if(this.useSkinMatricesTexture){var a,o=this.joints.length;a=o>256?64:o>64?32:o>16?16:8;var s=this.getSkinMatricesTexture();s.width=a,s.height=a,s.pixels&&s.pixels.length===a*a*4||(s.pixels=new Float32Array(a*a*4)),s.pixels.set(i),s.dirty(),t.setUniform(n,"1f","skinMatricesTextureSize",a)}else t.setUniformOfSemantic(n,"SKIN_MATRIX",i)}return r.a.prototype.render.call(this,e,t)},getSkinMatricesTexture:function(){return this._skinMatricesTexture=this._skinMatricesTexture||new a.a({type:i.a.FLOAT,minFilter:i.a.NEAREST,magFilter:i.a.NEAREST,useMipmap:!1,flipY:!1}),this._skinMatricesTexture}});o.POINTS=i.a.POINTS,o.LINES=i.a.LINES,o.LINE_LOOP=i.a.LINE_LOOP,o.LINE_STRIP=i.a.LINE_STRIP,o.TRIANGLES=i.a.TRIANGLES,o.TRIANGLE_STRIP=i.a.TRIANGLE_STRIP,o.TRIANGLE_FAN=i.a.TRIANGLE_FAN,o.BACK=i.a.BACK,o.FRONT=i.a.FRONT,o.FRONT_AND_BACK=i.a.FRONT_AND_BACK,o.CW=i.a.CW,o.CCW=i.a.CCW,t.a=o},function(e,t,n){"use strict";var r=n(1),i=n(2),a=n(67),o=n(9),s=n(0),u=n.n(s),l=n(7),c=u.a.mat4,f=0,h=r.a.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+f++),this.position||(this.position=new i.a),this.rotation||(this.rotation=new a.a),this.scale||(this.scale=new i.a(1,1,1)),this.worldTransform=new o.a,this.localTransform=new o.a,this._children=[]},{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var n=t._nodeRepository;delete n[this.name],n[e]=this}this.name=e},add:function(e){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var n=this._scene;n&&n!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var t=this._children,n=t.indexOf(e);n<0||(t.splice(n,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){for(var t=e._parent;t;){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,n=0;n<t.length;n++)if(t[n].name===e)return t[n]},getDescendantByName:function(e){for(var t=this._children,n=0;n<t.length;n++){var r=t[n];if(r.name===e)return r;var i=r.getDescendantByName(e);if(i)return i}},queryNode:function(e){if(e){for(var t=e.split("/"),n=this,r=0;r<t.length;r++){var i=t[r];if(i){for(var a=!1,o=n._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){n=u,a=!0;break}}if(!a)return}}return n}},getPath:function(e){if(!this._parent)return"/";for(var t=this._parent,n=this.name;t._parent&&(n=t.name+"/"+n,t._parent!=e);)t=t._parent;return!t._parent&&e?null:n},traverse:function(e,t,n){this._inIterating=!0,null!=n&&this.constructor!==n||e.call(t,this);for(var r=this._children,i=0,a=r.length;i<a;i++)r[i].traverse(e,t,n);this._inIterating=!1},eachChild:function(e,t,n){this._inIterating=!0;for(var r=this._children,i=null==n,a=0,o=r.length;a<o;a++){var s=r[a];(i||s.constructor===n)&&e.call(t,s,a)}this._inIterating=!1},setLocalTransform:function(e){c.copy(this.localTransform._array,e._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){c.copy(this.worldTransform._array,e._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=c.create();return function(t){var n=this.localTransform,r=this.worldTransform;this._parent?(c.invert(e,this._parent.worldTransform._array),c.multiply(n._array,e,r._array)):c.copy(n._array,r._array);var i=t?null:this.scale;n.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,n=this.scale;if(this.transformNeedsUpdate()){var r=this.localTransform._array;c.fromRotationTranslation(r,t._array,e._array),c.scale(r,r,n._array),t._dirty=!1,n._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform._array,t=this.worldTransform._array;this._parent?c.multiplyAffine(t,this._parent.worldTransform._array,e):c.copy(t,e)},updateWorldTransform:function(){for(var e=this;e&&e.getParent()&&e.getParent().transformNeedsUpdate();)e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,n=0,r=t.length;n<r;n++)t[n].update(e)},getBoundingBox:function(){function e(e){return!e.invisible}return function(t,n){n=n||new l.a,t=t||e;var r=this._children;0===r.length&&(n.max.set(-1/0,-1/0,-1/0),n.min.set(1/0,1/0,1/0));for(var i=new l.a,a=0;a<r.length;a++){var o=r[a];t(o)&&(o.getBoundingBox(t,i),o.updateLocalTransform(),i.isFinite()&&i.applyTransform(o.localTransform),0===a?n.copy(i):n.union(i))}return n}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform._array;if(e){var n=e._array;return n[0]=t[12],n[1]=t[13],n[2]=t[14],e}return new i.a(t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale);for(var n=0;n<t.length;n++)e.add(t[n].clone());return e},rotateAround:function(){var e=new i.a,t=new o.a;return function(n,r,i){e.copy(this.position).subtract(n);var a=this.localTransform;a.identity(),a.translate(n),a.rotate(i,r),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new o.a;return function(t,n){e.lookAt(this.position,t,n||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()});t.a=h},function(e,t,n){"use strict";function r(e,t){if(t.castShadow&&!e.castShadow)return!0}var i=n(16),a=n(14),o=n(7),s=i.a.extend(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],viewBoundingBoxLastFrame:new o.a,_lightUniforms:{},_lightNumber:{},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(e){e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},cloneNode:function(e){var t=e.clone(),n={},r=function(i,a){i.skeleton&&(a.skeleton=i.skeleton.clone(e,t),a.joints=i.joints.slice()),i.material&&(n[i.material.__GUID__]={oldMat:i.material});for(var o=0;o<i._children.length;o++)r(i._children[o],a._children[o])};r(e,t);for(var i in n)n[i].newMat=n[i].oldMat.clone();return t.traverse(function(e){e.material&&(e.material=n[e.material.__GUID__].newMat)}),t},update:function(e,t){if(this.autoUpdate||e){i.a.prototype.update.call(this,e);var n=this.lights,r=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,n.length=0,this._updateRenderQueue(this,r),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!t){var a=this._lightNumber;for(var o in a)for(var s in a[o])a[o][s]=0;for(var u=0;u<n.length;u++){var l=n[u],o=l.group;a[o]||(a[o]={}),a[o][l.type]=a[o][l.type]||0,a[o][l.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(e,t){if(!e.invisible)for(var n=0;n<e._children.length;n++){var r=e._children[n];r instanceof a.a&&this.lights.push(r),r.isRenderable()&&(r.material.transparent||t?this.transparentQueue[this._transparentObjectCount++]=r:this.opaqueQueue[this._opaqueObjectCount++]=r),r._children.length>0&&this._updateRenderQueue(r)}},_updateLightUniforms:function(){var e=this.lights;e.sort(r);var t=this._lightUniforms;for(var n in t)for(var i in t[n])t[n][i].value.length=0;for(var a=0;a<e.length;a++){var o=e[a],n=o.group;for(var i in o.uniformTemplates){var s=o.uniformTemplates[i];t[n]||(t[n]={}),t[n][i]||(t[n][i]={type:"",value:[]});var u=s.value(o),l=t[n][i];switch(l.type=s.type+"v",s.type){case"1i":case"1f":case"t":l.value.push(u);break;case"2f":case"3f":case"4f":for(var c=0;c<u.length;c++)l.value.push(u[c]);break;default:console.error("Unkown light uniform type "+s.type)}}}},isShaderLightNumberChanged:function(e){var t=e.lightGroup;for(var n in this._lightNumber[t])if(this._lightNumber[t][n]!==e.lightNumber[n])return!0;for(var n in e.lightNumber)if(this._lightNumber[t][n]!==e.lightNumber[n])return!0;return!1},setShaderLightNumber:function(e){var t=e.lightGroup;for(var n in this._lightNumber[t])e.lightNumber[n]=this._lightNumber[t][n];e.dirty()},setLightUniforms:function(e,t){var n=e.lightGroup;for(var r in this._lightUniforms[n]){var i=this._lightUniforms[n][r];if("tv"===i.type)for(var a=0;a<i.value.length;a++){var o=i.value[a],s=e.currentTextureSlot(),u=e.setUniform(t.gl,"1i",r,s);u&&e.takeCurrentTextureSlot(t,o)}else e.setUniform(t.gl,i.type,r,i.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});t.a=s},function(e,t,n){"use strict";function r(e){return"attr_"+e}var i=n(78),a=n(7),o=n(0),s=n.n(o),u=n(12),l=n(6),c=s.a.mat4,f=s.a.vec3,h=i.a.StaticAttribute,d=f.create,p=f.add,_=f.set,m=i.a.extend(function(){return{attributes:{position:new h("position","float",3,"POSITION"),texcoord0:new h("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new h("texcoord1","float",2,"TEXCOORD_1"),normal:new h("normal","float",3,"NORMAL"),tangent:new h("tangent","float",4,"TANGENT"),color:new h("color","float",4,"COLOR"),weight:new h("weight","float",3,"WEIGHT"),joint:new h("joint","float",4,"JOINT"),barycentric:new h("barycentric","float",3,null)},hint:l.a.STATIC_DRAW,indices:null,_normalType:"vertex",_enabledAttributes:null}},{updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new a.a);var t=this.attributes.position.value;if(t&&t.length){var n=e.min,r=e.max,i=n._array,o=r._array;f.set(i,t[0],t[1],t[2]),f.set(o,t[0],t[1],t[2]);for(var s=3;s<t.length;){var u=t[s++],l=t[s++],c=t[s++];u<i[0]&&(i[0]=u),l<i[1]&&(i[1]=l),c<i[2]&&(i[2]=c),u>o[0]&&(o[0]=u),l>o[1]&&(o[1]=l),c>o[2]&&(o[2]=c)}n._dirty=!0,r._dirty=!0}},dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(r(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=d());var n=this.indices;return t[0]=n[3*e],t[1]=n[3*e+1],t[2]=n[3*e+2],t}},setTriangleIndices:function(e,t){var n=this.indices;n[3*e]=t[0],n[3*e+1]=t[1],n[3*e+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,n=this.vertexCount>65535?u.a.Uint32Array:u.a.Uint16Array;if(e[0]&&e[0].length){var r=0;t=new n(3*e.length);for(var i=0;i<e.length;i++)for(var a=0;a<3;a++)t[r++]=e[i][a]}else t=new n(e);this.indices=t},createAttribute:function(e,t,n,r){var i=new h(e,t,n,r);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=i,this._attributeList.push(e),i},removeAttribute:function(e){var t=this._attributeList,n=t.indexOf(e);return n>=0&&(t.splice(n,1),delete this.attributes[e],!0)},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var n=[],r=this.vertexCount,i=0;i<t.length;i++){var a=t[i],o=this.attributes[a];o.value&&o.value.length===r*o.size&&n.push(a)}return this._enabledAttributes=n,n},getBufferChunks:function(e){var t=this._cache;t.use(e.__GUID__);var n=t.isDirty("attributes"),i=t.isDirty("indices");if(n||i){this._updateBuffer(e.gl,n,i);for(var a=this.getEnabledAttributes(),o=0;o<a.length;o++)t.fresh(r(a[o]));t.fresh("attributes"),t.fresh("indices")}return t.get("chunks")},_updateBuffer:function(e,t,n){var a=this._cache,o=a.get("chunks"),s=!1;o||(o=[],o[0]={attributeBuffers:[],indicesBuffer:null},a.put("chunks",o),s=!0);var u=o[0],l=u.attributeBuffers,c=u.indicesBuffer;if(t||s){var f=this.getEnabledAttributes(),h={};if(!s)for(var d=0;d<l.length;d++)h[l[d].name]=l[d];for(var p=0;p<f.length;p++){var _,m=f[p],g=this.attributes[m];s||(_=h[m]);var v;v=_?_.buffer:e.createBuffer(),a.isDirty(r(m))&&(e.bindBuffer(e.ARRAY_BUFFER,v),e.bufferData(e.ARRAY_BUFFER,g.value,this.hint)),l[p]=new i.a.AttributeBuffer(m,g.type,v,g.size,g.semantic)}for(var d=p;d<l.length;d++)e.deleteBuffer(l[d].buffer);l.length=p}this.isUseIndices()&&(n||s)&&(c||(c=new i.a.IndicesBuffer(e.createBuffer()),u.indicesBuffer=c),c.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,c.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.hint))},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,n=t.position.value,r=t.normal.value;if(r&&r.length===n.length)for(var i=0;i<r.length;i++)r[i]=0;else r=t.normal.value=new u.a.Float32Array(n.length);for(var a=d(),o=d(),s=d(),l=d(),c=d(),h=d(),p=0;p<e.length;){var m=e[p++],g=e[p++],v=e[p++];_(a,n[3*m],n[3*m+1],n[3*m+2]),_(o,n[3*g],n[3*g+1],n[3*g+2]),_(s,n[3*v],n[3*v+1],n[3*v+2]),f.sub(l,a,o),f.sub(c,o,s),f.cross(h,l,c);for(var i=0;i<3;i++)r[3*m+i]=r[3*m+i]+h[i],r[3*g+i]=r[3*g+i]+h[i],r[3*v+i]=r[3*v+i]+h[i]}for(var i=0;i<r.length;)_(h,r[i],r[i+1],r[i+2]),f.normalize(h,h),r[i++]=h[0],r[i++]=h[1],r[i++]=h[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,n=t.position.value,r=t.normal.value,i=d(),a=d(),o=d(),s=d(),u=d(),l=d();r||(r=t.normal.value=new Float32Array(n.length));for(var c=0;c<e.length;){var h=e[c++],p=e[c++],m=e[c++];_(i,n[3*h],n[3*h+1],n[3*h+2]),_(a,n[3*p],n[3*p+1],n[3*p+2]),_(o,n[3*m],n[3*m+1],n[3*m+2]),f.sub(s,i,a),f.sub(u,a,o),f.cross(l,s,u),f.normalize(l,l);for(var g=0;g<3;g++)r[3*h+g]=l[g],r[3*p+g]=l[g],r[3*m+g]=l[g]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(4*e));var n=t.texcoord0.value,r=t.position.value,i=t.tangent.value,a=t.normal.value;if(!n)return void console.warn("Geometry without texcoords can't generate tangents.");for(var o=[],s=[],u=0;u<e;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var l=[0,0,0],c=[0,0,0],h=this.indices,u=0;u<h.length;){var _=h[u++],m=h[u++],g=h[u++],v=n[2*_],y=n[2*m],x=n[2*g],T=n[2*_+1],E=n[2*m+1],b=n[2*g+1],S=r[3*_],A=r[3*m],w=r[3*g],N=r[3*_+1],C=r[3*m+1],R=r[3*g+1],M=r[3*_+2],L=r[3*m+2],P=r[3*g+2],D=A-S,I=w-S,O=C-N,F=R-N,k=L-M,B=P-M,U=y-v,H=x-v,G=E-T,z=b-T,q=1/(U*z-G*H);l[0]=(z*D-G*I)*q,l[1]=(z*O-G*F)*q,l[2]=(z*k-G*B)*q,c[0]=(U*I-H*D)*q,c[1]=(U*F-H*O)*q,c[2]=(U*B-H*k)*q,p(o[_],o[_],l),p(o[m],o[m],l),p(o[g],o[g],l),p(s[_],s[_],c),p(s[m],s[m],c),p(s[g],s[g],c)}for(var W=d(),V=d(),j=d(),u=0;u<e;u++){j[0]=a[3*u],j[1]=a[3*u+1],j[2]=a[3*u+2];var X=o[u];f.scale(W,j,f.dot(j,X)),f.sub(W,X,W),f.normalize(W,W),f.cross(V,j,X),i[4*u]=W[0],i[4*u+1]=W[1],i[4*u+2]=W[2],i[4*u+3]=f.dot(V,s[u])<0?1:-1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount){this.indices.length>65535&&(this.indices=new u.a.Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,n=this.getEnabledAttributes(),r={},i=0;i<n.length;i++){var a=n[i];r[a]=e[a].value,e[a].init(this.indices.length)}for(var o=0,s=0;s<t.length;s++){for(var l=t[s],i=0;i<n.length;i++)for(var a=n[i],c=e[a].value,f=e[a].size,h=0;h<f;h++)c[o*f+h]=r[a][l*f+h];t[s]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,n=this.indices;if(!t||t.length!==3*n.length){t=e.barycentric.value=new Float32Array(3*n.length);for(var r=0;r<n.length;)for(var i=0;i<3;i++){var a=n[r++];t[3*a+i]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,n=t.position.value,r=t.normal.value,i=t.tangent.value;e=e._array;var a=c.create();c.invert(a,e),c.transpose(a,a);var o=f.transformMat4,s=f.forEach;s(n,3,0,null,o,e),r&&s(r,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var n=t.get("chunks");if(n)for(var r=0;r<n.length;r++)for(var i=n[r],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}t.deleteContext(e.__GUID__)}});Object.defineProperty&&(Object.defineProperty(m.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e&&e.value?e.value.length/e.size:0}}),Object.defineProperty(m.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}})),m.Attribute=i.a.StaticAttribute,t.a=m},function(e,t,n){"use strict";function r(e){return"CANVAS"===e.nodeName||"VIDEO"===e.nodeName||e.complete}var i=n(4),a=n(6),o=n(11),s=n(43),u=s.a.isPowerOfTwo,l=["px","nx","py","ny","pz","nz"],c=i.a.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var n=this.format,r=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.wrapS),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.wrapT),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.magFilter),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.minFilter);var i=e.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===r){e.getGLExtension("OES_texture_half_float")||(r=a.a.FLOAT)}if(this.mipmaps.length)for(var o=this.width,s=this.height,u=0;u<this.mipmaps.length;u++){var l=this.mipmaps[u];this._updateTextureData(t,l,u,o,s,n,r),o/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,n,r),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,n,r,i,a,o){for(var s=0;s<6;s++){var u=l[s],c=t.image&&t.image[u];c?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,n,a,a,o,c):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,n,a,r,i,0,a,o,t.pixels&&t.pixels[u])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?u(this.image.px.width)&&u(this.image.px.height):u(this.width)&&u(this.height)},isRenderable:function(){return this.image.px?r(this.image.px)&&r(this.image.nx)&&r(this.image.py)&&r(this.image.ny)&&r(this.image.pz)&&r(this.image.nz):!(!this.width||!this.height)},load:function(e,t){var n=0,r=this;return o.a.each(e,function(e,i){var a=new Image;t&&(a.crossOrigin=t),a.onload=function(){n--,0===n&&(r.dirty(),r.trigger("success",r)),a.onload=null},a.onerror=function(){n--,a.onerror=null},n++,a.src=e,r.image[i]=a}),this}});Object.defineProperty(c.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(c.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}}),t.a=c},function(e,t,n){"use strict";function r(){this._pool={}}function i(e,t,n){o[e]={vertex:t,fragment:n}}var a=n(3),o=(n(11),{});r.prototype.get=function(e,t){var n,r=[],i={},s={};"string"==typeof t?r=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(t)?(r=t.textures||[],i=t.vertexDefines||{},s=t.fragmentDefines||{},n=t.precision):Array.isArray(t)&&(r=t);var u=Object.keys(i),l=Object.keys(s);r.sort(),u.sort(),l.sort();var c=[e];c=c.concat(r);for(var f=0;f<u.length;f++)c.push(u[f],i[u[f]]);for(var f=0;f<l.length;f++)c.push(l[f],s[l[f]]);n&&c.push(n);var h=c.join("_");if(this._pool[h])return this._pool[h];var d=o[e];if(!d)return void console.error('Shader "'+e+'" is not in the library');var p=new a.a({vertex:d.vertex,fragment:d.fragment});n&&(p.precision=n);for(var f=0;f<r.length;f++)p.enableTexture(r[f]);for(var e in i)p.define("vertex",e,i[e]);for(var e in s)p.define("fragment",e,s[e]);return this._pool[h]=p,p},r.prototype.clear=function(){this._pool={}};var s=new r;t.a={createLibrary:function(){return new r},get:function(){return s.get.apply(s,arguments)},template:i,clear:function(){return s.clear()}}},function(e,t,n){"use strict";var r=n(1),i=r.a.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(e,t){var n=this.outputs[e],r=n.parameters,i=n._parametersCopy;if(i||(i=n._parametersCopy={}),r)for(var a in r)"width"!==a&&"height"!==a&&(i[a]=r[a]);var o,s;return o=r.width instanceof Function?r.width.call(this,t):r.width,s=r.height instanceof Function?r.height.call(this,t):r.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),i.width=o,i.height=s,i},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(null==t)return t=e,this._outputTextures[t];var n=this.outputs[t];if(n)return this._rendered?n.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(n.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t])},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,n){this.inputLinks[e]={node:t,pin:n},t.outputLinks[n]||(t.outputLinks[n]=[]),t.outputLinks[n].push({node:this,pin:e}),this.pass.material.shader.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var n=this.inputLinks[t];n.node.updateReference(n.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}});t.a=i},function(e,t,n){"use strict";function r(e,t){this.action=e,this.context=t}var i={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],n=t.length,r=-1,i=arguments;switch(i.length){case 1:for(;++r<n;)t[r].action.call(t[r].context);return;case 2:for(;++r<n;)t[r].action.call(t[r].context,i[1]);return;case 3:for(;++r<n;)t[r].action.call(t[r].context,i[1],i[2]);return;case 4:for(;++r<n;)t[r].action.call(t[r].context,i[1],i[2],i[3]);return;case 5:for(;++r<n;)t[r].action.call(t[r].context,i[1],i[2],i[3],i[4]);return;default:for(;++r<n;)t[r].action.apply(t[r].context,Array.prototype.slice.call(i,1));return}}},on:function(e,t,n){if(e&&t){var i=this.__handlers__||(this.__handlers__={});if(i[e]){if(this.has(e,t))return}else i[e]=[];var a=new r(t,n||this);return i[e].push(a),this}},once:function(e,t,n){function r(){i.off(e,r),t.apply(this,arguments)}if(e&&t){var i=this;return this.on(e,r,n)}},before:function(e,t,n){if(e&&t)return e="before"+e,this.on(e,t,n)},after:function(e,t,n){if(e&&t)return e="after"+e,this.on(e,t,n)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var n=this.__handlers__||(this.__handlers__={});if(!t)return void(n[e]=[]);if(n[e]){for(var r=n[e],i=[],a=0;a<r.length;a++)t&&r[a].action!==t&&i.push(r[a]);n[e]=i}return this},has:function(e,t){var n=this.__handlers__;if(!n||!n[e])return!1;for(var r=n[e],i=0;i<r.length;i++)if(r[i].action===t)return!0}};t.a=i},function(e,t,n){"use strict";var r=function(){this._contextId=0,this._caches=[],this._context={}};r.prototype={use:function(e,t){var n=this._caches;n[e]||(n[e]={},t&&(n[e]=t())),this._contextId=e,this._context=n[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t="__dt__"+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t="__dt__"+e,n=this._caches,r=0;r<n.length;r++)n[r]&&(n[r][t]=!0)},fresh:function(e){e=e||"";var t="__dt__"+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t="__dt__"+e,n=this._caches,r=0;r<n.length;r++)n[r]&&(n[r][t]=!1)},isDirty:function(e){e=e||"";var t="__dt__"+e,n=this._context;return!n.hasOwnProperty(t)||!0===n[t]},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){Object.keys(this._caches).forEach(function(n){e&&e.call(t,n)})},miss:function(e){return!this._context.hasOwnProperty(e)}},r.prototype.constructor=r,t.a=r},function(e,t,n){"use strict";var r=n(0),i=n.n(r),a=i.a.vec2,o=function(e,t){e=e||0,t=t||0,this._array=a.fromValues(e,t),this._dirty=!0};if(o.prototype={constructor:o,add:function(e){return a.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t){return this._array[0]=e,this._array[1]=t,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._dirty=!0,this},clone:function(){return new o(this.x,this.y)},copy:function(e){return a.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return a.cross(e._array,this._array,t._array),e._dirty=!0,this},dist:function(e){return a.dist(this._array,e._array)},distance:function(e){return a.distance(this._array,e._array)},div:function(e){return a.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return a.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return a.dot(this._array,e._array)},len:function(){return a.len(this._array)},length:function(){return a.length(this._array)},lerp:function(e,t,n){return a.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},min:function(e){return a.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return a.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return a.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return a.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return a.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return a.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return a.random(this._array,e),this._dirty=!0,this},scale:function(e){return a.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return a.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return a.sqrDist(this._array,e._array)},squaredDistance:function(e){return a.squaredDistance(this._array,e._array)},sqrLen:function(){return a.sqrLen(this._array)},squaredLength:function(){return a.squaredLength(this._array)},sub:function(e){return a.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return a.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat2:function(e){return a.transformMat2(this._array,this._array,e._array),this._dirty=!0,this},transformMat2d:function(e){return a.transformMat2d(this._array,this._array,e._array),this._dirty=!0,this},transformMat3:function(e){return a.transformMat3(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return a.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Object.defineProperty){var s=o.prototype;Object.defineProperty(s,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),Object.defineProperty(s,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}})}o.add=function(e,t,n){return a.add(e._array,t._array,n._array),e._dirty=!0,e},o.set=function(e,t,n){return a.set(e._array,t,n),e._dirty=!0,e},o.copy=function(e,t){return a.copy(e._array,t._array),e._dirty=!0,e},o.cross=function(e,t,n){return a.cross(e._array,t._array,n._array),e._dirty=!0,e},o.dist=function(e,t){return a.distance(e._array,t._array)},o.distance=o.dist,o.div=function(e,t,n){return a.divide(e._array,t._array,n._array),e._dirty=!0,e},o.divide=o.div,o.dot=function(e,t){return a.dot(e._array,t._array)},o.len=function(e){return a.length(e._array)},o.lerp=function(e,t,n,r){return a.lerp(e._array,t._array,n._array,r),e._dirty=!0,e},o.min=function(e,t,n){return a.min(e._array,t._array,n._array),e._dirty=!0,e},o.max=function(e,t,n){return a.max(e._array,t._array,n._array),e._dirty=!0,e},o.mul=function(e,t,n){return a.multiply(e._array,t._array,n._array),e._dirty=!0,e},o.multiply=o.mul,o.negate=function(e,t){return a.negate(e._array,t._array),e._dirty=!0,e},o.normalize=function(e,t){return a.normalize(e._array,t._array),e._dirty=!0,e},o.random=function(e,t){return a.random(e._array,t),e._dirty=!0,e},o.scale=function(e,t,n){return a.scale(e._array,t._array,n),e._dirty=!0,e},o.scaleAndAdd=function(e,t,n,r){return a.scaleAndAdd(e._array,t._array,n._array,r),e._dirty=!0,e},o.sqrDist=function(e,t){return a.sqrDist(e._array,t._array)},o.squaredDistance=o.sqrDist,o.sqrLen=function(e){return a.sqrLen(e._array)},o.squaredLength=o.sqrLen,o.sub=function(e,t,n){return a.subtract(e._array,t._array,n._array),e._dirty=!0,e},o.subtract=o.sub,o.transformMat2=function(e,t,n){return a.transformMat2(e._array,t._array,n._array),e._dirty=!0,e},o.transformMat2d=function(e,t,n){return a.transformMat2d(e._array,t._array,n._array),e._dirty=!0,e},o.transformMat3=function(e,t,n){return a.transformMat3(e._array,t._array,n._array),e._dirty=!0,e},o.transformMat4=function(e,t,n){return a.transformMat4(e._array,t._array,n._array),e._dirty=!0,e},t.a=o},function(e,t,n){"use strict";function r(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var n=t.loaded/t.total;e.onprogress(n,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(n){e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}t.a={get:r}},function(e,t,n){"use strict";var r=n(45),i=r.a.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix._array,t=2*Math.atan(1/e[5]);this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=r.a.prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}});t.a=i},function(e,t,n){"use strict";var r=n(45),i=r.a.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix._array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=r.a.prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}});t.a=i},function(e,t,n){"use strict";function r(e,t){for(var n=0,r=1/t,i=e;i>0;)n+=r*(i%t),i=Math.floor(i/t),r/=t;return n}t.a=r},function(e,t,n){"use strict";function r(e){return!e||"none"===e}function i(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof Image}function a(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function o(e){if((e.wrapS===s.a.REPEAT||e.wrapT===s.a.REPEAT)&&e.image){var t=a(e.width),n=a(e.height);if(t!==e.width||n!==e.height){var r=document.createElement("canvas");r.width=t,r.height=n;r.getContext("2d").drawImage(e.image,0,0,t,n),r.srcImage=e.image,e.image=r}}}var s=n(4),u=n(8),l=n(62),c=n.n(l),f=n(33),h=n(118),d=n(123),p=n(124),_=n(126),m=n.n(_),g=n(5);u.a.prototype.setTextureImage=function(e,t,n,i){if(this.shader){var a,o=this;return o.shader.disableTexture(e),r(t)||(a=v.loadTexture(t,n,i,function(t){o.shader.enableTexture(e),n.refresh()}),o.set(e,a)),a}};var v={},y=f.a.createBlank("rgba(255,255,255,0)").image;v.firstNotNull=function(){for(var e=0,t=arguments.length;e<t;e++)if(null!=arguments[e])return arguments[e]},v.loadTexture=function(e,t,n,r){"function"==typeof n&&(r=n,n={}),n=n||{};for(var a=Object.keys(n).sort(),s="",u=0;u<a.length;u++)s+=a[u]+"_"+n[a[u]]+"_";var l=t.__textureCache=t.__textureCache||new c.a(20);if(i(e)){var h=e.__textureid__,d=l.get(s+h);if(!d){d={texture:new g.a({image:e})};for(var u=0;u<a.length;u++)d.texture[a[u]]=n[a[u]];h=e.__textureid__||"__ecgl_image__"+d.texture.__GUID__,e.__textureid__=h,l.put(s+h,d),o(d.texture),r&&r(d.texture)}return d.texture}var d=l.get(s+e);if(d)d.callbacks?d.callbacks.push(r):r&&r(d.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){d={callbacks:[r]};var p=f.a.loadTexture(e,{exposure:n.exposure,fileType:"hdr"},function(){p.dirty(),d.callbacks.forEach(function(e){e&&e(p)}),d.callbacks=null});d.texture=p,l.put(s+e,d)}else{for(var p=new g.a({image:new Image}),u=0;u<a.length;u++)p[a[u]]=n[a[u]];d={texture:p,callbacks:[r]};var _=p.image;_.onload=function(){p.image=_,o(p),p.dirty(),d.callbacks.forEach(function(e){e&&e(p)}),d.callbacks=null},_.src=e,p.image=y,l.put(s+e,d)}return d.texture},v.createAmbientCubemap=function(e,t,n){e=e||{};var r,i,a=t.getRenderer(),o=e.texture,s=v.firstNotNull(e.exposure,1);return 0!==e.diffuseIntensity&&(i=new d.a({coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]})),0!==e.specularIntensity?(r=new h.a,r.cubemap=v.loadTexture(o,t,{exposure:s},function(e){r.cubemap=e,e.flipY=!1,r.prefilter(a,32),i.coefficients=p.a.projectEnvironmentMap(a,r.cubemap,{lod:1}),setTimeout(function(){n&&n()})})):setTimeout(function(){n&&n()}),{specular:r,diffuse:i}},v.createBlankTexture=f.a.createBlank,v.isImage=i,v.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)},v.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=m.a.parse(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)},v.stringifyColor=function(e,t){return e=e.slice(),e[0]=Math.round(255*e[0]),e[1]=Math.round(255*e[1]),e[2]=Math.round(255*e[2]),"hex"===t?"#"+((1<<24)+(e[0]<<16)+(e[1]<<8)+e[2]).toString(16).slice(1):m.a.stringify(e,t)},v.directionFromAlphaBeta=function(e,t){var n=e/180*Math.PI+Math.PI/2,r=-t/180*Math.PI+Math.PI/2,i=[],a=Math.sin(n);return i[0]=a*Math.cos(r),i[1]=-Math.cos(n),i[2]=a*Math.sin(r),i},t.a=v},function(e,t,n){"use strict";var r=n(1),i=n(70),a=n(6),o=(n(12),n(7)),s=n(9),u=(n(20),n(8)),l=n(24),c=n(3),f=n(37),h=n(38),d=n(0),p=n.n(d);c.a.import(f.a),c.a.import(h.a);var _=p.a.mat4,m=p.a.vec3,g=_.create,v={},y=r.a.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new i.a(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(e){throw"Error creating WebGL Context "+e}},{resize:function(e,t){var n=this.canvas,r=this.devicePixelRatio;null!=e?(n.style.width=e+"px",n.style.height=t+"px",n.width=e*r,n.height=t*r,this._width=e,this._height=t):(this._width=n.width/r,this._height=n.height/r),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,n,r,i){if("object"==typeof e){var a=e;e=a.x,t=a.y,n=a.width,r=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(e*i,t*i,n*i,r*i),this.viewport={x:e,y:t,width:n,height:r,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},beforeRenderObject:function(){},afterRenderObject:function(){},render:function(e,t,n,r){var i=this.gl;this._sceneRendering=e;var a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}n||e.update(!1),t.getScene()||t.update(!0);for(var l=e.opaqueQueue,c=e.transparentQueue,f=e.material,h=0;h<l.length;h++){var d=l[h].material;d.updateShader&&d.updateShader(this)}for(var h=0;h<c.length;h++){var d=c[h].material;d.updateShader&&d.updateShader(this)}if(e.trigger("beforerender",this,e,t),c.length>0)for(var p=g(),v=m.create(),h=0;h<c.length;h++){var y=c[h];_.multiplyAffine(p,t.viewMatrix._array,y.worldTransform._array),m.transformMat4(v,y.position._array,p),y.__depth=v[2]}l.sort(this.opaqueSortFunc),c.sort(this.transparentSortFunc),e.trigger("beforerender:opaque",this,l),e.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),e.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),i.disable(i.BLEND),i.enable(i.DEPTH_TEST);var x=this.renderQueue(l,t,f,r);e.trigger("afterrender:opaque",this,l,x),e.trigger("beforerender:transparent",this,c),i.enable(i.BLEND);var T=this.renderQueue(c,t,f);e.trigger("afterrender:transparent",this,c,T);var E={};for(var b in x)E[b]=x[b]+T[b];return e.trigger("afterrender",this,e,t,E),this._sceneRendering=null,E},resetRenderStatus:function(){this._currentShader=null},ifRenderObject:function(e){return!0},renderQueue:function(e,t,n,r){var i={triangleCount:0,vertexCount:0,drawCallCount:0,meshCount:e.length,renderedMeshCount:0},a=this.viewport,o=a.devicePixelRatio,s=[a.x*o,a.y*o,a.width*o,a.height*o],u=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*u,this._height*u],c=[s[2],s[3]],f=Date.now();_.copy(x.VIEW,t.viewMatrix._array),_.copy(x.PROJECTION,t.projectionMatrix._array),_.multiply(x.VIEWPROJECTION,t.projectionMatrix._array,x.VIEW),_.copy(x.VIEWINVERSE,t.worldTransform._array),_.invert(x.PROJECTIONINVERSE,x.PROJECTION),_.invert(x.VIEWPROJECTIONINVERSE,x.VIEWPROJECTION);var h,d,p,m=this.gl,g=this._sceneRendering;r?p=this._renderPreZ(e,g,t):(p=e,m.depthFunc(m.LESS));for(var y,T,E,b,S,A=0;A<p.length;A++){var w=p[A];if(this.ifRenderObject(w)){var N=w.geometry,C=w.isSkinnedMesh()?x.IDENTITY:w.worldTransform._array;if(_.multiplyAffine(x.WORLDVIEW,x.VIEW,C),!N.boundingBox||r||!this.isFrustumCulled(w,g,t,x.WORLDVIEW,x.PROJECTION)){var R=n||w.material,M=R.shader;_.copy(x.WORLD,C),_.multiply(x.WORLDVIEWPROJECTION,x.VIEWPROJECTION,C),(M.matrixSemantics.WORLDINVERSE||M.matrixSemantics.WORLDINVERSETRANSPOSE)&&_.invert(x.WORLDINVERSE,C),(M.matrixSemantics.WORLDVIEWINVERSE||M.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&_.invert(x.WORLDVIEWINVERSE,x.WORLDVIEW),(M.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||M.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&_.invert(x.WORLDVIEWPROJECTIONINVERSE,x.WORLDVIEWPROJECTION),w.beforeRender(this),this.beforeRenderObject(w,h,d);if(!M.isEqual(d)){g&&g.isShaderLightNumberChanged(M)&&g.setShaderLightNumber(M);var L=M.bind(this);if(L){if(v[M.__GUID__])continue;if(v[M.__GUID__]=!0,this.throwError)throw new Error(L);this.trigger("error",L)}M.setUniformOfSemantic(m,"VIEWPORT",s),M.setUniformOfSemantic(m,"WINDOW_SIZE",l),M.setUniformOfSemantic(m,"NEAR",t.near),M.setUniformOfSemantic(m,"FAR",t.far),M.setUniformOfSemantic(m,"DEVICEPIXELRATIO",o),M.setUniformOfSemantic(m,"TIME",f),M.setUniformOfSemantic(m,"VIEWPORT_SIZE",c),g&&g.setLightUniforms(M,this)}else M=d;h!==R&&(r||(R.depthTest!==y&&(R.depthTest?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),y=R.depthTest),R.depthMask!==T&&(m.depthMask(R.depthMask),T=R.depthMask)),R.bind(this,M,h,d),h=R,R.transparent&&(R.blend?R.blend(m):(m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA))));for(var P=M.matrixSemanticKeys,D=0;D<P.length;D++){var I=P[D],O=M.matrixSemantics[I],F=x[I];if(O.isTranspose){var k=x[O.semanticNoTranspose];_.transpose(F,k)}M.setUniform(m,O.type,O.symbol,F)}w.cullFace!==b&&(b=w.cullFace,m.cullFace(b)),w.frontFace!==S&&(S=w.frontFace,m.frontFace(S)),w.culling!==E&&(E=w.culling,E?m.enable(m.CULL_FACE):m.disable(m.CULL_FACE));var B=w.render(this,M);B&&(i.triangleCount+=B.triangleCount,i.vertexCount+=B.vertexCount,i.drawCallCount+=B.drawCallCount,i.renderedMeshCount++),this.afterRenderObject(w,B),w.afterRender(this,B),d=M}}}return i},_renderPreZ:function(e,t,n){var r=this.gl,i=this._prezMaterial||new u.a({shader:new c.a({vertex:c.a.source("qtek.prez.vertex"),fragment:c.a.source("qtek.prez.fragment")})});this._prezMaterial=i;var a,o,s,l=i.shader,f=[];l.bind(this),r.colorMask(!1,!1,!1,!1),r.depthMask(!0),r.enable(r.DEPTH_TEST);for(var h=0;h<e.length;h++){var d=e[h];if(this.ifRenderObject(d)){var p=d.isSkinnedMesh()?x.IDENTITY:d.worldTransform._array,m=d.geometry;if(_.multiplyAffine(x.WORLDVIEW,x.VIEW,p),!(m.boundingBox&&this.isFrustumCulled(d,t,n,x.WORLDVIEW,x.PROJECTION)||(f.push(d),d.skeleton||d.ignorePreZ))){_.multiply(x.WORLDVIEWPROJECTION,x.VIEWPROJECTION,p),d.cullFace!==o&&(o=d.cullFace,r.cullFace(o)),d.frontFace!==s&&(s=d.frontFace,r.frontFace(s)),d.culling!==a&&(a=d.culling,a?r.enable(r.CULL_FACE):r.disable(r.CULL_FACE));var g=l.matrixSemantics.WORLDVIEWPROJECTION;l.setUniform(r,g.type,g.symbol,x.WORLDVIEWPROJECTION),d.render(this,i.shader)}}}return r.depthFunc(r.LEQUAL),r.colorMask(!0,!0,!0,!0),r.depthMask(!0),f},isFrustumCulled:function(){var e=new o.a,t=new s.a;return function(n,r,i,a,o){var s=n.boundingBox||n.geometry.boundingBox;if(t._array=a,e.copy(s),e.applyTransform(t),r&&n.isRenderable()&&n.castShadow&&r.viewBoundingBoxLastFrame.union(e),n.frustumCulling&&!n.isSkinnedMesh()){if(!e.intersectBoundingBox(i.frustum.boundingBox))return!0;t._array=o,e.max._array[2]>0&&e.min._array[2]<0&&(e.max._array[2]=-1e-20),e.applyProjection(t);var u=e.min._array,l=e.max._array;if(l[0]<-1||u[0]>1||l[1]<-1||u[1]>1||l[2]<-1||u[2]>1)return!0}return!1}}(),disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,n){var r={};e.getParent()&&e.getParent().remove(e),e.traverse(function(e){e.geometry&&t&&e.geometry.dispose(this),e.material&&(r[e.material.__GUID__]=e.material),e.dispose&&e.dispose(this)},this);for(var i in r){r[i].dispose(this,n)}},disposeShader:function(e){e.dispose(this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,n){n||(n=new l.a),t=this._height-t;var r=this.viewport,i=n._array;return i[0]=(e-r.x)/r.width,i[0]=2*i[0]-1,i[1]=(t-r.y)/r.height,i[1]=2*i[1]-1,n}});y.opaqueSortFunc=y.prototype.opaqueSortFunc=function(e,t){return e.renderOrder===t.renderOrder?e.material.shader===t.material.shader?e.material===t.material?e.geometry.__GUID__-t.geometry.__GUID__:e.material.__GUID__-t.material.__GUID__:e.material.shader.__GUID__-t.material.shader.__GUID__:e.renderOrder-t.renderOrder},y.transparentSortFunc=y.prototype.transparentSortFunc=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.material.shader===t.material.shader?e.material===t.material?e.geometry.__GUID__-t.geometry.__GUID__:e.material.__GUID__-t.material.__GUID__:e.material.shader.__GUID__-t.material.shader.__GUID__:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var x={IDENTITY:g(),WORLD:g(),VIEW:g(),PROJECTION:g(),WORLDVIEW:g(),VIEWPROJECTION:g(),WORLDVIEWPROJECTION:g(),WORLDINVERSE:g(),VIEWINVERSE:g(),PROJECTIONINVERSE:g(),WORLDVIEWINVERSE:g(),VIEWPROJECTIONINVERSE:g(),WORLDVIEWPROJECTIONINVERSE:g(),WORLDTRANSPOSE:g(),VIEWTRANSPOSE:g(),PROJECTIONTRANSPOSE:g(),WORLDVIEWTRANSPOSE:g(),VIEWPROJECTIONTRANSPOSE:g(),WORLDVIEWPROJECTIONTRANSPOSE:g(),WORLDINVERSETRANSPOSE:g(),VIEWINVERSETRANSPOSE:g(),PROJECTIONINVERSETRANSPOSE:g(),WORLDVIEWINVERSETRANSPOSE:g(),VIEWPROJECTIONINVERSETRANSPOSE:g(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:g()};y.COLOR_BUFFER_BIT=a.a.COLOR_BUFFER_BIT,y.DEPTH_BUFFER_BIT=a.a.DEPTH_BUFFER_BIT,y.STENCIL_BUFFER_BIT=a.a.STENCIL_BUFFER_BIT,t.a=y},function(e,t,n){"use strict";function r(){}var i=n(75),a=function(e){e=e||{},this.name=e.name||"",this.target=e.target,this.life=e.life||1e3,this.delay=e.delay||0,this.gap=e.gap||0,this.playbackRate=e.playbackRate||1,this._initialized=!1,this._elapsedTime=0,this._loop=null!=e.loop&&e.loop,this.setLoop(this._loop),null!=e.easing&&this.setEasing(e.easing),this.onframe=e.onframe||r,this.onfinish=e.onfinish||r,this.onrestart=e.onrestart||r,this._paused=!1};a.prototype={gap:0,life:0,delay:0,setLoop:function(e){this._loop=e,e&&(this._loopRemained="number"==typeof e?e:1e8)},setEasing:function(e){"string"==typeof e&&(e=i.a[e]),this.easing=e},step:function(e,t,n){if(this._initialized||(this._startTime=e+this.delay,this._initialized=!0),null!=this._currentTime&&(t=e-this._currentTime),this._currentTime=e,this._paused)return"paused";if(!(e<this._startTime)){this._elapse(e,t);var r=Math.min(this._elapsedTime/this.life,1);if(!(r<0)){var i;return i=this.easing?this.easing(r):r,n||this.fire("frame",i),1===r?this._loop&&this._loopRemained>0?(this._restartInLoop(e),this._loopRemained--,"restart"):(this._needsRemove=!0,"finish"):null}}},setTime:function(e){return this.step(e+this._startTime)},restart:function(e){var t=0;e&&(this._elapse(e),t=this._elapsedTime%this.life),e=e||Date.now(),this._startTime=e-t+this.delay,this._elapsedTime=0,this._needsRemove=!1,this._paused=!1},getElapsedTime:function(){return this._elapsedTime},_restartInLoop:function(e){this._startTime=e+this.gap,this._elapsedTime=0},_elapse:function(e,t){this._elapsedTime+=t*this.playbackRate},fire:function(e,t){var n="on"+e;this[n]&&this[n](this.target,t)},clone:function(){var e=new this.constructor;return e.name=this.name,e._loop=this._loop,e._loopRemained=this._loopRemained,e.life=this.life,e.gap=this.gap,e.delay=this.delay,e},pause:function(){this._paused=!0},resume:function(){this._paused=!1}},a.prototype.constructor=a,t.a=a},function(e,t,n){"use strict";var r=n(18),i=n(7),a=r.a.extend({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var e=this.heightSegments,t=this.widthSegments,n=this.attributes,r=[],a=[],o=[],s=[],u=0;u<=e;u++)for(var l=u/e,c=0;c<=t;c++){var f=c/t;if(r.push([2*f-1,2*l-1,0]),a&&a.push([f,l]),o&&o.push([0,0,1]),c<t&&u<e){var h=c+u*(t+1);s.push([h,h+1,h+t+1]),s.push([h+t+1,h+1,h+t+2])}}n.position.fromArray(r),n.texcoord0.fromArray(a),n.normal.fromArray(o),this.initIndicesFromArray(s),this.boundingBox=new i.a,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});t.a=a},function(e,t,n){"use strict";var r=n(5),i=n(19),a=n(25),o=n(34),s=n(35),u=n(17),l=n(96),c=n(97),f={loadTexture:function(e,t,n,a){var o;if("function"==typeof t?(n=t,a=n,t={}):t=t||{},"string"==typeof e){if(e.match(/.hdr$/)||"hdr"===t.fileType)return o=new r.a({width:0,height:0}),f._fetchTexture(e,function(e){c.a.parseRGBE(e,o,t.exposure),o.dirty(),n&&n(o)},a),o;e.match(/.dds$/)||"dds"===t.fileType?(o=new r.a({width:0,height:0}),f._fetchTexture(e,function(e){l.a.parse(e,o),o.dirty(),n&&n(o)},a)):(o=new r.a,o.load(e),o.success(n),o.error(a))}else if("object"==typeof e&&void 0!==e.px){var o=new i.a;o.load(e),o.success(n),o.error(a)}return o},loadPanorama:function(e,t,n,r,i,a){var o=this;"function"==typeof r?(i=r,a=i,r={}):r=r||{},f.loadTexture(t,r,function(t){t.flipY=r.flipY||!1,o.panoramaToCubeMap(e,t,n,r),t.dispose(e),i&&i(n)},a)},panoramaToCubeMap:function(e,t,n,r){var i=new o.a,a=new s.a({scene:new u.a});return a.material.set("diffuseMap",t),r=r||{},r.encodeRGBM&&a.material.shader.define("fragment","RGBM_ENCODE"),i.texture=n,i.render(e,a.scene),i.texture=null,i.dispose(e),n},heightToNormal:function(e,t){var n=document.createElement("canvas"),r=n.width=e.width,i=n.height=e.height,a=n.getContext("2d");a.drawImage(e,0,0,r,i),t=t||!1;for(var o=a.getImageData(0,0,r,i),s=a.createImageData(r,i),u=0;u<o.data.length;u+=4){if(t){var l=o.data[u],c=o.data[u+1],f=o.data[u+2];if(Math.abs(l-c)+Math.abs(c-f)>20)return console.warn("Given image is not a height map"),e}var h,d,p,_;u%(4*r)==0?(h=o.data[u],p=o.data[u+4]):u%(4*r)==4*(r-1)?(h=o.data[u-4],p=o.data[u]):(h=o.data[u-4],p=o.data[u+4]),u<4*r?(d=o.data[u],_=o.data[u+4*r]):u>r*(i-1)*4?(d=o.data[u-4*r],_=o.data[u]):(d=o.data[u-4*r],_=o.data[u+4*r]),s.data[u]=h-p+127,s.data[u+1]=d-_+127,s.data[u+2]=255,s.data[u+3]=255}return a.putImageData(s,0,0),n},isHeightImage:function(e,t,n){if(!e||!e.width||!e.height)return!1;var r=document.createElement("canvas"),i=r.getContext("2d"),a=t||32;n=n||20,r.width=r.height=a,i.drawImage(e,0,0,a,a);for(var o=i.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var u=o.data[s],l=o.data[s+1],c=o.data[s+2];if(Math.abs(u-l)+Math.abs(l-c)>n)return!1}return!0},_fetchTexture:function(e,t,n){a.a.get({url:e,responseType:"arraybuffer",onload:t,onerror:n})},createChessboard:function(e,t,n,i){e=e||512,t=t||64,n=n||"black",i=i||"white";var a=Math.ceil(e/t),o=document.createElement("canvas");o.width=e,o.height=e;var s=o.getContext("2d");s.fillStyle=i,s.fillRect(0,0,e,e),s.fillStyle=n;for(var u=0;u<a;u++)for(var l=0;l<a;l++){var c=l%2?u%2:u%2-1;c&&s.fillRect(u*t,l*t,t,t)}return new r.a({image:o,anisotropic:8})},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var n=t.getContext("2d");return n.fillStyle=e,n.fillRect(0,0,1,1),new r.a({image:t})}};t.a=f},function(e,t,n){"use strict";var r=n(1),i=n(2),a=n(26),o=n(10),s=["px","nx","py","ny","pz","nz"],u=r.a.extend(function(){var e={position:new i.a,far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new a.a({fov:90}),nx:new a.a({fov:90}),py:new a.a({fov:90}),ny:new a.a({fov:90}),pz:new a.a({fov:90}),nz:new a.a({fov:90})};return t.px.lookAt(i.a.POSITIVE_X,i.a.NEGATIVE_Y),t.nx.lookAt(i.a.NEGATIVE_X,i.a.NEGATIVE_Y),t.py.lookAt(i.a.POSITIVE_Y,i.a.POSITIVE_Z),t.ny.lookAt(i.a.NEGATIVE_Y,i.a.NEGATIVE_Z),t.pz.lookAt(i.a.POSITIVE_Z,i.a.NEGATIVE_Y),t.nz.lookAt(i.a.NEGATIVE_Z,i.a.NEGATIVE_Y),e._frameBuffer=new o.a,e},{getCamera:function(e){return this._cameras[e]},render:function(e,t,n){var r=e.gl;n||t.update();for(var a=this.texture.width,o=2*Math.atan(a/(a-.5))/Math.PI*180,u=0;u<6;u++){var l=s[u],c=this._cameras[l];if(i.a.copy(c.position,this.position),c.far=this.far,c.near=this.near,c.fov=o,this.shadowMapPass){c.update();var f=t.getBoundingBox(function(e){return!e.invisible});f.applyTransform(c.viewMatrix),t.viewBoundingBoxLastFrame.copy(f),this.shadowMapPass.render(e,t,c,!0)}this._frameBuffer.attach(this.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+u),this._frameBuffer.bind(e),e.render(t,c,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}});t.a=u},function(e,t,n){"use strict";var r=n(15),i=n(95),a=n(3),o=n(8),s=n(48);a.a.import(s.a);var u=r.a.extend(function(){var e=new a.a({vertex:a.a.source("qtek.basic.vertex"),fragment:a.a.source("qtek.basic.fragment")});e.enableTexture("diffuseMap");var t=new o.a({shader:e,depthMask:!1});return{scene:null,geometry:new i.a({widthSegments:30,heightSegments:30}),material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},_beforeRenderScene:function(e,t,n){this.position.copy(n.getWorldPosition()),this.update(),e.renderQueue([this],n)},setEnvironmentMap:function(e){this.material.set("diffuseMap",e)},getEnvironmentMap:function(){return this.material.get("diffuseMap")},dispose:function(e){this.detachScene(),this.geometry.dispose(e),this.material.dispose(e)}});t.a=u},function(e,t,n){"use strict";var r=n(15),i=n(120),a=n(3),o=n(8),s=n(49);a.a.import(s.a);var u=r.a.extend(function(){var e=new a.a({vertex:a.a.source("qtek.skybox.vertex"),fragment:a.a.source("qtek.skybox.fragment")}),t=new o.a({shader:e,depthMask:!1});return{scene:null,geometry:new i.a,material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e),this.material.dispose(e)},setEnvironmentMap:function(e){this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,n){this.renderSkybox(e,n)},renderSkybox:function(e,t){this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),e.renderQueue([this],t)}});t.a=u},function(e,t,n){"use strict";var r=n(71),i=":unconfigurable;";t.a=["@export qtek.header.directional_light","uniform vec3 directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+i,"uniform vec3 directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+i,"@end","@export qtek.header.ambient_light","uniform vec3 ambientLightColor[AMBIENT_LIGHT_COUNT]"+i,"@end","@export qtek.header.ambient_sh_light","uniform vec3 ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+i,"uniform vec3 ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+i,r.a,"@end","@export qtek.header.ambient_cubemap_light","uniform vec3 ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+i,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+i,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+i,"@end","@export qtek.header.point_light","uniform vec3 pointLightPosition[POINT_LIGHT_COUNT]"+i,"uniform float pointLightRange[POINT_LIGHT_COUNT]"+i,"uniform vec3 pointLightColor[POINT_LIGHT_COUNT]"+i,"@end","@export qtek.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_COUNT]"+i,"uniform vec3 spotLightDirection[SPOT_LIGHT_COUNT]"+i,"uniform float spotLightRange[SPOT_LIGHT_COUNT]"+i,"uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+i,"uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+i,"uniform float spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+i,"uniform vec3 spotLightColor[SPOT_LIGHT_COUNT]"+i,"@end"].join("\n")},function(e,t,n){"use strict";t.a="@export qtek.prez.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export qtek.prez.fragment\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n@end"},function(e,t,n){"use strict";function r(e,t,n,r){var i=e.accessors[n],a=t.bufferViews[i.bufferView],o=i.byteOffset||0,u=w[i.componentType]||s.a.Float32Array,l=N[i.type];null==l&&r&&(l=1);var c=new u(a,o,l*i.count),f=i.extensions&&i.extensions.WEB3D_quantized_attributes;if(f){for(var h,d,p=new s.a.Float32Array(l*i.count),_=f.decodeMatrix,h=new Array(l),d=new Array(l),m=0;m<l;m++)h[m]=_[l*(l+1)+m],d[m]=_[m*(l+1)+m];for(var g=0;g<i.count;g++)for(var m=0;m<l;m++)p[g*l+m]=c[g*l+m]*d[m]+h[m];c=p}return c}var i=n(1),a=n(25),o=n(11),s=n(12),u=n(17),l=n(8),c=n(40),f=n(15),h=n(16),d=n(4),p=n(5),_=n(20),m=n(72),g=n(44),v=n(26),y=n(27),x=n(6),T=n(7),E=n(74),b=n(76),S=n(18),A=(n(79),{NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",TEXCOORD_1:"texcoord1",WEIGHTS_0:"weight",JOINTS_0:"joint",COLOR:"color"}),w={5120:s.a.Int8Array,5121:s.a.Uint8Array,5122:s.a.Int16Array,5123:s.a.Uint16Array,5125:s.a.Uint32Array,5126:s.a.Float32Array},N={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},C=i.a.extend({rootNode:null,rootPath:null,textureRootPath:null,bufferRootPath:null,shaderName:"qtek.standard",useStandardMaterial:!1,includeCamera:!0,includeAnimation:!0,includeMesh:!0,includeTexture:!0,crossOrigin:"",textureFlipY:!1,shaderLibrary:null},function(){this.shaderLibrary||(this.shaderLibrary=_.a.createLibrary())},{load:function(e){var t=this;null==this.rootPath&&(this.rootPath=e.slice(0,e.lastIndexOf("/"))),a.a.get({url:e,onprogress:function(e,n,r){t.trigger("progress",e,n,r)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(e){function t(){0===--l&&r()}function n(){return{scene:i.rootNode?null:s,rootNode:i.rootNode?s:null,cameras:a.cameras,textures:a.textures,materials:a.materials,skeletons:a.skeletons,meshes:a.meshes,clips:a.clips,nodes:a.nodes}}function r(){if(e.bufferViews.forEach(function(e,t){a.bufferViews[t]=a.buffers[e.buffer].slice(e.byteOffset||0,(e.byteOffset||0)+(e.byteLength||0))}),a.buffers=null,i.includeMesh&&(i.includeTexture&&i._parseTextures(e,a),i._parseMaterials(e,a),i._parseMeshes(e,a)),i._parseNodes(e,a),e.scenes){var t=e.scenes[e.scene];if(t)for(var r=0;r<t.nodes.length;r++){var o=a.nodes[t.nodes[r]];o.update(),s.add(o)}}i.includeMesh&&i._parseSkins(e,a),i.includeAnimation&&i._parseAnimations(e,a),i.trigger("success",n())}var i=this,a={buffers:[],bufferViews:[],materials:[],textures:[],meshes:[],joints:[],skeletons:[],cameras:[],nodes:[],clips:[]},s=this.rootNode||new u.a,l=0;return o.a.each(e.buffers,function(e,n){l++;var r=e.uri;i._loadBuffer(r,function(e){a.buffers[n]=e,t()},t)}),n()},resolveBinaryPath:function(e){var t=this.bufferRootPath;return null==t&&(t=this.rootPath),o.a.relative2absolute(e,t)},resolveTexturePath:function(e){var t=this.textureRootPath;return null==t&&(t=this.rootPath),o.a.relative2absolute(e,t)},_loadBuffer:function(e,t,n){a.a.get({url:this.resolveBinaryPath(e),responseType:"arraybuffer",onload:function(e){t&&t(e)},onerror:function(e){n&&n(e)}})},_parseSkins:function(e,t){function n(e,t,n){e.skeleton=t,e.joints=n;var r=e.material.shader,i=e.material.clone();e.material=i,i instanceof c.a?i.jointCount=n.length:i.shader=a.get(u,{textures:r.getEnabledTextures(),vertexDefines:{SKINNING:null,JOINT_COUNT:n.length}})}function r(e){return e.index}var i=!1;o.a.each(e.skins,function(n,r){for(var a=new m.a({name:n.name}),o=0;o<n.joints.length;o++){var u=n.joints[o],l=t.nodes[u],c=new g.a({name:l.name,node:l,index:a.joints.length});a.joints.push(c)}if(a.relativeRootNode=t.nodes[n.skeleton]||this.rootNode,n.inverseBindMatrices){i=!0;var f=e.accessors[n.inverseBindMatrices],h=t.bufferViews[f.bufferView],d=f.byteOffset||0,p=16*f.count,_=new s.a.Float32Array(h,d,p);a.setJointMatricesArray(_)}else a.updateJointMatrices();t.skeletons[r]=a},this);var a=this.shaderLibrary,u=this.shaderName;o.a.each(e.nodes,function(e,i){if(null!=e.skin){var a=e.skin,o=t.skeletons[a],s=t.nodes[i],u=o.joints.map(r);if(s instanceof f.a)n(s,o,u);else for(var l=s.children(),c=0;c<l.length;c++)n(l[c],o,u)}},this)},_parseTextures:function(e,t){o.a.each(e.textures,function(n,r){var i=e.samplers&&e.samplers[n.sampler]||{},a={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(e){var t=i[e];null!=t&&(a[e]=t)}),o.a.defaults(a,{wrapS:d.a.REPEAT,wrapT:d.a.REPEAT,flipY:this.textureFlipY});var s=n.target||x.a.TEXTURE_2D,u=n.format;if(null!=u&&(a.format=u),s===x.a.TEXTURE_2D){var l=new p.a(a),c=e.images[n.source];l.load(this.resolveTexturePath(c.uri),this.crossOrigin),t.textures[r]=l}},this)},_KHRCommonMaterialToStandard:function(e,t){var n={};n=e.extensions.KHR_materials_common.values||{},"number"==typeof n.diffuse&&(n.diffuse=t.textures[n.diffuse]||null),"number"==typeof n.emission&&(n.emission=t.textures[n.emission]||null);var r=[];n.diffuse instanceof p.a&&r.push("diffuseMap"),e.normalTexture&&r.push("normalMap"),n.emission instanceof p.a&&r.push("emissiveMap");var i,a=this.useStandardMaterial;if(a)i=new c.a({name:e.name,doubleSided:e.doubleSided});else{var o={USE_ROUGHNESS:null,USE_METALNESS:null};e.doubleSided&&(o.DOUBLE_SIDED=null),i=new l.a({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:o,textures:r})})}n.transparent&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0);var s=n.diffuse;s&&(Array.isArray(s)?(s=s.slice(0,3),a?i.color=s:i.set("color",s)):a?i.diffuseMap=s:i.set("diffuseMap",s));var u=n.emission;if(null!=u&&(Array.isArray(u)?(u=u.slice(0,3),a?i.emission=u:i.set("emission",u)):a?i.emissiveMap=u:i.set("emissiveMap",u)),null!=e.normalTexture){var f=e.normalTexture.index;a?i.normalMap=t.textures[f]||null:i.set("normalMap",t.textures[f]||null)}if(null!=n.shininess){var h=Math.log(n.shininess)/Math.log(8192);i.set("glossiness",h),i.set("roughness",1-h)}else i.set("glossiness",.3),i.set("roughness",.3);return null!=n.specular&&i.set("specularColor",n.specular.slice(0,3)),null!=n.transparency&&i.set("alpha",n.transparency),i},_pbrMetallicRoughnessToStandard:function(e,t,n){var r,i,a,s,u,f,h="MASK"===e.alphaMode,d=this.useStandardMaterial,p=[];t.baseColorTexture&&(i=n.textures[t.baseColorTexture.index]||null,p.push("diffuseMap")),t.metallicRoughnessTexture&&(a=s=n.textures[t.metallicRoughnessTexture.index]||null,p.push("metalnessMap","roughnessMap")),e.normalTexture&&(u=n.textures[e.normalTexture.index]||null,p.push("normalMap")),e.emissiveTexture&&(f=n.textures[e.emissiveTexture.index]||null,p.push("emissiveMap"));var _=t.baseColorFactor||[1,1,1,1],m={diffuseMap:i||null,roughnessMap:a||null,metalnessMap:s||null,normalMap:u||null,emissiveMap:f||null,color:_.slice(0,3),alpha:_[3],metalness:t.metallicFactor||0,roughness:t.roughnessFactor||0,emission:e.emissiveFactor||[0,0,0],alphaCutoff:null==e.alphaCutoff?.9:e.alphaCutoff};if(m.roughnessMap&&(m.metalness=.5,m.roughness=.5),d)r=new c.a(o.a.extend({name:e.name,alphaTest:h,doubleSided:e.doubleSided,roughnessChannel:1,metalnessChannel:2},m));else{var g={ROUGHNESS_CHANNEL:1,METALNESS_CHANNEL:2,USE_ROUGHNESS:null,USE_METALNESS:null};h&&(g.ALPHA_TEST=null),e.doubleSided&&(g.DOUBLE_SIDED=null),r=new l.a({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:g,textures:p})}),r.set(m)}return"BLEND"===e.alphaMode&&(r.depthMask=!1,r.depthTest=!0,r.transparent=!0),r},_pbrSpecularGlossinessToStandard:function(e,t,n){var r="MASK"===e.alphaMode;this.useStandardMaterial&&console.error("StandardMaterial doesn't support specular glossiness workflow yet");var i,a,o,s,u,c,f=[];t.diffuseTexture&&(a=n.textures[t.diffuseTexture.index]||null,f.push("diffuseMap")),t.specularGlossinessTexture&&(o=s=n.textures[t.specularGlossinessTexture.index]||null,f.push("specularMap","glossinessMap")),e.normalTexture&&(u=n.textures[e.normalTexture.index]||null,f.push("normalMap")),e.emissiveTexture&&(c=n.textures[e.emissiveTexture.index]||null,f.push("emissiveMap"));var h=t.diffuseFactor||[1,1,1,1],d={diffuseMap:a||null,glossinessMap:o||null,specularMap:s||null,normalMap:u||null,emissiveMap:c||null,color:h.slice(0,3),alpha:h[3],specularColor:t.specularFactor||[1,1,1],glossiness:t.glossinessFactor||0,emission:e.emissiveFactor||[0,0,0],alphaCutoff:null==e.alphaCutoff?.9:e.alphaCutoff};d.glossinessMap&&(d.glossiness=.5),d.specularMap&&(d.specularColor=[1,1,1]);var p={GLOSSINESS_CHANNEL:3};return r&&(p.ALPHA_TEST=null),e.doubleSided&&(p.DOUBLE_SIDED=null),i=new l.a({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:p,textures:f})}),i.set(d),"BLEND"===e.alphaMode&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0),i},_parseMaterials:function(e,t){o.a.each(e.materials,function(e,n){e.extensions&&e.extensions.KHR_materials_common?t.materials[n]=this._KHRCommonMaterialToStandard(e,t):e.pbrMetallicRoughness?t.materials[n]=this._pbrMetallicRoughnessToStandard(e,e.pbrMetallicRoughness,t):e.extensions&&e.extensions.KHR_materials_pbrSpecularGlossiness&&(t.materials[n]=this._pbrSpecularGlossinessToStandard(e,e.extensions.KHR_materials_pbrSpecularGlossiness,t))},this)},_parseMeshes:function(e,t){var n=this;o.a.each(e.meshes,function(i,a){t.meshes[a]=[];for(var o=0;o<i.primitives.length;o++){for(var u=i.primitives[o],h=new S.a({name:i.name,boundingBox:new T.a}),d=Object.keys(u.attributes),p=0;p<d.length;p++){var _=d[p],m=u.attributes[_],g=e.accessors[m],v=A[_];if(v){var y=N[g.type],x=r(e,t,m);if(x instanceof s.a.Uint32Array&&(x=new Float32Array(x)),"WEIGHTS_0"===_&&4===y){for(var E=new x.constructor(3*g.count),b=0;b<g.count;b++)E[3*b]=x[4*b],E[3*b+1]=x[4*b+1],E[3*b+2]=x[4*b+2];h.attributes[v].value=E}else h.attributes[v].value=x;var w="float";if(x instanceof s.a.Uint16Array?w="ushort":x instanceof s.a.Int16Array?w="short":x instanceof s.a.Uint8Array?w="ubyte":x instanceof s.a.Int8Array&&(w="byte"),h.attributes[v].type=w,"POSITION"===_){var R=g.min,M=g.max;R&&h.boundingBox.min.set(R[0],R[1],R[2]),M&&h.boundingBox.max.set(M[0],M[1],M[2])}}}h.indices=r(e,t,u.indices,!0),h.vertexCount<=65535&&h.indices instanceof s.a.Uint32Array&&(h.indices=new s.a.Uint16Array(h.indices));var L=t.materials[u.material];L||(L=new l.a({shader:this.shaderLibrary.get(n.shaderName)}));var P=new f.a({geometry:h,material:L,mode:[f.a.POINTS,f.a.LINES,f.a.LINE_LOOP,f.a.LINE_STRIP,f.a.TRIANGLES,f.a.TRIANGLE_STRIP,f.a.TRIANGLE_FAN][u.mode]||f.a.TRIANGLES,ignoreGBuffer:L.transparent});(L instanceof c.a&&L.normalMap||L.shader&&L.shader.isTextureEnabled("normalMap"))&&(P.geometry.attributes.tangent.value||P.geometry.generateTangents()),P.name=C.generateMeshName(e.meshes,a,o),t.meshes[a].push(P)}},this)},_instanceCamera:function(e,t){var n=e.cameras[t.camera];if("perspective"===n.type){var r=n.perspective||{};return new v.a({name:t.name,aspect:r.aspectRatio,fov:r.yfov,far:r.zfar,near:r.znear})}var i=n.orthographic||{};return new y.a({name:t.name,top:i.ymag,right:i.xmag,left:-i.xmag,bottom:-i.ymag,near:i.znear,far:i.zfar})},_parseNodes:function(e,t){function n(e){return new f.a({name:e.name,geometry:e.geometry,material:e.material,mode:e.mode})}o.a.each(e.nodes,function(r,i){var a;if(null!=r.camera&&this.includeCamera)a=this._instanceCamera(e,r),t.cameras.push(a);else if(null!=r.mesh&&this.includeMesh){var o=t.meshes[r.mesh];if(o)if(1===o.length)a=n(o[0]),a.setName(r.name);else{a=new h.a,a.setName(r.name);for(var s=0;s<o.length;s++)a.add(n(o[s]))}}else a=new h.a,a.setName(r.name);r.matrix?(a.localTransform.setArray(r.matrix),a.decomposeLocalTransform()):(r.translation&&a.position.setArray(r.translation),r.rotation&&a.rotation.setArray(r.rotation),r.scale&&a.scale.setArray(r.scale)),t.nodes[i]=a},this),o.a.each(e.nodes,function(e,n){var r=t.nodes[n];if(e.children)for(var i=0;i<e.children.length;i++){var a=e.children[i],o=t.nodes[a];r.add(o)}})},_parseAnimations:function(e,t){function n(e){return"weights"!==e.path||(console.warn("GLTFLoader not support morph targets yet."),!1)}function i(e,t){return e.target.node+"_"+t.samplers[e.sampler].input}var a={};o.a.each(e.animations,function(o,s){var u=o.channels.filter(n);if(u.length){for(var l={},c=0;c<u.length;c++){var f=u[c],h=i(f,o),d=t.nodes[f.target.node],p=l[h],_=o.samplers[f.sampler];if(!p){p=l[h]=new b.a({name:d?d.name:"",target:d}),p.targetNodeIndex=f.target.node,p.channels.time=r(e,t,_.input);var m=p.channels.time.length;if(!a[_.input]){for(var g=0;g<m;g++)p.channels.time[g]*=1e3;a[_.input]=!0}}"LINEAR"!==(_.interpolation||"LINEAR")&&console.warn("GLTFLoader only support LINEAR interpolation.");var v=f.target.path;"translation"===v&&(v="position"),p.channels[v]=r(e,t,_.output)}var y=new E.a({name:o.name,loop:!0});for(var x in l)y.addTrack(l[x]);y.calcLifeFromTracks(),t.clips.push(y)}},this);var s=t.clips.reduce(function(e,t){return Math.max(e,t.life)},0);return t.clips.forEach(function(e){e.life=s}),t.clips}});C.generateMeshName=function(e,t,n){var r=e[t],i=r.name||"mesh_"+t;return 0===n?i:i+"$"+n},t.a=C},function(e,t,n){"use strict";function r(e,t,n){var r=t;r+=256*n.roughnessChannel,r+=1024*n.metalnessChannel;for(var i=0;i<e.length;i++)r+=m[e[i]];for(var i=0;i<p.length;i++){var a=p[i];n[a]&&(r+=m[a])}return r}function i(e,t,n,i){var a=r(t,n,i),o=l[a];return o||(o=new s.a({vertex:s.a.source("qtek.standard.vertex"),fragment:s.a.source("qtek.standard.fragment")}),o.enableTexture(t),o.define("fragment","USE_METALNESS"),o.define("fragment","USE_ROUGHNESS"),o.define("ROUGHNESS_CHANNEL",i.roughnessChannel),o.define("METALNESS_CHANNEL",i.metalnessChannel),n&&(o.define("vertex","SKINNING"),o.define("vertex","JOINT_COUNT",n)),i.environmentMapPrefiltered&&o.define("fragment","ENVIRONMENTMAP_PREFILTER"),i.linear&&o.define("fragment","SRGB_DECODE"),i.encodeRGBM&&o.define("fragment","RGBM_ENCODE"),i.decodeRGBM&&o.define("fragment","RGBM_DECODE"),i.parallaxCorrected&&o.define("fragment","PARALLAX_CORRECTED"),i.doubleSided&&o.define("fragment","DOUBLE_SIDED"),i.alphaTest&&o.define("fragment","ALPHA_TEST"),l[a]=o,c[e.__GUID__]=c[e.__GUID__]||{},c[e.__GUID__][a]=0),c[e.__GUID__][a]++,o.__key__=a,o}function a(e,t){var n=e.__key__;l[n]&&(--c[t.__GUID__][n]||t&&e.dispose(t))}var o=n(8),s=n(3),u=n(41);s.a.import(u.a);var l={},c={},f=["diffuseMap","normalMap","roughnessMap","metalnessMap","emissiveMap","environmentMap","brdfLookup","ssaoMap","aoMap"],h=["color","emission","emissionIntensity","alpha","roughness","metalness","uvRepeat","uvOffset","aoIntensity","alphaCutoff"],d=["jointCount","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","roughnessChannel","metalnessChannel"],p=["environmentMapPrefiltered","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","parallaxCorrected"],_=f.concat(p),m=_.reduce(function(e,t,n){return e[t]=4096<<n,e},{}),g=o.a.extend(function(){return{color:[1,1,1],emission:[0,0,0],emissionIntensity:0,roughness:.5,metalness:0,alpha:1,alphaTest:!1,alphaCutoff:.9,doubleSided:!1,uvRepeat:[1,1],uvOffset:[0,0],aoIntensity:1,jointCount:0,environmentMapPrefiltered:!1,linear:!1,encodeRGBM:!1,decodeRGBM:!1,roughnessChannel:0,metalnessChannel:1}},{_doUpdateShader:function(e){var t=f.filter(function(e){return!!this[e]},this);this._shader&&(a(this._shader,e),this._shader.detached());var n=i(e,t,this.jointCount||0,{environmentMapPrefiltered:this.environmentMapPrefiltered,linear:this.linear,encodeRGBM:this.encodeRGBM,decodeRGBM:this.decodeRGBM,parallaxCorrected:!!this._environmentBox,alphaTest:this.alphaTest,doubleSided:this.doubleSided,metalnessChannel:this.metalnessChannel,roughnessChannel:this.roughnessChannel}),r=this.uniforms;this.uniforms=n.createUniforms(),this._shader=n;var o=this.uniforms;this._enabledUniforms=Object.keys(o);for(var s in r)o[s]&&(o[s].value=r[s].value);n.attached(),this._shaderDirty=!1},updateShader:function(e){this._shaderDirty&&(this._doUpdateShader(e),this._shaderDirty=!1)},attachShader:function(){},dispose:function(e,t){this._shader&&a(this._shader),o.a.prototype.dispose.call(e,t)},clone:function(){var e=new g({name:this.name});return f.forEach(function(t){this[t]&&(e[t]=this[t])},this),h.concat(d).forEach(function(t){e[t]=this[t]},this),e}});h.forEach(function(e){Object.defineProperty(g.prototype,e,{get:function(){return this.get(e)},set:function(t){var n=this.uniforms=this.uniforms||{};n[e]=n[e]||{value:null},this.setUniform(e,t)}})}),f.forEach(function(e){Object.defineProperty(g.prototype,e,{get:function(){return this.get(e)},set:function(t){var n=this.uniforms=this.uniforms||{};n[e]=n[e]||{value:null};var r=this.get(e);this.setUniform(e,t),!r!=!t&&(this._shaderDirty=!0)}})}),d.forEach(function(e){var t="_"+e;Object.defineProperty(g.prototype,e,{get:function(){return this[t]},set:function(e){var n=this[t];this[t]=e,n!==e&&(this._shaderDirty=!0)}})}),Object.defineProperty(g.prototype,"environmentBox",{get:function(){var e=this._environmentBox;return e&&(e.min.setArray(this.get("environmentBoxMin")),e.max.setArray(this.get("environmentBoxMax"))),e},set:function(e){var t=this._environmentBox;this._environmentBox=e;var n=this.uniforms=this.uniforms||{};n.environmentBoxMin=n.environmentBoxMin||{value:null},n.environmentBoxMax=n.environmentBoxMax||{value:null},e&&(this.setUniform("environmentBoxMin",e.min._array),this.setUniform("environmentBoxMax",e.max._array)),t!==e&&(this._shaderDirty=!0)}}),Object.defineProperty(g.prototype,"shader",{get:function(){return this._shader,this._shader},set:function(){console.warn("StandardMaterial can't change shader")}}),t.a=g},function(e,t,n){"use strict";t.a="\n@export qtek.standard.vertex\n#define SHADER_NAME standard\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#if defined(AOMAP_ENABLED)\nattribute vec2 texcoord2 : TEXCOORD_1;\n#endif\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n#ifdef VERTEX_COLOR\nattribute vec4 color : COLOR;\n#endif\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n#if defined(AOMAP_ENABLED)\nvarying vec2 v_Texcoord2;\n#endif\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n    v_Barycentric = barycentric;\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n#ifdef NORMALMAP_ENABLED\n    v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n    v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n#ifdef VERTEX_COLOR\n    v_Color = color;\n#endif\n#if defined(AOMAP_ENABLED)\n    v_Texcoord2 = texcoord2;\n#endif\n}\n@end\n@export qtek.standard.fragment\n#define PI 3.14159265358979\n#define GLOSSINESS_CHANNEL 0\n#define ROUGHNESS_CHANNEL 0\n#define METALNESS_CHANNEL 1\nuniform mat4 viewInverse : VIEWINVERSE;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D normalMap;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n#ifdef SPECULARMAP_ENABLED\nuniform sampler2D specularMap;\n#endif\n#ifdef USE_ROUGHNESS\nuniform float roughness : 0.5;\n    #ifdef ROUGHNESSMAP_ENABLED\nuniform sampler2D roughnessMap;\n    #endif\n#else\nuniform float glossiness: 0.5;\n    #ifdef GLOSSINESSMAP_ENABLED\nuniform sampler2D glossinessMap;\n    #endif\n#endif\n#ifdef METALNESSMAP_ENABLED\nuniform sampler2D metalnessMap;\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\nuniform samplerCube environmentMap;\n    #ifdef PARALLAX_CORRECTED\nuniform vec3 environmentBoxMin;\nuniform vec3 environmentBoxMax;\n    #endif\n#endif\n#ifdef BRDFLOOKUP_ENABLED\nuniform sampler2D brdfLookup;\n#endif\n#ifdef EMISSIVEMAP_ENABLED\nuniform sampler2D emissiveMap;\n#endif\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n#ifdef AOMAP_ENABLED\nuniform sampler2D aoMap;\nuniform float aoIntensity;\nvarying vec2 v_Texcoord2;\n#endif\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef USE_METALNESS\nuniform float metalness : 0.0;\n#else\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\n#endif\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float emissionIntensity: 1;\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef ENVIRONMENTMAP_PREFILTER\nuniform float maxMipmapLevel: 5;\n#endif\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import qtek.header.ambient_cubemap_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\n@import qtek.plugin.compute_shadow_map\n@import qtek.util.parallax_correct\nfloat G_Smith(float g, float ndv, float ndl)\n{\n    float roughness = 1.0 - g;\n    float k = roughness * roughness / 2.0;\n    float G1V = ndv / (ndv * (1.0 - k) + k);\n    float G1L = ndl / (ndl * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nfloat D_Phong(float g, float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(float g, float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (PI * tmp * tmp);\n}\nvoid main()\n{\n    vec4 albedoColor = vec4(color, alpha);\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 texel = texture2D(diffuseMap, v_Texcoord);\n    #ifdef SRGB_DECODE\n    texel = sRGBToLinear(texel);\n    #endif\n    albedoColor.rgb *= texel.rgb;\n    #ifdef DIFFUSEMAP_ALPHA_ALPHA\n    albedoColor.a *= texel.a;\n    #endif\n#endif\n#ifdef USE_METALNESS\n    float m = metalness;\n    #ifdef METALNESSMAP_ENABLED\n    float m2 = texture2D(metalnessMap, v_Texcoord)[METALNESS_CHANNEL];\n    m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n    vec3 baseColor = albedoColor.rgb;\n    albedoColor.rgb = baseColor * (1.0 - m);\n    vec3 spec = mix(vec3(0.04), baseColor, m);\n#else\n    vec3 spec = specularColor;\n#endif\n#ifdef USE_ROUGHNESS\n    float g = 1.0 - roughness;\n    #ifdef ROUGHNESSMAP_ENABLED\n    float g2 = 1.0 - texture2D(roughnessMap, v_Texcoord)[ROUGHNESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#else\n    float g = glossiness;\n    #ifdef GLOSSINESSMAP_ENABLED\n    float g2 = texture2D(glossinessMap, v_Texcoord)[GLOSSINESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#endif\n#ifdef SPECULARMAP_ENABLED\n    spec *= sRGBToLinear(texture2D(specularMap, v_Texcoord)).rgb;\n#endif\n    vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n    if (dot(N, V) < 0.0) {\n        N = -N;\n    }\n#endif\n#ifdef NORMALMAP_ENABLED\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n            N = normalize(tbn * N);\n        }\n    }\n#endif\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    vec3 fresnelTerm = F_Schlick(ndv, spec);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += ambientLightColor[_idx_];\n    }}\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 lightPosition = pointLightPosition[_idx_];\n        vec3 lc = pointLightColor[_idx_];\n        float range = pointLightRange[_idx_];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsPoint[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * attenuation * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 L = -normalize(directionalLightDirection[_idx_]);\n        vec3 lc = directionalLightColor[_idx_];\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = spotLightPosition[i];\n        vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n        vec3 lc = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        float c = dot(spotLightDirection, L);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n    vec4 outColor = albedoColor;\n    outColor.rgb *= diffuseTerm;\n    outColor.rgb += specularTerm;\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n    vec3 L = reflect(-V, N);\n    float rough2 = clamp(1.0 - g, 0.0, 1.0);\n    float bias2 = rough2 * 5.0;\n    vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n    vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\n    vec3 envTexel2;\n    for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n    {{\n        envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 51.5);\n        outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n    }}\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\n    vec3 envWeight = g * fresnelTerm;\n    vec3 L = reflect(-V, N);\n    #ifdef PARALLAX_CORRECTED\n    L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\n    #endif\n    #ifdef ENVIRONMENTMAP_PREFILTER\n    float rough = clamp(1.0 - g, 0.0, 1.0);\n    float bias = rough * maxMipmapLevel;\n    vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\n        #ifdef BRDFLOOKUP_ENABLED\n    vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n    envWeight = spec * brdfParam.x + brdfParam.y;\n        #endif\n    #else\n    vec3 envTexel = textureCube(environmentMap, L).xyz;\n    #endif\n    outColor.rgb += envTexel * envWeight;\n#endif\n    float aoFactor = 1.0;\n#ifdef SSAOMAP_ENABLED\n    aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\n#endif\n#ifdef AOMAP_ENABLED\n    aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\n#endif\n    outColor.rgb *= aoFactor;\n    vec3 lEmission = emission;\n#ifdef EMISSIVEMAP_ENABLED\n    lEmission *= texture2D(emissiveMap, v_Texcoord).rgb;\n#endif\n    outColor.rgb += lEmission * emissionIntensity;\n#ifdef GAMMA_ENCODE\n    outColor.rgb = pow(outColor.rgb, vec3(1 / 2.2));\n#endif\n    if(lineWidth > 0.)\n    {\n        outColor.rgb = mix(outColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (outColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(outColor);\n}\n@end\n"},function(e,t,n){"use strict";function r(e,t,n){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=n,this.vao=null}var i,a=n(16),o=n(6),s=0,u=null,l=!0,c=function(){this.triangleCount=0,this.vertexCount=0,this.drawCallCount=0},f=a.a.extend({material:null,geometry:null,mode:o.a.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new c},{renderOrder:0,lineWidth:1,culling:!0,cullFace:o.a.BACK,frontFace:o.a.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=a.a.prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},render:function(e,t){var n=e.gl,t=t||this.material.shader,a=this.geometry,c=this.mode,f=a.vertexCount,h=a.isUseIndices(),d=e.getGLExtension("OES_element_index_uint"),p=d&&f>65535,_=p?n.UNSIGNED_INT:n.UNSIGNED_SHORT,m=e.getGLExtension("OES_vertex_array_object"),g=!a.dynamic,v=this._renderInfo;v.vertexCount=f,v.triangleCount=0,v.drawCallCount=0;var y=!1;if(i=e.__GUID__+"-"+a.__GUID__+"-"+t.__GUID__,i!==s?y=!0:(f>65535&&!d&&h||m&&g||a._cache.isDirty())&&(y=!0),s=i,y){var x=this._drawCache[i];if(!x){var T=a.getBufferChunks(e);if(!T)return;x=[];for(var E=0;E<T.length;E++){for(var b=T[E],S=b.attributeBuffers,A=b.indicesBuffer,w=[],N=[],C=0;C<S.length;C++){var R,M=S[C],L=M.name,P=M.semantic;if(P){var D=t.attribSemantics[P];R=D&&D.symbol}else R=L;R&&t.attributeTemplates[R]&&(w.push(M),N.push(R))}var I=new r(w,N,A);x.push(I)}g&&(this._drawCache[i]=x)}for(var O=0;O<x.length;O++){var I=x[O],F=!0;m&&g&&(null==I.vao?I.vao=m.createVertexArrayOES():F=!1,m.bindVertexArrayOES(I.vao));var w=I.availableAttributes,A=I.indicesBuffer;if(F)for(var k=t.enableAttributes(e,I.availableAttributeSymbols,m&&g&&I.vao),C=0;C<w.length;C++){var B=k[C];if(-1!==B){var U,M=w[C],H=M.buffer,G=M.size;switch(M.type){case"float":U=n.FLOAT;break;case"byte":U=n.BYTE;break;case"ubyte":U=n.UNSIGNED_BYTE;break;case"short":U=n.SHORT;break;case"ushort":U=n.UNSIGNED_SHORT;break;default:U=n.FLOAT}n.bindBuffer(n.ARRAY_BUFFER,H),n.vertexAttribPointer(B,G,U,!1,0,0)}}c!=o.a.LINES&&c!=o.a.LINE_STRIP&&c!=o.a.LINE_LOOP||n.lineWidth(this.lineWidth),u=A,l=a.isUseIndices(),l?(F&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,A.buffer),n.drawElements(c,A.count,_,0),v.triangleCount+=A.count/3):n.drawArrays(c,0,f),m&&g&&m.bindVertexArrayOES(null),v.drawCallCount++}}else l?(n.drawElements(c,u.count,_,0),v.triangleCount=u.count/3):n.drawArrays(c,0,f),v.drawCallCount=1;return v},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var t=a.a.prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var n=0;n<e.length;n++){var r=e[n];t[r]!==this[r]&&(t[r]=this[r])}return t}}()});f.beforeFrame=function(){s=0},f.POINTS=o.a.POINTS,f.LINES=o.a.LINES,f.LINE_LOOP=o.a.LINE_LOOP,f.LINE_STRIP=o.a.LINE_STRIP,f.TRIANGLES=o.a.TRIANGLES,f.TRIANGLE_STRIP=o.a.TRIANGLE_STRIP,f.TRIANGLE_FAN=o.a.TRIANGLE_FAN,f.BACK=o.a.BACK,f.FRONT=o.a.FRONT,f.FRONT_AND_BACK=o.a.FRONT_AND_BACK,f.CW=o.a.CW,f.CCW=o.a.CCW,f.RenderInfo=c,t.a=f},function(e,t,n){"use strict";var r={};r.isPowerOfTwo=function(e){return 0==(e&e-1)},r.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},r.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},t.a=r},function(e,t,n){"use strict";var r=n(1),i=r.a.extend({name:"",index:-1,node:null,rootNode:null});t.a=i},function(e,t,n){"use strict";var r=n(16),i=n(9),a=n(46),o=n(47),s=n(0),u=n.n(s),l=u.a.vec3,c=u.a.vec4,f=r.a.extend(function(){return{projectionMatrix:new i.a,invProjectionMatrix:new i.a,viewMatrix:new i.a,frustum:new a.a}},function(){this.update(!0)},{update:function(e){r.a.prototype.update.call(this,e),i.a.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),i.a.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){i.a.copy(this.viewMatrix,e),i.a.invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){i.a.copy(this.projectionMatrix,e),i.a.invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=c.create();return function(t,n){var r=void 0!==n?n:new o.a,i=t._array[0],a=t._array[1];return c.set(e,i,a,-1,1),c.transformMat4(e,e,this.invProjectionMatrix._array),c.transformMat4(e,e,this.worldTransform._array),l.scale(r.origin._array,e,1/e[3]),c.set(e,i,a,1,1),c.transformMat4(e,e,this.invProjectionMatrix._array),c.transformMat4(e,e,this.worldTransform._array),l.scale(e,e,1/e[3]),l.sub(r.direction._array,e,r.origin._array),l.normalize(r.direction._array,r.direction._array),r.direction._dirty=!0,r.origin._dirty=!0,r}}()});t.a=f},function(e,t,n){"use strict";var r=(n(2),n(7)),i=n(73),a=n(0),o=n.n(a),s=o.a.vec3,u=s.set,l=s.copy,c=s.transformMat4,f=Math.min,h=Math.max,d=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new i.a);this.boundingBox=new r.a,this.vertices=[];for(var e=0;e<8;e++)this.vertices[e]=s.fromValues(0,0,0)};d.prototype={setFromProjection:function(e){var t=this.planes,n=e._array,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],f=n[7],h=n[8],d=n[9],p=n[10],_=n[11],m=n[12],g=n[13],v=n[14],y=n[15];u(t[0].normal._array,o-r,f-s,_-h),t[0].distance=-(y-m),t[0].normalize(),u(t[1].normal._array,o+r,f+s,_+h),t[1].distance=-(y+m),t[1].normalize(),u(t[2].normal._array,o+i,f+l,_+d),t[2].distance=-(y+g),t[2].normalize(),u(t[3].normal._array,o-i,f-l,_-d),t[3].distance=-(y-g),t[3].normalize(),u(t[4].normal._array,o-a,f-c,_-p),t[4].distance=-(y-v),t[4].normalize(),u(t[5].normal._array,o+a,f+c,_+p),t[5].distance=-(y+v),t[5].normalize();var x=this.boundingBox;if(0===y){var T=l/r,E=-v/(p-1),b=-v/(p+1),S=-b/l,A=-E/l;x.min.set(-S*T,-S,b),x.max.set(S*T,S,E);var w=this.vertices;u(w[0],-S*T,-S,b),u(w[1],-S*T,S,b),u(w[2],S*T,-S,b),u(w[3],S*T,S,b),u(w[4],-A*T,-A,E),u(w[5],-A*T,A,E),u(w[6],A*T,-A,E),u(w[7],A*T,A,E)}else{var N=(-1-m)/r,C=(1-m)/r,R=(1-g)/l,M=(-1-g)/l,L=(-1-v)/p,P=(1-v)/p;x.min.set(Math.min(N,C),Math.min(M,R),Math.min(P,L)),x.max.set(Math.max(C,N),Math.max(R,M),Math.max(L,P));var D=x.min._array,I=x.max._array,w=this.vertices;u(w[0],D[0],D[1],D[2]),u(w[1],D[0],I[1],D[2]),u(w[2],I[0],D[1],D[2]),u(w[3],I[0],I[1],D[2]),u(w[4],D[0],D[1],I[2]),u(w[5],D[0],I[1],I[2]),u(w[6],I[0],D[1],I[2]),u(w[7],I[0],I[1],I[2])}},getTransformedBoundingBox:function(){var e=s.create();return function(t,n){var r=this.vertices,i=n._array,a=t.min,o=t.max,s=a._array,u=o._array,d=r[0];c(e,d,i),l(s,e),l(u,e);for(var p=1;p<8;p++)d=r[p],c(e,d,i),s[0]=f(e[0],s[0]),s[1]=f(e[1],s[1]),s[2]=f(e[2],s[2]),u[0]=h(e[0],u[0]),u[1]=h(e[1],u[1]),u[2]=h(e[2],u[2]);return a._dirty=!0,o._dirty=!0,t}}()},t.a=d},function(e,t,n){"use strict";var r=n(2),i=n(0),a=n.n(i),o=a.a.vec3,s=function(e,t){this.origin=e||new r.a,this.direction=t||new r.a};s.prototype={constructor:s,intersectPlane:function(e,t){var n=e.normal._array,i=e.distance,a=this.origin._array,s=this.direction._array,u=o.dot(n,s);if(0===u)return null;t||(t=new r.a);var l=(o.dot(n,a)-i)/u;return o.scaleAndAdd(t._array,a,s,-l),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=o.dot(e.normal._array,this.direction._array);o.scaleAndAdd(this.direction._array,this.direction._array,e.normal._array,2*-t),this.direction._dirty=!0},distanceToPoint:function(){var e=o.create();return function(t){o.sub(e,t,this.origin._array);var n=o.dot(e,this.direction._array);if(n<0)return o.distance(this.origin._array,t);var r=o.lenSquared(e);return Math.sqrt(r-n*n)}}(),intersectSphere:function(){var e=o.create();return function(t,n,i){var a=this.origin._array,s=this.direction._array;t=t._array,o.sub(e,t,a);var u=o.dot(e,s),l=o.squaredLength(e),c=l-u*u,f=n*n;if(!(c>f)){var h=Math.sqrt(f-c),d=u-h,p=u+h;return i||(i=new r.a),d<0?p<0?null:(o.scaleAndAdd(i._array,a,s,p),i):(o.scaleAndAdd(i._array,a,s,d),i)}}}(),intersectBoundingBox:function(e,t){var n,i,a,s,u,l,c=this.direction._array,f=this.origin._array,h=e.min._array,d=e.max._array,p=1/c[0],_=1/c[1],m=1/c[2];if(p>=0?(n=(h[0]-f[0])*p,i=(d[0]-f[0])*p):(i=(h[0]-f[0])*p,n=(d[0]-f[0])*p),_>=0?(a=(h[1]-f[1])*_,s=(d[1]-f[1])*_):(s=(h[1]-f[1])*_,a=(d[1]-f[1])*_),n>s||a>i)return null;if((a>n||n!==n)&&(n=a),(s<i||i!==i)&&(i=s),m>=0?(u=(h[2]-f[2])*m,l=(d[2]-f[2])*m):(l=(h[2]-f[2])*m,u=(d[2]-f[2])*m),n>l||u>i)return null;if((u>n||n!==n)&&(n=u),(l<i||i!==i)&&(i=l),i<0)return null;var g=n>=0?n:i;return t||(t=new r.a),o.scaleAndAdd(t._array,f,c,g),t},intersectTriangle:function(){var e=o.create(),t=o.create(),n=o.create(),i=o.create();return function(a,s,u,l,c,f){var h=this.direction._array,d=this.origin._array;a=a._array,s=s._array,u=u._array,o.sub(e,s,a),o.sub(t,u,a),o.cross(i,t,h);var p=o.dot(e,i);if(l){if(p>-1e-5)return null}else if(p>-1e-5&&p<1e-5)return null;o.sub(n,d,a);var _=o.dot(i,n)/p;if(_<0||_>1)return null;o.cross(i,e,n);var m=o.dot(h,i)/p;if(m<0||m>1||_+m>1)return null;o.cross(i,e,t);var g=-o.dot(n,i)/p;return g<0?null:(c||(c=new r.a),f&&r.a.set(f,1-_-m,_,m),o.scaleAndAdd(c._array,d,h,g),c)}}(),applyTransform:function(e){r.a.add(this.direction,this.direction,this.origin),r.a.transformMat4(this.origin,this.origin,e),r.a.transformMat4(this.direction,this.direction,e),r.a.sub(this.direction,this.direction,this.origin),r.a.normalize(this.direction,this.direction)},copy:function(e){r.a.copy(this.origin,e.origin),r.a.copy(this.direction,e.direction)},clone:function(){var e=new s;return e.copy(this),e}},t.a=s},function(e,t,n){"use strict";t.a="@export qtek.basic.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Barycentric = barycentric;\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export qtek.basic.fragment\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n#ifdef SRGB_DECODE\n    tex = sRGBToLinear(tex);\n#endif\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n    gl_FragColor.a = tex.a;\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#endif\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef GAMMA_ENCODE\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1 / 2.2));\n#endif\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.skybox.vertex\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export qtek.skybox.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n    vec3 tex = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod)).rgb;\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor = encodeHDR(vec4(tex, 1.0));\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export qtek.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export qtek.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main (void)\n{\n    @import qtek.compositor.kernel.gaussian_9\n    vec2 off = blurSize / textureSize;\n    off *= vec2(1.0 - blurDir, blurDir);\n    vec4 sum = vec4(0.0);\n    float weightAll = 0.0;\n    for (int i = 0; i < 9; i++) {\n        float w = gaussianKernel[i];\n        vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n        sum += texel * w;\n        weightAll += w;\n    }\n    gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n"},function(e,t,n){"use strict";t.a="@export qtek.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n    gl_FragColor.a = tex.a;\n#else\n    gl_FragColor.a = 1.0;\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n    return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n    vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n    vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n    vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n    vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n    vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n    texel = median(median(texel, s1, s2), s3, s4);\n#endif\n    float lum = dot(texel.rgb , lumWeight);\n    vec4 color;\n    if (lum > threshold && texel.a > 0.0)\n    {\n        color = vec4(texel.rgb * scale, texel.a * scale);\n    }\n    else\n    {\n        color = vec4(0.0);\n    }\n    gl_FragColor = encodeHDR(color);\n}\n@end\n"},function(e,t,n){"use strict";t.a="@export qtek.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat brightness(vec3 c)\n{\n    return max(max(c.r, c.g), c.b);\n}\n@import qtek.util.clamp_sample\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n    vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n    vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n    vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n    vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n    float s1w = 1.0 / (brightness(s1) + 1.0);\n    float s2w = 1.0 / (brightness(s2) + 1.0);\n    float s3w = 1.0 / (brightness(s3) + 1.0);\n    float s4w = 1.0 / (brightness(s4) + 1.0);\n    float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n    vec4 color = vec4(\n        (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n        1.0\n    );\n#else\n    vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    color *= 0.25;\n#endif\n    gl_FragColor = encodeHDR(color);\n}\n@end"},function(e,t,n){"use strict";t.a="\n@export qtek.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord       )) * 4.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    gl_FragColor = encodeHDR(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.hdr.composite\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n    float blueColor = color.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec4 newColor1 = texture2D(lut, texPos1);\n    vec4 newColor2 = texture2D(lut, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    return newColor.rgb;\n}\n#endif\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = vec4(0.0);\n    vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n    texel = decodeHDR(texture2D(texture, v_Texcoord));\n    originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n    vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n    texel.rgb += bloomTexel.rgb * bloomIntensity;\n    texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n    texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n    texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n    float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n    float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n    float exposureBias = adaptedLumDest * exposure;\n#else\n    float exposureBias = exposure;\n#endif\n    texel.rgb *= exposureBias;\n    texel.rgb = ACESToneMapping(texel.rgb);\n    texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n    texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n    texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n    texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n    texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n    texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n    gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n    #if DEBUG == 1\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n    #elif DEBUG == 2\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n    #elif DEBUG == 3\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n    #endif\n#endif\n    if (originalTexel.a <= 0.01) {\n        gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n    }\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n    tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n    tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n    tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n    tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n    tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n    tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n    gl_FragColor = encodeHDR(tex);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n@import qtek.util.rgbm\nvoid main()\n{\n    vec2 resolution = 1.0 / viewport.zw;\n    vec3 rgbNW =  decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec4 rgbaM  = decodeHDR( texture2D( texture,  gl_FragCoord.xy  * resolution ) );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n    vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA *= 0.5;\n    vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ) ).xyz;\n    rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ) ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n    float lumaB = dot( rgbB, luma );\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n        gl_FragColor = vec4( rgbA, opacity );\n    }\n    else {\n        gl_FragColor = vec4( rgbB, opacity );\n    }\n}\n@end"},function(e,t,n){"use strict";function r(e,t){var n=new s;return a.a.get({url:e,responseType:t,onload:function(e){n.resolve(e)},onerror:function(e){n.reject(e)}}),n}var i=n(22),a=n(25),o=n(11),s=function(){this._fullfilled=!1,this._rejected=!1};s.prototype.resolve=function(e){this._fullfilled=!0,this._rejected=!1,this.trigger("success",e)},s.prototype.reject=function(e){this._rejected=!0,this._fullfilled=!1,this.trigger("error",e)},s.prototype.isFullfilled=function(){return this._fullfilled},s.prototype.isRejected=function(){return this._rejected},s.prototype.isSettled=function(){return this._fullfilled||this._rejected},o.a.extend(s.prototype,i.a),s.makeRequestTask=function(e,t){if("string"==typeof e)return r(e,t);if(e.url){var n=e;return r(n.url,n.responseType)}if(Array.isArray(e)){var i=e,a=[];return i.forEach(function(e){var t,n;"string"==typeof e?t=e:Object(e)===e&&(t=e.url,n=e.responseType),a.push(r(t,n))}),a}},s.makeTask=function(){return new s},o.a.extend(s.prototype,i.a),t.a=s},function(e,t,n){"use strict";var r=n(14),i=n(2),a=r.a.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new i.a,e.__dir.copy(e.worldTransform.z).normalize().negate()._array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=r.a.prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});t.a=a},function(e,t,n){"use strict";function r(e){u.a.defaultsWithPropList(e,c,f),i(e);for(var t="",n=0;n<f.length;n++){t+=e[f[n]].toString()}return t}function i(e){var t=a(e.width,e.height);e.format===s.a.DEPTH_COMPONENT&&(e.useMipmap=!1),t&&e.useMipmap||(e.minFilter==s.a.NEAREST_MIPMAP_NEAREST||e.minFilter==s.a.NEAREST_MIPMAP_LINEAR?e.minFilter=s.a.NEAREST:e.minFilter!=s.a.LINEAR_MIPMAP_LINEAR&&e.minFilter!=s.a.LINEAR_MIPMAP_NEAREST||(e.minFilter=s.a.LINEAR),e.wrapS=s.a.CLAMP_TO_EDGE,e.wrapT=s.a.CLAMP_TO_EDGE)}function a(e,t){return 0==(e&e-1)&&0==(t&t-1)}var o=n(5),s=n(6),u=n(11),l=function(){this._pool={},this._allocatedTextures=[]};l.prototype={constructor:l,get:function(e){var t=r(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var n=this._pool[t];if(!n.length){var i=new o.a(e);return this._allocatedTextures.push(i),i}return n.pop()},put:function(e){var t=r(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]),this._pool[t].push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var c={width:512,height:512,type:s.a.UNSIGNED_BYTE,format:s.a.RGBA,wrapS:s.a.CLAMP_TO_EDGE,wrapT:s.a.CLAMP_TO_EDGE,minFilter:s.a.LINEAR_MIPMAP_LINEAR,magFilter:s.a.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},f=Object.keys(c);t.a=l},function(e,t,n){"use strict";t.a="@export qtek.deferred.gbuffer.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#ifdef FIRST_PASS\nattribute vec3 normal : NORMAL;\n#endif\n@import qtek.chunk.skinning_header\n#ifdef FIRST_PASS\nvarying vec3 v_Normal;\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\nvarying vec2 v_Texcoord;\nvarying vec4 v_ProjPos;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef FIRST_PASS\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n    bool hasTangent = dot(tangent, tangent) > 0.0;\n#endif\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #ifdef FIRST_PASS\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    if (hasTangent) {\n        skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n    }\n    #endif\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n#ifdef FIRST_PASS\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    if (hasTangent) {\n        v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n        v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n    }\n#endif\n    v_ProjPos = gl_Position;\n}\n@end\n@export qtek.deferred.gbuffer1.fragment\nuniform float glossiness;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D roughGlossMap;\nuniform bool useRoughGlossMap;\nuniform bool useRoughness;\nuniform int roughGlossChannel: 0;\nvarying vec4 v_ProjPos;\nfloat indexingTexel(in vec4 texel, in int idx) {\n    if (idx == 3) return texel.a;\n    else if (idx == 1) return texel.g;\n    else if (idx == 2) return texel.b;\n    else return texel.r;\n}\nvoid main()\n{\n    vec3 N = v_Normal;\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n            N = normalize(tbn * N);\n        }\n    }\n    gl_FragColor.rgb = (N + 1.0) * 0.5;\n    float g = glossiness;\n    if (useRoughGlossMap) {\n        float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\n        if (useRoughness) {\n            g2 = 1.0 - g2;\n        }\n        g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    }\n    gl_FragColor.a = g;\n}\n@end\n@export qtek.deferred.gbuffer2.fragment\nuniform sampler2D diffuseMap;\nuniform sampler2D metalnessMap;\nuniform vec3 color;\nuniform float metalness;\nuniform bool useMetalnessMap;\nuniform bool linear;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvoid main ()\n{\n    float m = metalness;\n    if (useMetalnessMap) {\n        vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\n        m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\n    }\n    vec4 texel = texture2D(diffuseMap, v_Texcoord);\n    if (linear) {\n        texel = sRGBToLinear(texel);\n    }\n    gl_FragColor.rgb = texel.rgb * color;\n    gl_FragColor.a = m;\n}\n@end\n@export qtek.deferred.gbuffer.debug\n@import qtek.deferred.chunk.light_head\nuniform int debug: 0;\nvoid main ()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    if (debug == 0) {\n        gl_FragColor = vec4(N, 1.0);\n    }\n    else if (debug == 1) {\n        gl_FragColor = vec4(vec3(z), 1.0);\n    }\n    else if (debug == 2) {\n        gl_FragColor = vec4(position, 1.0);\n    }\n    else if (debug == 3) {\n        gl_FragColor = vec4(vec3(glossiness), 1.0);\n    }\n    else if (debug == 4) {\n        gl_FragColor = vec4(vec3(metalness), 1.0);\n    }\n    else {\n        gl_FragColor = vec4(albedo, 1.0);\n    }\n}\n@end"},function(e,t){var n=function(){this.head=null,this.tail=null,this._len=0},r=n.prototype;r.insert=function(e){var t=new i(e);return this.insertEntry(t),t},r.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e):this.head=this.tail=e,this._len++},r.remove=function(e){var t=e.prev,n=e.next;t?t.next=n:this.head=n,n?n.prev=t:this.tail=t,e.next=e.prev=null,this._len--},r.len=function(){return this._len},r.clear=function(){this.head=this.tail=null,this._len=0};var i=function(e){this.value=e,this.next,this.prev},a=function(e){this._list=new n,this._map={},this._maxSize=e||10,this._lastRemovedEntry=null},o=a.prototype;o.put=function(e,t){var n=this._list,r=this._map,a=null;if(null==r[e]){var o=n.len(),s=this._lastRemovedEntry;if(o>=this._maxSize&&o>0){var u=n.head;n.remove(u),delete r[u.key],a=u.value,this._lastRemovedEntry=u}s?s.value=t:s=new i(t),s.key=e,n.insertEntry(s),r[e]=s}return a},o.get=function(e){var t=this._map[e],n=this._list;if(null!=t)return t!==n.tail&&(n.remove(t),n.insertEntry(t)),t.value},o.clear=function(){this._list.clear(),this._map={}},e.exports=a},function(e,t){function n(e){if(null==e||"object"!=typeof e)return e;var t=e,r=k.call(e);if("[object Array]"===r){t=[];for(var i=0,a=e.length;i<a;i++)t[i]=n(e[i])}else if(F[r])t=e.constructor.from(e);else if(!O[r]&&!L(e)&&!A(e)){t={};for(var o in e)e.hasOwnProperty(o)&&(t[o]=n(e[o]))}return t}function r(e,t,i){if(!b(t)||!b(e))return i?n(t):e;for(var a in t)if(t.hasOwnProperty(a)){var o=e[a],s=t[a];!b(s)||!b(o)||x(s)||x(o)||A(s)||A(o)||S(s)||S(o)||L(s)||L(o)?!i&&a in e||(e[a]=n(t[a],!0)):r(o,s,i)}return e}function i(e,t){for(var n=e[0],i=1,a=e.length;i<a;i++)n=r(n,e[i],t);return n}function a(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function o(e,t,n){for(var r in t)t.hasOwnProperty(r)&&(n?null!=t[r]:null==e[r])&&(e[r]=t[r]);return e}function s(){return document.createElement("canvas")}function u(){return I||(I=V.createCanvas().getContext("2d")),I}function l(e,t){if(e){if(e.indexOf)return e.indexOf(t);for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n}return-1}function c(e,t){function n(){}var r=e.prototype;n.prototype=t.prototype,e.prototype=new n;for(var i in r)e.prototype[i]=r[i];e.prototype.constructor=e,e.superClass=t}function f(e,t,n){e="prototype"in e?e.prototype:e,t="prototype"in t?t.prototype:t,o(e,t,n)}function h(e){if(e)return"string"!=typeof e&&"number"==typeof e.length}function d(e,t,n){if(e&&t)if(e.forEach&&e.forEach===U)e.forEach(t,n);else if(e.length===+e.length)for(var r=0,i=e.length;r<i;r++)t.call(n,e[r],r,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(n,e[a],a,e)}function p(e,t,n){if(e&&t){if(e.map&&e.map===z)return e.map(t,n);for(var r=[],i=0,a=e.length;i<a;i++)r.push(t.call(n,e[i],i,e));return r}}function _(e,t,n,r){if(e&&t){if(e.reduce&&e.reduce===q)return e.reduce(t,n,r);for(var i=0,a=e.length;i<a;i++)n=t.call(r,n,e[i],i,e);return n}}function m(e,t,n){if(e&&t){if(e.filter&&e.filter===H)return e.filter(t,n);for(var r=[],i=0,a=e.length;i<a;i++)t.call(n,e[i],i,e)&&r.push(e[i]);return r}}function g(e,t,n){if(e&&t)for(var r=0,i=e.length;r<i;r++)if(t.call(n,e[r],r,e))return e[r]}function v(e,t){var n=G.call(arguments,2);return function(){return e.apply(t,n.concat(G.call(arguments)))}}function y(e){var t=G.call(arguments,1);return function(){return e.apply(this,t.concat(G.call(arguments)))}}function x(e){return"[object Array]"===k.call(e)}function T(e){return"function"==typeof e}function E(e){return"[object String]"===k.call(e)}function b(e){var t=typeof e;return"function"===t||!!e&&"object"==t}function S(e){return!!O[k.call(e)]}function A(e){return"object"==typeof e&&"number"==typeof e.nodeType&&"object"==typeof e.ownerDocument}function w(e){return e!==e}function N(e){for(var t=0,n=arguments.length;t<n;t++)if(null!=arguments[t])return arguments[t]}function C(){return Function.call.apply(G,arguments)}function R(e,t){if(!e)throw new Error(t)}function M(e){e[W]=!0}function L(e){return e[W]}function P(e){e&&d(e,function(e,t){this.set(t,e)},this)}function D(e){return new P(e)}var I,O={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},F={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},k=Object.prototype.toString,B=Array.prototype,U=B.forEach,H=B.filter,G=B.slice,z=B.map,q=B.reduce,W="__ec_primitive__";P.prototype={constructor:P,get:function(e){return this["_ec_"+e]},set:function(e,t){return this["_ec_"+e]=t,t},each:function(e,t){void 0!==t&&(e=v(e,t));for(var n in this)this.hasOwnProperty(n)&&e(this[n],n.slice(4))},removeKey:function(e){delete this[e]}};var V={inherits:c,mixin:f,clone:n,merge:r,mergeAll:i,extend:a,defaults:o,getContext:u,createCanvas:s,indexOf:l,slice:C,find:g,isArrayLike:h,each:d,map:p,reduce:_,filter:m,bind:v,curry:y,isArray:x,isString:E,isObject:b,isFunction:T,isBuiltInObject:S,isDom:A,eqNaN:w,retrieve:N,assert:R,setAsPrimitive:M,createHashMap:D,noop:function(){}};e.exports=V},function(e,t,n){"use strict";t.a={ENV_TEXTURE_ROOT:"../examples/asset/texture/",AUTO_SAVE:!0}},function(e,t,n){"use strict";function r(){["mainLight","secondaryLight","tertiaryLight"].forEach(function(e){B[e].alpha=90*B[e].$padAngle[1],B[e].beta=180*B[e].$padAngle[0]}),x.setMainLight(B.mainLight),x.setSecondaryLight(B.secondaryLight),x.setTertiaryLight(B.tertiaryLight),x.setAmbientLight(B.ambientLight)}function i(){x.setPostEffect(B.postEffect)}function a(){B.ambientCubemapLight.texture=M.a.ENV_TEXTURE_ROOT+B.ambientCubemapLight.$texture+".hdr",B.ambientCubemapLight.diffuseIntensity=B.ambientCubemapLight.specularIntensity=B.ambientCubemapLight.$intensity,x.setAmbientCubemapLight(B.ambientCubemapLight)}function o(){x.setGround(B.ground)}function s(){r(),i(),a(),o()}function u(){var e=Math.max(U.$textureTiling,.01);U.uvRepeat=[e,e],U.transparent=U.alpha<1,x.setMaterial(U.name,U)}function l(e){U.name=e.name;var t=x.getMaterial(e.name);t.$textureTiling=t.uvRepeat[0],P.a.extend(U,t),null==t.specularColor?(E.enable(),b.disable()):(b.enable(),E.disable()),H.update()}function c(e){return e&&"none"!==e}function f(e,t,n){var r=!1;c(n)&&([["diffuseMap","color","#fff"],["metalnessMap","metalness",.5],["roughnessMap","roughness",.5],["glossinessMap","glossiness",.5],["specularMap","specularColor","#fff"],["emissiveMap","emission","#fff"]].forEach(function(t){e===t[0]&&(console.warn("Force %s to be %f after set %s",t[1],t[2],t[0]),U[t[1]]=t[2],r=!0)},this),R.g(t),S[n]=t.name,r&&H.update()),u()}function h(){document.getElementById("tip").style.display="block"}function d(){document.getElementById("tip").style.display="none"}function p(){x=new w.a.Viewer(document.getElementById("viewport"),B),x.enablePicking(),x.setCameraControl(B.viewControl),x.start();var e;x.on("select",function(t){x.refresh(),l(t.target.material),e=t.target}),x.on("doffocus",function(e){B.postEffect.depthOfField.enable&&(B.postEffect.depthOfField.focalDistance=e.distance,H.update())}),x.on("unselect",function(){x.refresh(),E.disable(),b.disable(),e=null}),x.on("afterrender",function(t,n,r){e&&Object(k.a)(x,[e],r)}),x.on("updatecamera",function(e){B.viewControl={center:e.center,alpha:e.alpha,beta:e.beta,distance:e.distance}})}function _(){var e=document.getElementById("loading");e.parentNode.removeChild(e),document.getElementById("toolbar").style.display="block",document.getElementById("reset").addEventListener("click",g),document.getElementById("download").addEventListener("click",v),p(),FileAPI.event.dnd(document.getElementById("main"),function(e){},function(e){e=e.filter(function(e){return e.name.match(/.(gltf|bin)$/)||e.type.match(/image/)}),R.c(e,function(e,t){d(),S={};for(var n in t)S[t[n]]=n;var r=!(!e.extras||!e.extras.qtekModelViewerConfig);r&&(I.a.merge(B,e.extras.qtekModelViewerConfig,!0),x.setCameraControl(B.viewControl),s(),H.update()),x.loadModel(e,{files:t,textureFlipY:B.textureFlipY,zUpToYUp:B.zUpToYUp,includeTexture:!r}).on("ready",function(){r&&(e.extras.qtekModelViewerConfig.materials||[]).forEach(function(e){for(var n in e)t[e[n]]&&(e[n]=t[e[n]]);x.setMaterial(e.name,e)})}).on("loadmodel",y),E.disable(),b.disable()}),M.a.AUTO_SAVE&&R.e(e)}),document.body.addEventListener("drop",function(e){e.preventDefault()}),m(),G=!0}function m(){T=H.addPanel({label:"Settings",width:250}),T.addGroup({label:"Global"}).addSubGroup({label:"Load Option"}).addCheckbox(B,"textureFlipY",{label:"Flip Texture"}).addCheckbox(B,"zUpToYUp",{label:"Z Up"}).addSubGroup({label:"Ground"}).addCheckbox(B.ground,"show",{label:"Show",onChange:o}),T.addGroup({label:"Environment",enable:!1}).addSelect(B.ambientCubemapLight,"$textureOptions",{label:"HDR Texture",onChange:a,target:"$texture"}).addNumberInput(B.ambientCubemapLight,"$intensity",{label:"Intensity",onChange:a,step:.1}),T.addGroup({label:"Light",enable:!1}).addSubGroup({label:"Main",enable:!1}).addCheckbox(B.mainLight,"shadow",{label:"Cast Shadow",onChange:r}).addNumberInput(B.mainLight,"intensity",{label:"Intensity",step:.1,onChange:r}).addColor(B.mainLight,"color",{label:"Color",onChange:r}).addPad(B.mainLight,"$padAngle",{label:"Direction",onChange:r}).addSubGroup({label:"Secondary",enable:!1}).addNumberInput(B.secondaryLight,"intensity",{label:"Intensity",step:.1,onChange:r}).addColor(B.secondaryLight,"color",{label:"Color",onChange:r}).addPad(B.secondaryLight,"$padAngle",{label:"Direction",onChange:r}).addSubGroup({label:"Tertiary",enable:!1}).addNumberInput(B.tertiaryLight,"intensity",{label:"Intensity",step:.1,onChange:r}).addColor(B.tertiaryLight,"color",{label:"Color",onChange:r}).addPad(B.tertiaryLight,"$padAngle",{label:"Direction",onChange:r}).addSubGroup({label:"Ambient",enable:!1}).addNumberInput(B.ambientLight,"intensity",{label:"Intensity",step:.1,onChange:r}).addColor(B.ambientLight,"color",{label:"Color",onChange:r}),T.addGroup({label:"Post Effect",enable:!1}).addCheckbox(B.postEffect,"enable",{label:"Enable",onChange:i}).addSubGroup({label:"Bloom",enable:!1}).addCheckbox(B.postEffect.bloom,"enable",{label:"Enable",onChange:i}).addNumberInput(B.postEffect.bloom,"intensity",{label:"Intensity",step:.1,onChange:i}).addSubGroup({label:"Screen Space Ambient Occulusion",enable:!1}).addCheckbox(B.postEffect.screenSpaceAmbientOcclusion,"enable",{label:"Enable",onChange:i}).addNumberInput(B.postEffect.screenSpaceAmbientOcclusion,"radius",{label:"Radius",step:.1,onChange:i}).addNumberInput(B.postEffect.screenSpaceAmbientOcclusion,"intensity",{label:"Intensity",step:.1,onChange:i}).addSelect(B.postEffect.screenSpaceAmbientOcclusion,"$qualityOptions",{label:"Quality",onChange:i,target:"quality"}).addSubGroup({label:"Screen Space Reflection",enable:!1}).addCheckbox(B.postEffect.screenSpaceReflection,"enable",{label:"Enable",onChange:i}).addNumberInput(B.postEffect.screenSpaceReflection,"maxRoughness",{label:"Max Roughness",step:.01,onChange:i}).addSelect(B.postEffect.screenSpaceReflection,"$qualityOptions",{label:"Quality",onChange:i,target:"quality"}).addSubGroup({label:"Depth of Field",enable:!1}).addCheckbox(B.postEffect.depthOfField,"enable",{label:"Enable",onChange:i}).addNumberInput(B.postEffect.depthOfField,"fstop",{label:"f-stop",step:.1,onChange:i}).addNumberInput(B.postEffect.depthOfField,"focalDistance",{label:"Focal Distance",step:.1,onChange:i}).addNumberInput(B.postEffect.depthOfField,"focalRange",{label:"Focal Range",step:.1,onChange:i}).addNumberInput(B.postEffect.depthOfField,"blurRadius",{label:"Blur Radius",step:.1,onChange:i}).addSelect(B.postEffect.depthOfField,"$qualityOptions",{label:"Quality",onChange:i,target:"quality"}).addSubGroup({label:"Color Correction",enable:!1}).addNumberInput(B.postEffect.colorCorrection,"exposure",{label:"Exposure",step:.1,onChange:i}).addNumberInput(B.postEffect.colorCorrection,"brightness",{label:"Brightness",step:.1,onChange:i}).addNumberInput(B.postEffect.colorCorrection,"contrast",{label:"Contrast",step:.1,onChange:i}).addNumberInput(B.postEffect.colorCorrection,"saturation",{label:"Saturation",step:.1,onChange:i}),E=H.addPanel({label:"Material - Metalllic Roughness",width:240,fixed:!1,align:"left"}),E.addStringOutput(U,"name",{label:"Name"}).addColor(U,"color",{label:"Base Color",onChange:u}).addSlider(U,"alpha","$alphaRange",{label:"Alpha",onChange:u}).addSlider(U,"metalness","$metalnessRange",{label:"Metalness",onChange:u}).addSlider(U,"roughness","$roughnessRange",{label:"Roughness",onChange:u}).addColor(U,"emission",{label:"Emission",onChange:u}).addNumberInput(U,"emissionIntensity",{label:"Emission Intensity",onChange:u}).addNumberInput(U,"$textureTiling",{label:"Tiling",onChange:u,step:.5}).addCustomComponent(O.a,U,"diffuseMap",{label:"Base Map",onChange:f.bind(null,"diffuseMap")}).addCustomComponent(O.a,U,"normalMap",{label:"Normal/Bump Map",onChange:f.bind(null,"normalMap")}).addCustomComponent(O.a,U,"metalnessMap",{label:"Metalness Map",onChange:f.bind(null,"metalnessMap")}).addCustomComponent(O.a,U,"roughnessMap",{label:"Roughness Map",onChange:f.bind(null,"roughnessMap")}).addCustomComponent(O.a,U,"emissiveMap",{label:"Emissive Map",onChange:f.bind(null,"emissiveMap")}),E.disable(),b=H.addPanel({label:"Material - Specular Glossiness",width:240,fixed:!1,align:"left"}),b.addStringOutput(U,"name",{label:"Name"}).addColor(U,"color",{label:"Base Color",onChange:u}).addSlider(U,"alpha","$alphaRange",{label:"Alpha",onChange:u}).addColor(U,"specularColor",{label:"Specular Factor",onChange:u}).addSlider(U,"glossiness","$glossinessRange",{label:"Glossiness",onChange:u}).addColor(U,"emission",{label:"Emission",onChange:u}).addNumberInput(U,"emissionIntensity",{label:"Emission Intensity",onChange:u}).addNumberInput(U,"$textureTiling",{label:"Tiling",onChange:u,step:.5}).addCustomComponent(O.a,U,"diffuseMap",{label:"Base Map",onChange:f.bind(null,"diffuseMap")}).addCustomComponent(O.a,U,"normalMap",{label:"Normal/Bump Map",onChange:f.bind(null,"normalMap")}).addCustomComponent(O.a,U,"specularMap",{label:"Specular Map",onChange:f.bind(null,"specularMap")}).addCustomComponent(O.a,U,"glossinessMap",{label:"Glossiness Map",onChange:f.bind(null,"glossinessMap")}).addCustomComponent(O.a,U,"emissiveMap",{label:"Emissive Map",onChange:f.bind(null,"emissiveMap")}),b.disable()}function g(){swal({title:"Reset?",text:"Reset the viewer",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes!"}).then(function(){I.a.merge(B,Object(N.a)(),!0),I.a.merge(U,Object(C.a)(),!0),B.materials=[],H.update(),E.disable(),b.disable(),x.dispose(),p(),R.d(),h(),F.a(x)}).catch(function(){})}function v(){R.a()}function y(){x.stopAnimation(),F.a(x)}Object.defineProperty(t,"__esModule",{value:!0});var x,T,E,b,S,A=n(17),w=n(68),N=n(140),C=n(141),R=n(142),M=n(64),L=n(145),P=n(11),D=n(63),I=n.n(D),O=n(148),F=n(149),k=n(150),B=(new L.a,new A.a,Object(N.a)()),U=Object(C.a)(),H=new ControlKit({loadAndSave:!0,useExternalStyle:!0}),G=!1;R.b(function(e,t,n){if(n&&I.a.merge(B,n,!0),!G)if(_(),e){S={};for(var r in t)S[t[r]]=r;x.loadModel(e,{files:t,textureFlipY:B.textureFlipY,zUpToYUp:B.zUpToYUp,includeTexture:!1}).on("ready",function(){n&&n.materials&&n.materials.forEach(function(e){for(var n in e)t[e[n]]&&(e[n]=t[e[n]]);x.setMaterial(e.name,e)})}).on("loadmodel",y)}else h()}),setTimeout(function(){G||(console.warn("Init time out"),_())},5e3),setInterval(function(){if(x){var e={};B.materials=x.getMaterialsNames().map(function(t){var n=x.getMaterial(t);for(var r in n)S[n[r]]&&(n[r]=S[n[r]]);return n.targetMeshes=[],e[t]=n,n}),x.getModelRoot().traverse(function(t){t.material&&e[t.material.name]&&e[t.material.name].targetMeshes.push(t.name)}),M.a.AUTO_SAVE&&R.f(B)}},5e3),window.addEventListener("resize",function(){x.resize()})},function(e,t,n){"use strict";function r(e,t,n){"object"==typeof t&&(n=t,t=null);var r,o=this;if(!(e instanceof Function)){r=[];for(var s in e)e.hasOwnProperty(s)&&r.push(s)}var u=function(t){if(o.apply(this,arguments),e instanceof Function?i(this,e.call(this,t)):a(this,e,r),this.constructor===u)for(var n=u.__initializers__,s=0;s<n.length;s++)n[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],t&&u.__initializers__.push(t);var l=function(){};return l.prototype=o.prototype,u.prototype=new l,u.prototype.constructor=u,i(u.prototype,n),u.extend=o.extend,u.derive=o.extend,u}function i(e,t){if(t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}function a(e,t,n){for(var r=0;r<n.length;r++){var i=n[r];e[i]=t[i]}}t.a={extend:r,derive:r}},function(e,t,n){"use strict";var r=n(0),i=n.n(r),a=i.a.quat,o=function(e,t,n,r){e=e||0,t=t||0,n=n||0,r=void 0===r?1:r,this._array=a.fromValues(e,t,n,r),this._dirty=!0};o.prototype={constructor:o,add:function(e){return a.add(this._array,this._array,e._array),this._dirty=!0,this},calculateW:function(){return a.calculateW(this._array,this._array),this._dirty=!0,this},set:function(e,t,n,r){return this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=r,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._array[3]=e[3],this._dirty=!0,this},clone:function(){return new o(this.x,this.y,this.z,this.w)},conjugate:function(){return a.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(e){return a.copy(this._array,e._array),this._dirty=!0,this},dot:function(e){return a.dot(this._array,e._array)},fromMat3:function(e){return a.fromMat3(this._array,e._array),this._dirty=!0,this},fromMat4:function(){var e=i.a.mat3,t=e.create();return function(n){return e.fromMat4(t,n._array),e.transpose(t,t),a.fromMat3(this._array,t),this._dirty=!0,this}}(),identity:function(){return a.identity(this._array),this._dirty=!0,this},invert:function(){return a.invert(this._array,this._array),this._dirty=!0,this},len:function(){return a.len(this._array)},length:function(){return a.length(this._array)},lerp:function(e,t,n){return a.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},mul:function(e){return a.mul(this._array,this._array,e._array),this._dirty=!0,this},mulLeft:function(e){return a.multiply(this._array,e._array,this._array),this._dirty=!0,this},multiply:function(e){return a.multiply(this._array,this._array,e._array),this._dirty=!0,this},multiplyLeft:function(e){return a.multiply(this._array,e._array,this._array),this._dirty=!0,this},normalize:function(){return a.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(e){return a.rotateX(this._array,this._array,e),this._dirty=!0,this},rotateY:function(e){return a.rotateY(this._array,this._array,e),this._dirty=!0,this},rotateZ:function(e){return a.rotateZ(this._array,this._array,e),this._dirty=!0,this},rotationTo:function(e,t){return a.rotationTo(this._array,e._array,t._array),this._dirty=!0,this},setAxes:function(e,t,n){return a.setAxes(this._array,e._array,t._array,n._array),this._dirty=!0,this},setAxisAngle:function(e,t){return a.setAxisAngle(this._array,e._array,t),this._dirty=!0,this},slerp:function(e,t,n){return a.slerp(this._array,e._array,t._array,n),this._dirty=!0,this},sqrLen:function(){return a.sqrLen(this._array)},squaredLength:function(){return a.squaredLength(this._array)},fromEuler:function(e,t){return o.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var s=Object.defineProperty;if(s){var u=o.prototype;s(u,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),s(u,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),s(u,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}}),s(u,"w",{get:function(){return this._array[3]},set:function(e){this._array[3]=e,this._dirty=!0}})}o.add=function(e,t,n){return a.add(e._array,t._array,n._array),e._dirty=!0,e},o.set=function(e,t,n,r,i){a.set(e._array,t,n,r,i),e._dirty=!0},o.copy=function(e,t){return a.copy(e._array,t._array),e._dirty=!0,e},o.calculateW=function(e,t){return a.calculateW(e._array,t._array),e._dirty=!0,e},o.conjugate=function(e,t){return a.conjugate(e._array,t._array),e._dirty=!0,e},o.identity=function(e){return a.identity(e._array),e._dirty=!0,e},o.invert=function(e,t){return a.invert(e._array,t._array),e._dirty=!0,e},o.dot=function(e,t){return a.dot(e._array,t._array)},o.len=function(e){return a.length(e._array)},o.lerp=function(e,t,n,r){return a.lerp(e._array,t._array,n._array,r),e._dirty=!0,e},o.slerp=function(e,t,n,r){return a.slerp(e._array,t._array,n._array,r),e._dirty=!0,e},o.mul=function(e,t,n){return a.multiply(e._array,t._array,n._array),e._dirty=!0,e},o.multiply=o.mul,o.rotateX=function(e,t,n){return a.rotateX(e._array,t._array,n),e._dirty=!0,e},o.rotateY=function(e,t,n){return a.rotateY(e._array,t._array,n),e._dirty=!0,e},o.rotateZ=function(e,t,n){return a.rotateZ(e._array,t._array,n),e._dirty=!0,e},o.setAxisAngle=function(e,t,n){return a.setAxisAngle(e._array,t._array,n),e._dirty=!0,e},o.normalize=function(e,t){return a.normalize(e._array,t._array),e._dirty=!0,e},o.sqrLen=function(e){return a.sqrLen(e._array)},o.squaredLength=o.sqrLen,o.fromMat3=function(e,t){return a.fromMat3(e._array,t._array),e._dirty=!0,e},o.setAxes=function(e,t,n,r){return a.setAxes(e._array,t._array,n._array,r._array),e._dirty=!0,e},o.rotationTo=function(e,t,n){return a.rotationTo(e._array,t._array,n._array),e._dirty=!0,e},o.fromEuler=function(e,t,n){e._dirty=!0,t=t._array;var r=e._array,i=Math.cos(t[0]/2),a=Math.cos(t[1]/2),o=Math.cos(t[2]/2),s=Math.sin(t[0]/2),u=Math.sin(t[1]/2),l=Math.sin(t[2]/2),n=(n||"XYZ").toUpperCase();switch(n){case"XYZ":r[0]=s*a*o+i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o-s*u*l;break;case"YXZ":r[0]=s*a*o+i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o+s*u*l;break;case"ZXY":r[0]=s*a*o-i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o-s*u*l;break;case"ZYX":r[0]=s*a*o-i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o+s*u*l;break;case"YZX":r[0]=s*a*o+i*u*l,r[1]=i*u*o+s*a*l,r[2]=i*a*l-s*u*o,r[3]=i*a*o-s*u*l;break;case"XZY":r[0]=s*a*o-i*u*l,r[1]=i*u*o-s*a*l,r[2]=i*a*l+s*u*o,r[3]=i*a*o+s*u*l}},t.a=o},function(e,t,n){"use strict";var r=n(69);t.a={Viewer:r.a}},function(e,t,n){"use strict";function r(e,t){t=w.a.clone(t),w.a.merge(t,S.a),this.init(e,t)}var i=n(30),a=n(39),o=n(2),s=n(90),u=n(92),l=n(58),c=n(93),f=n(11),h=n(16),d=n(15),p=n(8),_=n(32),m=n(3),g=n(94),v=n(22),y=n(20),x=n(33),T=n(98),E=n(29),b=n(131),S=n(133),A=n(63),w=n.n(A),N=n(134),C=n(135),R=n(137),M=n(139);m.a.import(M.a),r.prototype.init=function(e,t){t=t||{},this.root=e,this._animation=new s.a;var n=new i.a({devicePixelRatio:t.devicePixelRatio||window.devicePixelRatio});e.appendChild(n.canvas),n.canvas.style.cssText="position:absolute;left:0;top:0",this._renderer=n,this._renderMain=new T.a(n,t.shadow,"perspective"),this._renderMain.afterRenderScene=function(e,t,n){this.trigger("renderscene",e,t,n)}.bind(this),this._renderMain.afterRenderAll=function(e,t,n){this.trigger("afterrender",e,t,n)}.bind(this);var r=this._cameraControl=new C.a({renderer:n,animation:this._animation,domElement:e});r.target=this._renderMain.camera,r.init(),this._hotspotManager=new R.a({dom:e,renderer:n,camera:this._renderMain.camera}),this._skeletons=[],this._clips=[],this._takes=[],this._materialsMap={},this._sceneHelper=new b.a(this._renderMain.scene),this._sceneHelper.initLight(this._renderMain.scene),this.resize(),t.postEffect&&this.setPostEffect(t.postEffect),t.mainLight&&this.setMainLight(t.mainLight),t.secondaryLight&&this.setSecondaryLight(t.secondaryLight),t.tertiaryLight&&this.setTertiaryLight(t.tertiaryLight),t.ambientCubemapLight&&this.setAmbientCubemapLight(t.ambientCubemapLight),t.ambientLight&&this.setAmbientLight(t.ambientLight),t.environment&&this.setEnvironment(t.environment),this._createGround(),t.ground&&this.setGround(t.ground),this.setCameraControl({distance:20,minDisntance:2,maxDistance:100,center:[0,0,0]}),this._enablePicking=t.picking||!1,this._initHandlers(),r.on("update",function(){this.trigger("updatecamera",{center:r.getCenter(),alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance()}),this.refresh()},this),this.shaderLibrary=y.a.createLibrary()},r.prototype._createGround=function(){var e=new d.a({isGround:!0,material:new p.a({shader:new m.a({vertex:m.a.source("qmv.ground.vertex"),fragment:m.a.source("qmv.ground.fragment")}),transparent:!0}),castShadow:!1,geometry:new _.a});e.material.set("color",[1,1,1,1]),e.scale.set(40,40,1),e.rotation.rotateX(-Math.PI/2),this._groundMesh=e,this._renderMain.scene.add(e)},r.prototype._addModel=function(e,t,n,r){this.removeModel(),this._renderMain.scene.add(e),this._skeletons=n.slice(),this._modelNode=e,this._setAnimationClips(r),t&&t.length&&(this._nodes=t);var i={};e.traverse(function(e){if(e.material){var t=e.material;i[t.name]=i[t.name]||[],i[t.name].push(t)}},this),this._materialsMap=i,this._updateMaterialsSRGB(),this._stopAccumulating()},r.prototype._removeAnimationClips=function(){this._clips.forEach(function(e){this._animation.removeClip(e)},this),this._clips=[],this._takes=[]},r.prototype._setAnimationClips=function(e){function t(){n.refresh()}var n=this;e.forEach(function(e){e.tracks.forEach(function(e){e.target||(e.target=this._nodes[e.targetNodeIndex])},this),e.onframe=t,this._animation.addClip(e),this._takes.push({name:e.name,range:[0,e.life],clip:e})},this),this._clips=e.slice()},r.prototype._initHandlers=function(){this._picking=new g.a({renderer:this._renderer,scene:this._renderMain.scene,camera:this._renderMain.camera}),this._clickHandler=this._clickHandler.bind(this),this._mouseDownHandler=this._mouseDownHandler.bind(this),this.root.addEventListener("mousedown",this._mouseDownHandler),this.root.addEventListener("click",this._clickHandler)},r.prototype._mouseDownHandler=function(e){this._startX=e.clientX,this._startY=e.clientY},r.prototype._clickHandler=function(e){if(this._enablePicking||this._renderMain.isDOFEnabled()){var t=e.clientX-this._startX,n=e.clientY-this._startY;if(!(Math.sqrt(t*t+n*n)>=10)){var r=this._picking.pick(e.clientX,e.clientY,!0);r&&(this._renderMain.setDOFFocusOnPoint(r.distance),this.trigger("doffocus",r),this.refresh()),r&&!r.target.isGround?(this._selectResult=r,this.trigger("select",r)):(this._selectResult&&this.trigger("unselect",this._selectResult),this._selectResult=null)}}},r.prototype.enablePicking=function(){this._enablePicking=!0},r.prototype.disablePicking=function(){this._enablePicking=!1},r.prototype.resize=function(){var e=this._renderer;e.resize(this.root.clientWidth,this.root.clientHeight),this._renderMain.setViewport(0,0,e.getWidth(),e.getHeight(),e.getDevicePixelRatio()),this.refresh()},r.prototype.autoFitModel=function(e){if(e=e||10,this._modelNode){this.setPose(10),this._modelNode.update();var t=Object(N.a)(this._modelNode),n=new o.a;n.copy(t.max).sub(t.min);var r=new o.a;r.copy(t.max).add(t.min).scale(.5);var i=e/Math.max(n.x,n.y,n.z);this._modelNode.scale.set(i,i,i),this._modelNode.position.copy(r).scale(-i),this._modelNode.update(),this._hotspotManager.setBoundingBox(t.min._array,t.max._array),this._modelNode.traverse(function(e){e.isSkinnedMesh()&&e.geometry.boundingBox.applyTransform(this._modelNode.worldTransform)},this),this._groundMesh.position.y=-n.y*i/2}},r.prototype.loadModel=function(e,t){if(t=t||{},!e)throw new Error("URL of model is not provided");var n=t.shader||"standard",r=null;t.files&&(r=function(e){if(e.match(/^data:(.*?)base64,/))return e;var n=e.substr(e.lastIndexOf("/")+1);return t.files[n]?t.files[n]:n});var i={rootNode:new h.a,shaderName:"qtek."+n,textureRootPath:t.textureRootPath,bufferRootPath:t.bufferRootPath,crossOrigin:"Anonymous",includeTexture:null==t.includeTexture||t.includeTexture,textureFlipY:t.textureFlipY,shaderLibrary:this.shaderLibrary};r&&(i.resolveTexturePath=i.resolveBinaryPath=r);var o=new a.a(i);"string"==typeof e?o.load(e):o.parse(e),t.zUpToYUp&&o.rootNode.rotation.rotateX(-Math.PI/2);var s=new l.a,u=0,d=0,p=0;return o.success(function(e){e.rootNode.traverse(function(e){p++,e.geometry&&(d+=e.geometry.triangleCount,u+=e.geometry.vertexCount)}),this._preprocessModel(e.rootNode,t),this._addModel(e.rootNode,e.nodes,e.skeletons,e.clips),this.autoFitModel();var n={triangleCount:d,vertexCount:u,nodeCount:p,meshCount:Object.keys(e.meshes).length,materialCount:Object.keys(e.materials).length,textureCount:Object.keys(e.textures).length};s.trigger("loadmodel",n);var r=[];f.a.each(e.textures,function(e){e.isRenderable()||r.push(e)}),(new c.a).allSettled(r).success(function(){this._convertBumpToNormal(),s.trigger("ready"),this.refresh()},this),this.refresh()},this),o.error(function(){s.trigger("error")}),this._textureFlipY=t.textureFlipY,this._shaderName=n,s},r.prototype._convertBumpToNormal=function(){for(var e in this._materialsMap)for(var t=0;t<this._materialsMap[e].length;t++){var n=this._materialsMap[e][t],r=n.get("normalMap");if(r&&x.a.isHeightImage(r.image)){var i=x.a.heightToNormal(r.image);i.srcImage=r.image,r.image=i}}},r.prototype.removeModel=function(){var e=this._modelNode;e&&(this._renderer.disposeNode(e),this._renderMain.scene.remove(e),this._modelNode=null,this.refresh()),this._removeAnimationClips(),this._materialsMap={},this._nodes=[],this._skeletons=[]},r.prototype.getScene=function(){return this._renderMain.scene},r.prototype.getModelRoot=function(){return this._modelNode},r.prototype._preprocessModel=function(e,t){var n=null!=t.alphaCutoff?t.alphaCutoff:0,r=t.shader||"standard",i=this.shaderLibrary,a=[];e.traverse(function(e){e.skeleton&&a.push(e)}),a.forEach(function(e){u.a.splitByJoints(e,15,!0,i,"qtek."+r)},this),e.traverse(function(e){e.geometry&&(e.geometry.updateBoundingBox(),e.culling=!1),e.material&&(e.material.shader.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),e.material.shader.define("fragment","ALPHA_TEST"),e.material.shader.define("fragment","DOUBLE_SIDED"),e.material.shader.precision="mediump",e.material.set("alphaCutoff",n),e.material.transparent&&(e.castShadow=!1))})},r.prototype.loadAnimation=function(e){var t=new a.a({rootNode:new h.a,crossOrigin:"Anonymous"});return t.load(e),t.success(function(e){this._removeAnimationClips(),this._setAnimationClips(e.clips)},this),t},r.prototype.pauseAnimation=function(){this._clips.forEach(function(e){e.pause()})},r.prototype.stopAnimation=function(){this._clips.forEach(function(e){this._animation.removeClip(e)},this)},r.prototype.resumeAnimation=function(){this._clips.forEach(function(e){e.resume()})},r.prototype.setCameraControl=function(e){this._cameraControl.setOption(e),this.refresh()},r.prototype.setMainLight=function(e){this._sceneHelper.updateMainLight(e,this),this.refresh()},r.prototype.setSecondaryLight=function(e){this._sceneHelper.updateSecondaryLight(e,this),this.refresh()},r.prototype.setTertiaryLight=function(e){this._sceneHelper.updateTertiaryLight(e,this),this.refresh()},r.prototype.setAmbientLight=function(e){this._sceneHelper.updateAmbientLight(e,this),this.refresh()},r.prototype.setAmbientCubemapLight=function(e){this._sceneHelper.updateAmbientCubemapLight(e,this),this.refresh()},r.prototype.setEnvironment=function(e){this._sceneHelper.updateSkybox(e,this._renderMain.isLinearSpace(),this)},r.prototype.setMaterial=function(e,t){function n(e){return e&&"none"!==e}function r(e){if(e in t){var r=s.indexOf(e);if(n(t[e])){var i=E.a.loadTexture(t[e],a,{flipY:o,anisotropic:8},function(t){if("normalMap"===e&&x.a.isHeightImage(t.image)){var n=x.a.heightToNormal(t.image);n.srcImage=t.image,t.image=n}a.refresh()});r<0&&s.push(e),u[e]=i}else r>=0&&s.splice(r,1),u[e]=null}}t=t||{};var i=this._materialsMap[e],a=this,o=this._textureFlipY;if(!i||!i.length)return void console.warn("Material %s not exits",e);var s=i[0].shader.getEnabledTextures(),u={};["diffuseMap","normalMap","emissiveMap"].forEach(function(e){r(e)},this),i[0].shader.isDefined("fragment","USE_METALNESS")?["metalnessMap","roughnessMap"].forEach(function(e){r(e)},this):["specularMap","glossinessMap"].forEach(function(e){r(e)},this),u.normalMap&&this._modelNode.traverse(function(t){t.material&&t.material.name===e&&t.geometry.generateTangents()}),i.forEach(function(e){null!=t.transparent&&(e.transparent=!!t.transparent,e.depthMask=!t.transparent),["color","emission","specularColor"].forEach(function(n){null!=t[n]&&e.set(n,E.a.parseColor(t[n]))}),["alpha","alphaCutoff","metalness","roughness","glossiness","emissionIntensity","uvRepeat"].forEach(function(n){null!=t[n]&&e.set(n,t[n])});for(var n in u)e.set(n,u[n]);e.attachShader(this.shaderLibrary.get("qtek."+(this._shaderName||"standard"),{fragmentDefines:e.shader.fragmentDefines,textures:s,vertexDefines:e.shader.vertexDefines,precision:e.shader.precision}),!0)},this),this.refresh()},r.prototype.getMaterial=function(e){function t(e){var t=r.get(e);if(!t||!t.isRenderable())return"";for(var n=t.image;n.srcImage;)n=n.srcImage;return n&&n.src||""}var n=this._materialsMap[e];if(!n)return void console.warn("Material %s not exits",e);var r=n[0],i={name:e};return["color","emission"].forEach(function(e){i[e]=E.a.stringifyColor(r.get(e),"hex")}),["alpha","alphaCutoff","emissionIntensity","uvRepeat"].forEach(function(e){i[e]=r.get(e)}),["diffuseMap","normalMap","emissiveMap"].forEach(function(e){i[e]=t(e)}),r.shader.isDefined("fragment","USE_METALNESS")?(["metalness","roughness"].forEach(function(e){i[e]=r.get(e)}),["metalnessMap","roughnessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrMetallicRoughness"):(i.specularColor=E.a.stringifyColor(r.get("specularColor"),"hex"),i.glossiness=r.get("glossiness"),["specularMap","glossinessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrSpecularGlossiness"),i},r.prototype.setGround=function(e){this._groundMesh.invisible=!e.show,this.refresh()},r.prototype.getMaterialsNames=function(){return Object.keys(this._materialsMap)},r.prototype.setPostEffect=function(e){this._renderMain.setPostEffect(e),this._updateMaterialsSRGB(),this.refresh()},r.prototype.start=function(){if(this._disposed)return void console.warn("Viewer already disposed");this._animation.start(),this._animation.on("frame",this._loop,this)},r.prototype.stop=function(){this._animation.stop(),this._animation.off("frame",this._loop)},r.prototype.addHotspot=function(e,t){return this._hotspotManager.add(e,t)},r.prototype.setPose=function(e){this._clips.forEach(function(t){t.setTime(e)}),this._skeletons.forEach(function(e){e.update()}),this.refresh()},r.prototype.getAnimationDuration=function(){var e=0;return this._clips.forEach(function(t){e=Math.max(t.life,e)}),e},r.prototype.refresh=function(){this._needsRefresh=!0},r.prototype.getRenderer=function(){return this._renderer},r.prototype._updateMaterialsSRGB=function(){var e=this._renderMain.isLinearSpace();for(var t in this._materialsMap)for(var n=this._materialsMap[t],r=0;r<n.length;r++)n[r].shader[e?"define":"undefine"]("fragment","SRGB_DECODE")},r.prototype._loop=function(e){this._disposed||this._needsRefresh&&(this._needsRefresh=!1,this._renderMain.prepareRender(),this._renderMain.render(),this._startAccumulating(),this._hotspotManager.update())};var L=1;r.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)},r.prototype._startAccumulating=function(e){function t(i){if(n._accumulatingId&&i===n._accumulatingId&&!n._disposed){n._renderMain.isAccumulateFinished()&&r||(n._renderMain.render(!0),e?t(i):requestAnimationFrame(function(){t(i)}))}}var n=this;this._stopAccumulating();var r=n._renderMain.needsAccumulate();r&&(this._accumulatingId=L++,e?t(n._accumulatingId):this._accumulatingTimeout=setTimeout(function(){t(n._accumulatingId)},50))},r.prototype.dispose=function(){this._disposed=!0,this._renderer.disposeScene(this._renderMain.scene),this._renderMain.dispose(this._renderer),this._sceneHelper.dispose(this._renderer),this._renderer.dispose(),this._cameraControl.dispose(),this.root.removeEventListener("mousedown",this._mouseDownHandler),this.root.removeEventListener("click",this._clickHandler),this.root.innerHTML="",this.off("select"),this.off("doffocus"),this.off("unselect"),this.off("afterrender"),this.off("updatecamera"),this.stop()},f.a.extend(r.prototype,v.a),t.a=r},function(e,t,n){"use strict";function r(e){function t(t){var r=e.getExtension(t);r||(r=e.getExtension("MOZ_"+t)),r||(r=e.getExtension("WEBKIT_"+t)),n[t]=r}for(var n={},r={},o=0;o<i.length;o++){t(i[o])}for(var o=0;o<a.length;o++){var s=a[o];r[s]=e.getParameter(e[s])}this.getExtension=function(e){return void 0===n[e]&&t(e),n[e]},this.getParameter=function(e){return r[e]}}var i=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],a=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"];t.a=r},function(e,t,n){"use strict";t.a="vec3 calcAmbientSHLight(int idx, vec3 N) {\n    int offset = 9 * idx;\n    return ambientSHLightCoefficients[0]\n        + ambientSHLightCoefficients[1] * N.x\n        + ambientSHLightCoefficients[2] * N.y\n        + ambientSHLightCoefficients[3] * N.z\n        + ambientSHLightCoefficients[4] * N.x * N.z\n        + ambientSHLightCoefficients[5] * N.z * N.y\n        + ambientSHLightCoefficients[6] * N.y * N.x\n        + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n        + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}"},function(e,t,n){"use strict";var r=n(1),i=n(44),a=n(0),o=n.n(a),s=o.a.quat,u=o.a.vec3,l=o.a.mat4,c=r.a.extend(function(){return{relativeRootNode:null,name:"",joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{addClip:function(e,t){for(var n=0;n<this._clips.length;n++)if(this._clips[n].clip===e)return;for(var r=[],n=0;n<this.joints.length;n++)r[n]=-1;for(var n=0;n<e.tracks.length;n++)for(var i=0;i<this.joints.length;i++){var a=this.joints[i],o=e.tracks[n],s=a.name;if(t&&(s=t[s]),o.name===s){r[i]=n;break}}return this._clips.push({maps:r,clip:e}),this._clips.length-1},removeClip:function(e){for(var t=-1,n=0;n<this._clips.length;n++)if(this._clips[n].clip===e){t=n;break}t>0&&this._clips.splice(t,1)},removeClipsAll:function(){this._clips=[]},getClip:function(e){if(this._clips[e])return this._clips[e].clip},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var e=l.create();return function(){this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var t=0;t<this.joints.length;t++){var n=this.joints[t];l.copy(e,n.node.worldTransform._array),l.invert(e,e);for(var r=16*t,i=0;i<16;i++)this._invBindPoseMatricesArray[r+i]=e[i]}this.updateMatricesSubArrays()}}(),setJointMatricesArray:function(e){this._invBindPoseMatricesArray=e,this._skinMatricesArray=new Float32Array(e.length),this.updateMatricesSubArrays()},updateMatricesSubArrays:function(){for(var e=0;e<this.joints.length;e++)this._jointMatricesSubArrays[e]=this._invBindPoseMatricesArray.subarray(16*e,16*(e+1)),this._skinMatricesSubArrays[e]=this._skinMatricesArray.subarray(16*e,16*(e+1))},update:function(){return function(){for(var e=0;e<this.joints.length;e++){var t=this.joints[e];l.multiply(this._skinMatricesSubArrays[e],t.node.worldTransform._array,this._jointMatricesSubArrays[e])}}}(),getSubSkinMatrices:function(e,t){var n=this._subSkinMatricesArray[e];n||(n=this._subSkinMatricesArray[e]=new Float32Array(16*t.length));for(var r=0,i=0;i<t.length;i++)for(var a=t[i],o=0;o<16;o++)n[r++]=this._skinMatricesArray[16*a+o];return n},setPose:function(e){if(this._clips[e])for(var t=this._clips[e].clip,n=this._clips[e].maps,r=0;r<this.joints.length;r++){var i=this.joints[r];if(-1!==n[r]){var a=t.tracks[n[r]];a.channels.position&&u.copy(i.node.position._array,a.position),a.channels.rotation&&s.copy(i.node.rotation._array,a.rotation),a.channels.scale&&u.copy(i.node.scale._array,a.scale),i.node.position._dirty=!0,i.node.rotation._dirty=!0,i.node.scale._dirty=!0}}this.update()},clone:function(e,t){var n=new c;n.name=this.name;for(var r=0;r<this.joints.length;r++){var a=new i.a;a.name=this.joints[r].name,a.index=this.joints[r].index;var o=this.joints[r].node.getPath(e),s=this.joints[r].rootNode.getPath(e);null!=o&&null!=s?a.node=t.queryNode(o):console.warn("Something wrong in clone, may be the skeleton root nodes is not mounted on the cloned root node."),n.joints.push(a)}if(this._invBindPoseMatricesArray){var u=this._invBindPoseMatricesArray.length;n._invBindPoseMatricesArray=new Float32Array(u);for(var r=0;r<u;r++)n._invBindPoseMatricesArray[r]=this._invBindPoseMatricesArray[r];n._skinMatricesArray=new Float32Array(u),n.updateMatricesSubArrays()}return n.update(),n}});t.a=c},function(e,t,n){"use strict";var r=n(2),i=n(0),a=n.n(i),o=a.a.vec3,s=a.a.mat4,u=a.a.vec4,l=function(e,t){this.normal=e||new r.a(0,1,0),this.distance=t||0};l.prototype={constructor:l,distanceToPoint:function(e){return o.dot(e._array,this.normal._array)-this.distance},projectPoint:function(e,t){t||(t=new r.a);var n=this.distanceToPoint(e);return o.scaleAndAdd(t._array,e._array,this.normal._array,-n),t._dirty=!0,t},normalize:function(){var e=1/o.len(this.normal._array);o.scale(this.normal._array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,n=this.normal._array,r=o.dot(t[0]._array,n)>this.distance,i=1;i<8;i++)if(o.dot(t[i]._array,n)>this.distance!=r)return!0},intersectLine:function(){var e=o.create();return function(t,n,i){var a=this.distanceToPoint(t),s=this.distanceToPoint(n);if(a>0&&s>0||a<0&&s<0)return null;var u=this.normal._array,l=this.distance,c=t._array;o.sub(e,n._array,t._array),o.normalize(e,e);var f=o.dot(u,e);if(0===f)return null;i||(i=new r.a);var h=(o.dot(u,c)-l)/f;return o.scaleAndAdd(i._array,c,e,-h),i._dirty=!0,i}}(),applyTransform:function(){var e=s.create(),t=u.create(),n=u.create();return n[3]=1,function(r){r=r._array,o.scale(n,this.normal._array,this.distance),u.transformMat4(n,n,r),this.distance=o.dot(n,this.normal._array),s.invert(e,r),s.transpose(e,e),t[3]=0,o.copy(t,this.normal._array),u.transformMat4(t,t,e),o.copy(this.normal._array,t)}}(),copy:function(e){o.copy(this.normal._array,e.normal._array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new l;return e.copy(this),e}},t.a=l},function(e,t,n){"use strict";var r=n(31),i=n(0),a=n.n(i),o=a.a.quat,s=a.a.vec3,u=function(e){e=e||{},r.a.call(this,e),this.tracks=e.tracks||[]};u.prototype=Object.create(r.a.prototype),u.prototype.constructor=u,u.prototype.step=function(e,t,n){var i=r.a.prototype.step.call(this,e,t,!0);if("finish"!==i){var e=this.getElapsedTime();this._range&&(e=this._range[0]+e),this.setTime(e)}return n||"paused"===i||this.fire("frame"),i},u.prototype.setRange=function(e){this.calcLifeFromTracks(),this._range=e,e&&(e[1]=Math.min(e[1],this.life),e[0]=Math.min(e[0],this.life),this.life=e[1]-e[0])},u.prototype.setTime=function(e){for(var t=0;t<this.tracks.length;t++)this.tracks[t].setTime(e)},u.prototype.calcLifeFromTracks=function(){this.life=0;for(var e=0;e<this.tracks.length;e++)this.life=Math.max(this.life,this.tracks[e].getMaxTime())},u.prototype.addTrack=function(e){this.tracks.push(e)},u.prototype.removeTarck=function(e){var t=this.tracks.indexOf(e);t>=0&&this.tracks.splice(t,1)},u.prototype.getSubClip=function(e,t,n){for(var r=new u({name:this.name}),i=0;i<this.tracks.length;i++){var a=this.tracks[i].getSubTrack(e,t);r.addTrack(a)}return void 0!==n&&r.setLoop(n),r.life=t-e,r},u.prototype.blend1D=function(e,t,n){for(var r=0;r<this.tracks.length;r++){var i=e.tracks[r],a=t.tracks[r];this.tracks[r].blend1D(i,a,n)}},u.prototype.additiveBlend=function(e,t){for(var n=0;n<this.tracks.length;n++){var r=e.tracks[n],i=t.tracks[n];this.tracks[n].additiveBlend(r,i)}},u.prototype.subtractiveBlend=function(e,t){for(var n=0;n<this.tracks.length;n++){var r=e.tracks[n],i=t.tracks[n];this.tracks[n].subtractiveBlend(r,i)}},u.prototype.blend2D=function(e,t,n,r,i){for(var a=0;a<this.tracks.length;a++){var o=e.tracks[a],s=t.tracks[a],u=n.tracks[a];this.tracks[a].blend2D(o,s,u,r,i)}},u.prototype.copy=function(e){for(var t=0;t<this.tracks.length;t++){var n=e.tracks[t],r=this.tracks[t];s.copy(r.position,n.position),s.copy(r.scale,n.scale),o.copy(r.rotation,n.rotation)}},u.prototype.clone=function(){for(var e=r.a.prototype.clone.call(this),t=0;t<this.tracks.length;t++)e.addTrack(this.tracks[t].clone());return e.life=this.life,e},t.a=u},function(e,t,n){"use strict";var r={linear:function(e){return e},quadraticIn:function(e){return e*e},quadraticOut:function(e){return e*(2-e)},quadraticInOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},cubicIn:function(e){return e*e*e},cubicOut:function(e){return--e*e*e+1},cubicInOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},quarticIn:function(e){return e*e*e*e},quarticOut:function(e){return 1- --e*e*e*e},quarticInOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},quinticIn:function(e){return e*e*e*e*e},quinticOut:function(e){return--e*e*e*e*e+1},quinticInOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},sinusoidalIn:function(e){return 1-Math.cos(e*Math.PI/2)},sinusoidalOut:function(e){return Math.sin(e*Math.PI/2)},sinusoidalInOut:function(e){return.5*(1-Math.cos(Math.PI*e))},exponentialIn:function(e){return 0===e?0:Math.pow(1024,e-1)},exponentialOut:function(e){return 1===e?1:1-Math.pow(2,-10*e)},exponentialInOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},circularIn:function(e){return 1-Math.sqrt(1-e*e)},circularOut:function(e){return Math.sqrt(1- --e*e)},circularInOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},elasticIn:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4))},elasticOut:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/.4)+1)},elasticInOut:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*.5+1)},backIn:function(e){var t=1.70158;return e*e*((t+1)*e-t)},backOut:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},backInOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},bounceIn:function(e){return 1-r.bounceOut(1-e)},bounceOut:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bounceInOut:function(e){return e<.5?.5*r.bounceIn(2*e):.5*r.bounceOut(2*e-1)+.5}};t.a=r},function(e,t,n){"use strict";function r(e,t,n,r,i,a){var o=t[i],s=t[i+1],u=t[i+2];return e[0]=o+r*(n[a]-o),e[1]=s+r*(n[a+1]-s),e[2]=u+r*(n[a+2]-u),e}function i(e,t,n,r,i,a){var o,s,u,l,c,f=t[0+i],h=t[1+i],d=t[2+i],p=t[3+i],_=n[0+a],m=n[1+a],g=n[2+a],v=n[3+a];return s=f*_+h*m+d*g+p*v,s<0&&(s=-s,_=-_,m=-m,g=-g,v=-v),1-s>1e-6?(o=Math.acos(s),u=Math.sin(o),l=Math.sin((1-r)*o)/u,c=Math.sin(r*o)/u):(l=1-r,c=r),e[0]=l*f+c*_,e[1]=l*h+c*m,e[2]=l*d+c*g,e[3]=l*p+c*v,e}var a=n(77),o=n(0),s=n.n(o),u=s.a.quat,l=s.a.vec3,c=function(e){e=e||{},this.name=e.name||"",this.target=e.target||null,this.position=l.create(),this.rotation=u.create(),this.scale=l.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};c.prototype.setTime=function(e){if(this.channels.time){var t=this.channels,n=t.time.length,a=-1;if(1===n)return t.rotation&&u.copy(this.rotation,t.rotation),t.position&&l.copy(this.position,t.position),void(t.scale&&l.copy(this.scale,t.scale));if(e<=t.time[0])e=t.time[0],a=0;else if(e>=t.time[n-1])e=t.time[n-1],a=n-2;else if(e<this._cacheTime){for(var o=Math.min(n-1,this._cacheKey+1),s=o;s>=0;s--)if(t.time[s-1]<=e&&t.time[s]>e){a=s-1;break}}else for(var s=this._cacheKey;s<n-1;s++)if(t.time[s]<=e&&t.time[s+1]>e){a=s;break}if(a>-1){this._cacheKey=a,this._cacheTime=e;var c=a,f=a+1,h=t.time[c],d=t.time[f],p=d-h,_=0===p?0:(e-h)/p;t.rotation&&i(this.rotation,t.rotation,t.rotation,_,4*c,4*f),t.position&&r(this.position,t.position,t.position,_,3*c,3*f),t.scale&&r(this.scale,t.scale,t.scale,_,3*c,3*f)}a==n-2&&(this._cacheKey=0,this._cacheTime=0),this.updateTarget()}},c.prototype.updateTarget=function(){var e=this.channels;this.target&&(e.position&&this.target.position.setArray(this.position),e.rotation&&this.target.rotation.setArray(this.rotation),e.scale&&this.target.scale.setArray(this.scale))},c.prototype.getMaxTime=function(){return this.channels.time[this.channels.time.length-1]},c.prototype.getSubTrack=function(e,t){var n=new c({name:this.name}),r=this.channels.time[0];e=Math.min(Math.max(e,r),this.life),t=Math.min(Math.max(t,r),this.life);var i=this._findRange(e),a=this._findRange(t),o=a[0]-i[0]+1;0===i[1]&&0===a[1]&&(o-=1),this.channels.rotation&&(n.channels.rotation=new Float32Array(4*o)),this.channels.position&&(n.channels.position=new Float32Array(3*o)),this.channels.scale&&(n.channels.scale=new Float32Array(3*o)),this.channels.time&&(n.channels.time=new Float32Array(o)),this.setTime(e);for(var s=0;s<3;s++)n.channels.rotation[s]=this.rotation[s],n.channels.position[s]=this.position[s],n.channels.scale[s]=this.scale[s];n.channels.time[0]=0,n.channels.rotation[3]=this.rotation[3];for(var s=1;s<o-1;s++){for(var u,l=0;l<3;l++)u=i[0]+s,n.channels.rotation[4*s+l]=this.channels.rotation[4*u+l],n.channels.position[3*s+l]=this.channels.position[3*u+l],n.channels.scale[3*s+l]=this.channels.scale[3*u+l];n.channels.time[s]=this.channels.time[u]-e,n.channels.rotation[4*s+3]=this.channels.rotation[4*u+3]}this.setTime(t);for(var s=0;s<3;s++)n.channels.rotation[4*(o-1)+s]=this.rotation[s],n.channels.position[3*(o-1)+s]=this.position[s],n.channels.scale[3*(o-1)+s]=this.scale[s];return n.channels.time[o-1]=t-e,n.channels.rotation[4*(o-1)+3]=this.rotation[3],n.life=t-e,n},c.prototype._findRange=function(e){for(var t=this.channels,n=t.time.length,r=-1,i=0;i<n-1;i++)t.time[i]<=e&&t.time[i+1]>e&&(r=i);var a=0;if(r>=0)var o=t.time[r],s=t.time[r+1],a=(e-o)/(s-o);return[r,a]},c.prototype.blend1D=a.a.prototype.blend1D,c.prototype.blend2D=a.a.prototype.blend2D,c.prototype.additiveBlend=a.a.prototype.additiveBlend,c.prototype.subtractiveBlend=a.a.prototype.subtractiveBlend,c.prototype.clone=function(){var e=c.prototype.clone.call(this);return e.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},l.copy(e.position,this.position),u.copy(e.rotation,this.rotation),l.copy(e.scale,this.scale),e.target=this.target,e.updateTarget(),e},t.a=c},function(e,t,n){"use strict";function r(e,t){return e.time-t.time}var i=n(31),a=n(0),o=n.n(a),s=o.a.quat,u=o.a.vec3,l=function(e){this.name=e.name||"",this.keyFrames=[],e.keyFrames&&this.addKeyFrames(e.keyFrames),this.position=u.create(),this.rotation=s.create(),this.scale=u.fromValues(1,1,1),this._cacheKey=0,this._cacheTime=0};l.prototype=Object.create(i.a.prototype),l.prototype.constructor=l,l.prototype.step=function(e,t,n){var r=i.a.prototype.step.call(this,e,t,!0);return"finish"!==r&&this.setTime(this.getElapsedTime()),n||"paused"===r||this.fire("frame"),r},l.prototype.setTime=function(e){this._interpolateField(e,"position"),this._interpolateField(e,"rotation"),this._interpolateField(e,"scale")},l.prototype.getMaxTime=function(){var e=this.keyFrames[this.keyFrames.length-1];return e?e.time:0},l.prototype.addKeyFrame=function(e){for(var t=0;t<this.keyFrames.length-1;t++){var n=this.keyFrames[t],r=this.keyFrames[t+1];if(n.time<=e.time&&r.time>=e.time)return this.keyFrames.splice(t,0,e),t}this.life=e.time,this.keyFrames.push(e)},l.prototype.addKeyFrames=function(e){for(var t=0;t<e.length;t++)this.keyFrames.push(e[t]);this.keyFrames.sort(r),this.life=this.keyFrames[this.keyFrames.length-1].time},l.prototype._interpolateField=function(e,t){var n,r,i=this.keyFrames,a=i.length;if(i.length&&!(e<i[0].time||e>i[i.length-1].time)){if(e<this._cacheTime){for(var o=this._cacheKey>=a-1?a-1:this._cacheKey+1,l=o;l>=0;l--)if(i[l].time<=e&&i[l][t])n=i[l],this._cacheKey=l,this._cacheTime=e;else if(i[l][t]){r=i[l];break}}else for(var l=this._cacheKey;l<a;l++)if(i[l].time<=e&&i[l][t])n=i[l],this._cacheKey=l,this._cacheTime=e;else if(i[l][t]){r=i[l];break}if(n&&r){var c=(e-n.time)/(r.time-n.time);c=Math.max(Math.min(c,1),0),"rotation"===t?s.slerp(this[t],n[t],r[t],c):u.lerp(this[t],n[t],r[t],c)}else this._cacheKey=0,this._cacheTime=0}},l.prototype.blend1D=function(e,t,n){u.lerp(this.position,e.position,t.position,n),u.lerp(this.scale,e.scale,t.scale,n),s.slerp(this.rotation,e.rotation,t.rotation,n)},l.prototype.blend2D=function(){var e=s.create(),t=s.create();return function(n,r,i,a,o){var u=1-a-o;this.position[0]=n.position[0]*u+r.position[0]*a+i.position[0]*o,this.position[1]=n.position[1]*u+r.position[1]*a+i.position[1]*o,this.position[2]=n.position[2]*u+r.position[2]*a+i.position[2]*o,this.scale[0]=n.scale[0]*u+r.scale[0]*a+i.scale[0]*o,this.scale[1]=n.scale[1]*u+r.scale[1]*a+i.scale[1]*o,this.scale[2]=n.scale[2]*u+r.scale[2]*a+i.scale[2]*o;var l=a+o;0===l?s.copy(this.rotation,n.rotation):(s.slerp(e,n.rotation,r.rotation,l),s.slerp(t,n.rotation,c3.rotation,l),s.slerp(this.rotation,e,t,o/l))}}(),l.prototype.additiveBlend=function(e,t){u.add(this.position,e.position,t.position),u.add(this.scale,e.scale,t.scale),s.multiply(this.rotation,t.rotation,e.rotation)},l.prototype.subtractiveBlend=function(e,t){u.sub(this.position,e.position,t.position),u.sub(this.scale,e.scale,t.scale),s.invert(this.rotation,t.rotation),s.multiply(this.rotation,this.rotation,e.rotation)},l.prototype.getSubClip=function(e,t){console.warn("TODO")},l.prototype.clone=function(){var e=l.prototype.clone.call(this);return e.keyFrames=this.keyFrames,u.copy(e.position,this.position),s.copy(e.rotation,this.rotation),u.copy(e.scale,this.scale),e},t.a=l},function(e,t,n){"use strict";function r(e){return{byte:h.a.Int8Array,ubyte:h.a.Uint8Array,short:h.a.Int16Array,ushort:h.a.Uint16Array}[e]||h.a.Float32Array}function i(e,t,n,r){this.name=e,this.type=t,this.size=n,r&&(this.semantic=r)}function a(e,t,n,r){switch(i.call(this,e,t,n,r),this.value=null,n){case 1:this.get=function(e){return this.value[e]},this.set=function(e,t){this.value[e]=t},this.copy=function(e,t){this.value[e]=this.value[e]};break;case 2:this.get=function(e,t){var n=this.value;return t[0]=n[2*e],t[1]=n[2*e+1],t},this.set=function(e,t){var n=this.value;n[2*e]=t[0],n[2*e+1]=t[1]},this.copy=function(e,t){var n=this.value;t*=2,e*=2,n[e]=n[t],n[e+1]=n[t+1]};break;case 3:this.get=function(e,t){var n=3*e,r=this.value;return t[0]=r[n],t[1]=r[n+1],t[2]=r[n+2],t},this.set=function(e,t){var n=3*e,r=this.value;r[n]=t[0],r[n+1]=t[1],r[n+2]=t[2]},this.copy=function(e,t){var n=this.value;t*=3,e*=3,n[e]=n[t],n[e+1]=n[t+1],n[e+2]=n[t+2]};break;case 4:this.get=function(e,t){var n=this.value,r=4*e;return t[0]=n[r],t[1]=n[r+1],t[2]=n[r+2],t[3]=n[r+3],t},this.set=function(e,t){var n=this.value,r=4*e;n[r]=t[0],n[r+1]=t[1],n[r+2]=t[2],n[r+3]=t[3]},this.copy=function(e,t){var n=this.value;t*=4,e*=4,n[e]=n[t],n[e+1]=n[t+1],n[e+2]=n[t+2],n[e+3]=n[t+3]}}}function o(e,t,n,r,i){this.name=e,this.type=t,this.buffer=n,this.size=r,this.semantic=i,this.symbol="",this.needsRemove=!1}function s(e){this.buffer=e,this.count=0}function u(){console.warn("Geometry doesn't implement this method, use StaticGeometry instead")}var l=n(1),c=n(6),f=n(23),h=n(12);i.prototype.clone=function(e){var t=new this.constructor(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t},a.prototype.constructor=new i,a.prototype.init=function(e){if(!this.value||this.value.length!=e*this.size){var t=r(this.type);this.value=new t(e*this.size)}},a.prototype.fromArray=function(e){var t,n=r(this.type);if(e[0]&&e[0].length){var i=0,a=this.size;t=new n(e.length*a);for(var o=0;o<e.length;o++)for(var s=0;s<a;s++)t[i++]=e[o][s]}else t=new n(e);this.value=t};var d=l.a.extend({boundingBox:null,attributes:{},indices:null,dynamic:!1},function(){this._cache=new f.a,this._attributeList=Object.keys(this.attributes)},{pickByRay:null,pick:null,mainAttribute:"position",dirty:u,createAttribute:u,removeAttribute:u,getTriangleIndices:u,setTriangleIndices:u,isUseIndices:u,getEnabledAttributes:u,getBufferChunks:u,generateVertexNormals:u,generateFaceNormals:u,isUniqueVertex:u,generateUniqueVertex:u,generateTangents:u,generateBarycentric:u,applyTransform:u,dispose:u});d.STATIC_DRAW=c.a.STATIC_DRAW,d.DYNAMIC_DRAW=c.a.DYNAMIC_DRAW,d.STREAM_DRAW=c.a.STREAM_DRAW,d.AttributeBuffer=o,d.IndicesBuffer=s,d.Attribute=i,d.StaticAttribute=a,t.a=d},function(e,t,n){"use strict";var r=n(37),i=n(80),a=n(48),o=n(81),s=n(41),u=n(82),l=n(49),c=n(38),f=n(20),h=n(3),d=n(83),p=n(50),_=n(84),m=n(85),g=n(86),v=n(51),y=n(52),x=n(53),T=n(54),E=n(55),b=n(87),S=n(88),A=n(56),w=n(57),N=n(89);h.a.import(r.a),h.a.import(i.a),h.a.import(a.a),h.a.import(o.a),h.a.import(s.a),h.a.import(u.a),h.a.import(l.a),h.a.import(c.a),f.a.template("qtek.basic",h.a.source("qtek.basic.vertex"),h.a.source("qtek.basic.fragment")),f.a.template("qtek.lambert",h.a.source("qtek.lambert.vertex"),h.a.source("qtek.lambert.fragment")),f.a.template("qtek.wireframe",h.a.source("qtek.wireframe.vertex"),h.a.source("qtek.wireframe.fragment")),f.a.template("qtek.skybox",h.a.source("qtek.skybox.vertex"),h.a.source("qtek.skybox.fragment")),f.a.template("qtek.prez",h.a.source("qtek.prez.vertex"),h.a.source("qtek.prez.fragment")),f.a.template("qtek.standard",h.a.source("qtek.standard.vertex"),h.a.source("qtek.standard.fragment")),h.a.import(d.a),h.a.import(p.a),h.a.import(_.a),h.a.import(m.a),h.a.import(g.a),h.a.import(v.a),h.a.import(y.a),h.a.import(x.a),h.a.import(T.a),h.a.import(E.a),h.a.import(b.a),h.a.import(S.a),h.a.import(A.a),h.a.import(w.a),h.a.import(N.a)},function(e,t,n){"use strict";t.a="\n@export qtek.util.rand\nhighp float rand(vec2 uv) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n    return fract(sin(sn) * c);\n}\n@end\n@export qtek.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    attenuation = dist*dist/(range*range+1.0);\n    float att_s = attenuationFactor;\n    attenuation = 1.0/(attenuation*att_s+1.0);\n    att_s = 1.0/(att_s+1.0);\n    attenuation = attenuation - att_s;\n    attenuation /= 1.0 - att_s;\n    return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export qtek.util.edge_factor\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n@end\n@export qtek.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n    const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = fract(depth * bitShifts);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n@end\n@export qtek.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n    const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    return dot(color, bitShifts);\n}\n@end\n@export qtek.util.float\n@import qtek.util.encode_float\n@import qtek.util.decode_float\n@end\n@export qtek.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export qtek.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    if (dot(color, color) == 0.0) {\n        return vec4(0.0);\n    }\n    vec4 rgbm;\n    color /= range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n@export qtek.util.rgbm\n@import qtek.util.rgbm_decode\n@import qtek.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n    return vec4(RGBMDecode(color, 51.5), 1.0);\n#else\n    return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n    return RGBMEncode(color.xyz, 51.5);\n#else\n    return color;\n#endif\n}\n@end\n@export qtek.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n    return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n    return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export qtek.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture;\nuniform float skinMatricesTextureSize: unconfigurable;\nmat4 getSkinMatrix(float idx) {\n    float j = idx * 4.0;\n    float x = mod(j, skinMatricesTextureSize);\n    float y = floor(j / skinMatricesTextureSize) + 0.5;\n    vec2 scale = vec2(skinMatricesTextureSize);\n    return mat4(\n        texture2D(skinMatricesTexture, vec2(x + 0.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 1.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 2.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 3.5, y) / scale)\n    );\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n    return skinMatrix[int(idx)];\n}\n#endif\n#endif\n@end\n@export qtek.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export qtek.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n    vec3 first = (boxMax - pos) / dir;\n    vec3 second = (boxMin - pos) / dir;\n    vec3 further = max(first, second);\n    float dist = min(further.x, min(further.y, further.z));\n    vec3 fixedPos = pos + dir * dist;\n    vec3 boxCenter = (boxMax + boxMin) * 0.5;\n    return normalize(fixedPos - boxCenter);\n}\n@end\n@export qtek.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n    float eye = step(0.5, coord.x) * 0.5;\n    vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n    vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n    return texture2D(texture, coordClamped);\n}\n@end"},function(e,t,n){"use strict";t.a="\n@export qtek.lambert.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n    v_Barycentric = barycentric;\n}\n@end\n@export qtek.lambert.fragment\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.plugin.compute_shadow_map\nvoid main()\n{\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(v_Normal * 0.5 + 0.5, 1.0);\n    return;\n#endif\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    gl_FragColor.a *= tex.a;\n#endif\n#endif\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {\n        diffuseColor += ambientLightColor[_idx_];\n    }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if( shadowEnabled )\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lightColor = pointLightColor[i];\n        float range = pointLightRange[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float ndl = dot( v_Normal, lightDirection );\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n    }\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n    {\n        vec3 lightDirection = -directionalLightDirection[i];\n        vec3 lightColor = directionalLightColor[i];\n        float ndl = dot(v_Normal, normalize(lightDirection));\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n    }\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = -spotLightPosition[i];\n        vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n        vec3 lightColor = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float c = dot(spotLightDirection, lightDirection);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        float ndl = dot(v_Normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n    }\n#endif\n    gl_FragColor.rgb *= diffuseColor;\n    gl_FragColor.rgb += emission;\n    if(lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.wireframe.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n    v_Barycentric = barycentric;\n}\n@end\n@export qtek.wireframe.fragment\nuniform vec3 color : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\nvoid main()\n{\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n    color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n    color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n    float luminance = dot( color, w );\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = tex.rgb + vec3(brightness);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb * pow(2.0, exposure);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = pow(tex.rgb, vec3(gamma));\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb;\n    float luminance = dot(color, w);\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n    gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export qtek.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import qtek.util.rgbm\nvoid main()\n{\n    float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n    float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export qtek.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end"},function(e,t,n){"use strict";t.a="\n@export qtek.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    float blueColor = tex.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = texel.rgb;\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n    gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.dof.coc\nuniform sampler2D depth;\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\nvarying vec2 v_Texcoord;\n@import qtek.util.encode_float\nvoid main()\n{\n    float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n    float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n    float aperture = focalLength / fstop;\n    float coc;\n    float uppper = focalDist + focalRange;\n    float lower = focalDist - focalRange;\n    if (dist <= uppper && dist >= lower) {\n        coc = 0.5;\n    }\n    else {\n        float focalAdjusted = dist > uppper ? uppper : lower;\n        coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n        coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n        if (dist < lower) {\n            coc = -coc;\n        }\n        coc = coc * 0.5 + 0.5;\n    }\n    gl_FragColor = encodeFloat(coc);\n}\n@end\n@export qtek.compositor.dof.premultiply\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nvoid main() {\n    float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n    gl_FragColor = encodeHDR(\n        vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n    );\n}\n@end\n@export qtek.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.coc_upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.float\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord       )) * 4.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    gl_FragColor = encodeFloat(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n    gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n@end\n@export qtek.compositor.dof.upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 16.0;\n    float w  = tap(v_Texcoord - d.xy, color, baseWeight);\n    w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord - d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord       , color, baseWeight * 4.0);\n    w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.xy, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 4.0;\n    float w  = tap(v_Texcoord + d.xy, color, baseWeight);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.xw, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#endif\n}\n@end\n@export qtek.compositor.dof.downsample\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float weight = tap(v_Texcoord + d.xy, color);\n    weight += tap(v_Texcoord + d.zy, color);\n    weight += tap(v_Texcoord + d.xw, color);\n    weight += tap(v_Texcoord + d.zw, color);\n    color /= weight;\n    gl_FragColor = encodeHDR(color);\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_frag\n@import qtek.util.float\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n    float cocSum = 0.0;\n#else\n    vec4 color = vec4(0.0);\n#endif\n    float weightSum = 0.0;\n    float kernelWeight = 1.0 / float(KERNEL_SIZE);\n    for (int i = 0; i < KERNEL_SIZE; i++) {\n        vec2 coord = v_Texcoord + offset * float(i);\n        float w = kernelWeight;\n#ifdef BLUR_COC\n        float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n        cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n        float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n        vec4 texel = texture2D(targetTexture, coord);\n    #if !defined(BLUR_NEARFIELD)\n        w *= abs(fCoc);\n    #endif\n        color += decodeHDR(texel) * w;\n#endif\n        weightSum += w;\n    }\n#ifdef BLUR_COC\n    return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n    return color / weightSum;\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_1\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_2\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_3\n#define KERNEL_SIZE 5\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    vec2 vDownRight = vec2(offset.x, -offset.y);\n    vec4 texel1 = doBlur(texture1, -offset);\n    vec4 texel2 = doBlur(texture1, vDownRight);\n    vec4 texel3 = doBlur(texture2, vDownRight);\n#ifdef BLUR_COC\n    float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n    float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n    float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n    gl_FragColor = encodeFloat(\n        ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n    );\n#else\n    vec4 color = (texel1 + texel2 + texel3) / 3.0;\n    gl_FragColor = encodeHDR(color);\n#endif\n}\n@end\n@export qtek.compositor.dof.composite\n#define DEBUG 0\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.float\nvoid main()\n{\n    vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n    vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n    fCoc = abs(fCoc * 2.0 - 1.0);\n    float weight = smoothstep(0.0, 1.0, fCoc);\n#ifdef NEARFIELD_ENABLED\n    vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n    float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n    fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n    gl_FragColor = encodeHDR(\n        mix(\n            nearfieldColor, mix(originalColor, blurredColor, weight),\n            pow(1.0 - fNearCoc, 4.0)\n        )\n    );\n#else\n    gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n#if DEBUG == 1\n    gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n    gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n    gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n    gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n        1.0\n    );\n}\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0);    vec2 textureOffset = 1.0 / textureSize;\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n    vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n    result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    gl_FragColor = result;\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.compositor.fxaa3\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nuniform float subpixel: 0.75;\nuniform float edgeThreshold: 0.125;\nuniform float edgeThresholdMin: 0.0625;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat FxaaLuma(vec4 rgba) { return rgba.y; }\nvec4 FxaaPixelShader(\n    vec2 pos\n    ,sampler2D tex\n    ,vec2 fxaaQualityRcpFrame\n    ,float fxaaQualitySubpix\n    ,float fxaaQualityEdgeThreshold\n    ,float fxaaQualityEdgeThresholdMin\n) {\n    vec2 posM;\n    posM.x = pos.x;\n    posM.y = pos.y;\n    vec4 rgbyM = decodeHDR(texture2D(texture, posM, 0.0));\n    float lumaS = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaN = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float maxSM = max(lumaS, rgbyM.y);\n    float minSM = min(lumaS, rgbyM.y);\n    float maxESM = max(lumaE, maxSM);\n    float minESM = min(lumaE, minSM);\n    float maxWN = max(lumaN, lumaW);\n    float minWN = min(lumaN, lumaW);\n    float rangeMax = max(maxWN, maxESM);\n    float rangeMin = min(minWN, minESM);\n    float rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\n    float range = rangeMax - rangeMin;\n    float rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\n    bool earlyExit = range < rangeMaxClamped;\n    if(earlyExit) return rgbyM;\n    float lumaNW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNS = lumaN + lumaS;\n    float lumaWE = lumaW + lumaE;\n    float subpixRcpRange = 1.0/range;\n    float subpixNSWE = lumaNS + lumaWE;\n    float edgeHorz1 = (-2.0 * rgbyM.y) + lumaNS;\n    float edgeVert1 = (-2.0 * rgbyM.y) + lumaWE;\n    float lumaNESE = lumaNE + lumaSE;\n    float lumaNWNE = lumaNW + lumaNE;\n    float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n    float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n    float lumaNWSW = lumaNW + lumaSW;\n    float lumaSWSE = lumaSW + lumaSE;\n    float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n    float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n    float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n    float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n    float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n    float edgeVert = abs(edgeVert3) + edgeVert4;\n    float subpixNWSWNESE = lumaNWSW + lumaNESE;\n    float lengthSign = fxaaQualityRcpFrame.x;\n    bool horzSpan = edgeHorz >= edgeVert;\n    float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n    if(!horzSpan) lumaN = lumaW;\n    if(!horzSpan) lumaS = lumaE;\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n    float subpixB = (subpixA * (1.0/12.0)) - rgbyM.y;\n    float gradientN = lumaN - rgbyM.y;\n    float gradientS = lumaS - rgbyM.y;\n    float lumaNN = lumaN + rgbyM.y;\n    float lumaSS = lumaS + rgbyM.y;\n    bool pairN = abs(gradientN) >= abs(gradientS);\n    float gradient = max(abs(gradientN), abs(gradientS));\n    if(pairN) lengthSign = -lengthSign;\n    float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n    vec2 posB;\n    posB.x = posM.x;\n    posB.y = posM.y;\n    vec2 offNP;\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n    if(!horzSpan) posB.x += lengthSign * 0.5;\n    if( horzSpan) posB.y += lengthSign * 0.5;\n    vec2 posN;\n    posN.x = posB.x - offNP.x * 1.0;\n    posN.y = posB.y - offNP.y * 1.0;\n    vec2 posP;\n    posP.x = posB.x + offNP.x * 1.0;\n    posP.y = posB.y + offNP.y * 1.0;\n    float subpixD = ((-2.0)*subpixC) + 3.0;\n    float lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN, 0.0)));\n    float subpixE = subpixC * subpixC;\n    float lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP, 0.0)));\n    if(!pairN) lumaNN = lumaSS;\n    float gradientScaled = gradient * 1.0/4.0;\n    float lumaMM = rgbyM.y - lumaNN * 0.5;\n    float subpixF = subpixD * subpixE;\n    bool lumaMLTZero = lumaMM < 0.0;\n    lumaEndN -= lumaNN * 0.5;\n    lumaEndP -= lumaNN * 0.5;\n    bool doneN = abs(lumaEndN) >= gradientScaled;\n    bool doneP = abs(lumaEndP) >= gradientScaled;\n    if(!doneN) posN.x -= offNP.x * 1.5;\n    if(!doneN) posN.y -= offNP.y * 1.5;\n    bool doneNP = (!doneN) || (!doneP);\n    if(!doneP) posP.x += offNP.x * 1.5;\n    if(!doneP) posP.y += offNP.y * 1.5;\n    if(doneNP) {\n        if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n        if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n        doneN = abs(lumaEndN) >= gradientScaled;\n        doneP = abs(lumaEndP) >= gradientScaled;\n        if(!doneN) posN.x -= offNP.x * 2.0;\n        if(!doneN) posN.y -= offNP.y * 2.0;\n        doneNP = (!doneN) || (!doneP);\n        if(!doneP) posP.x += offNP.x * 2.0;\n        if(!doneP) posP.y += offNP.y * 2.0;\n        if(doneNP) {\n            if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n            if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n            doneN = abs(lumaEndN) >= gradientScaled;\n            doneP = abs(lumaEndP) >= gradientScaled;\n            if(!doneN) posN.x -= offNP.x * 4.0;\n            if(!doneN) posN.y -= offNP.y * 4.0;\n            doneNP = (!doneN) || (!doneP);\n            if(!doneP) posP.x += offNP.x * 4.0;\n            if(!doneP) posP.y += offNP.y * 4.0;\n            if(doneNP) {\n                if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n                if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n                doneN = abs(lumaEndN) >= gradientScaled;\n                doneP = abs(lumaEndP) >= gradientScaled;\n                if(!doneN) posN.x -= offNP.x * 12.0;\n                if(!doneN) posN.y -= offNP.y * 12.0;\n                doneNP = (!doneN) || (!doneP);\n                if(!doneP) posP.x += offNP.x * 12.0;\n                if(!doneP) posP.y += offNP.y * 12.0;\n            }\n        }\n    }\n    float dstN = posM.x - posN.x;\n    float dstP = posP.x - posM.x;\n    if(!horzSpan) dstN = posM.y - posN.y;\n    if(!horzSpan) dstP = posP.y - posM.y;\n    bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n    float spanLength = (dstP + dstN);\n    bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n    float spanLengthRcp = 1.0/spanLength;\n    bool directionN = dstN < dstP;\n    float dst = min(dstN, dstP);\n    bool goodSpan = directionN ? goodSpanN : goodSpanP;\n    float subpixG = subpixF * subpixF;\n    float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n    float subpixH = subpixG * fxaaQualitySubpix;\n    float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n    float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n    return vec4(decodeHDR(texture2D(texture, posM, 0.0)).xyz, rgbyM.y);\n}\nvoid main()\n{\n    vec4 color = FxaaPixelShader(\n        v_Texcoord,\n        texture,\n        vec2(1.0) / viewport.zw,\n        subpixel,\n        edgeThreshold,\n        edgeThresholdMin\n    );\n    gl_FragColor = vec4(color.rgb, 1.0);\n}\n@end"},function(e,t,n){"use strict";var r=n(1),i=n(91),a=window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(e){setTimeout(e,16)},o=r.a.extend(function(){return{stage:null,_clips:[],_running:!1,_time:0,_paused:!1,_pausedTime:0}},{addAnimator:function(e){e.animation=this;for(var t=e.getClips(),n=0;n<t.length;n++)this.addClip(t[n])},addClip:function(e){this._clips.indexOf(e)<0&&this._clips.push(e)},removeClip:function(e){var t=this._clips.indexOf(e);t>=0&&this._clips.splice(t,1)},removeAnimator:function(e){for(var t=e.getClips(),n=0;n<t.length;n++)this.removeClip(t[n]);e.animation=null},_update:function(){for(var e=Date.now()-this._pausedTime,t=e-this._time,n=this._clips,r=n.length,i=[],a=[],o=0;o<r;o++){var s=n[o],u=s.step(e,t,!1);u&&(i.push(u),a.push(s))}for(var o=0;o<r;)n[o]._needsRemove?(n[o]=n[r-1],n.pop(),r--):o++;r=i.length;for(var o=0;o<r;o++)a[o].fire(i[o]);this._time=e,this.trigger("frame",t),this.stage&&this.stage.render&&this.stage.render()},start:function(){function e(){t._running&&(a(e),t._paused||t._update())}var t=this;this._running=!0,this._time=Date.now(),this._pausedTime=0,a(e)},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=Date.now(),this._paused=!0)},resume:function(){this._paused&&(this._pausedTime+=Date.now()-this._pauseStart,this._paused=!1)},removeClipsAll:function(){this._clips=[]},animate:function(e,t){t=t||{};var n=new i.a(e,t.loop,t.getter,t.setter,t.interpolater);return n.animation=this,n}});t.a=o},function(e,t,n){"use strict";function r(e,t){return e[t]}function i(e,t,n){e[t]=n}function a(e,t,n){return(t-e)*n+e}function o(e,t,n,r,i){var o=e.length;if(1==i)for(var s=0;s<o;s++)r[s]=a(e[s],t[s],n);else for(var u=e[0].length,s=0;s<o;s++)for(var l=0;l<u;l++)r[s][l]=a(e[s][l],t[s][l],n)}function s(e){return void 0!==e&&("string"!=typeof e&&"number"==typeof e.length)}function u(e){if(s(e)){var t=e.length;if(s(e[0])){for(var n=[],r=0;r<t;r++)n.push(m.call(e[r]));return n}return m.call(e)}return e}function l(e,t,n,r,i,a,o,s,u){var l=e.length;if(1==u)for(var f=0;f<l;f++)s[f]=c(e[f],t[f],n[f],r[f],i,a,o);else for(var h=e[0].length,f=0;f<l;f++)for(var d=0;d<h;d++)s[f][d]=c(e[f][d],t[f][d],n[f][d],r[f][d],i,a,o)}function c(e,t,n,r,i,a,o){var s=.5*(n-e),u=.5*(r-t);return(2*(t-n)+s+u)*o+(-3*(t-n)-2*s-u)*a+s*i+t}function f(e,t,n){var r=e.length,i=t.length;if(r!==i){if(r>i)e.length=i;else for(var a=r;a<i;a++)e.push(1===n?t[a]:m.call(t[a]))}for(var o=e[0]&&e[0].length,a=0;a<e.length;a++)if(1===n)isNaN(e[a])&&(e[a]=t[a]);else for(var s=0;s<o;s++)isNaN(e[a][s])&&(e[a][s]=t[a][s])}function h(e,t,n){if(e===t)return!0;var r=e.length;if(r!==t.length)return!1;if(1===n){for(var i=0;i<r;i++)if(e[i]!==t[i])return!1}else for(var a=e[0].length,i=0;i<r;i++)for(var o=0;o<a;o++)if(e[i][o]!==t[i][o])return!1;return!0}function d(e,t,n,r,i,u){var d=e._getter,p=e._setter,m="spline"===t,g=r.length;if(g){var v=r[0].value,y=s(v),x=y&&s(v[0])?2:1;r.sort(function(e,t){return e.time-t.time});for(var T=r[g-1].time,E=[],b=[],S=r[0].value,A=!0,w=0;w<g;w++){E.push(r[w].time/T);var N=r[w].value;y&&h(N,S,x)||!y&&N===S||(A=!1),S=N,b.push(N)}if(!A){for(var C=b[g-1],w=0;w<g-1;w++)y?f(b[w],C,x):isNaN(b[w])&&!isNaN(C)&&(b[w]=C);y&&f(d(e._target,i),C,x);var R,w,M,L,P,D,I,O=0,F=0,k=function(e,t){if(t<F){for(R=Math.min(O+1,g-1),w=R;w>=0&&!(E[w]<=t);w--);w=Math.min(w,g-2)}else{for(w=O;w<g&&!(E[w]>t);w++);w=Math.min(w-1,g-2)}O=w,F=t;var n=E[w+1]-E[w];0!==n&&(M=(t-E[w])/n,m?(P=b[w],L=b[0===w?w:w-1],D=b[w>g-2?g-1:w+1],I=b[w>g-3?g-1:w+2],u?p(e,i,u(d(e,i),L,P,D,I,M)):y?l(L,P,D,I,M,M*M,M*M*M,d(e,i),x):p(e,i,c(L,P,D,I,M,M*M,M*M*M))):u?p(e,i,u(d(e,i),b[w],b[w+1],M)):y?o(b[w],b[w+1],M,d(e,i),x):p(e,i,a(b[w],b[w+1],M)))},B=new _.a({target:e._target,life:T,loop:e._loop,delay:e._delay,onframe:k,onfinish:n});return t&&"spline"!==t&&B.setEasing(t),B}}}function p(e,t,n,a,o){this._tracks={},this._target=e,this._loop=t||!1,this._getter=n||r,this._setter=a||i,this._interpolater=o||null,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]}var _=n(31),m=Array.prototype.slice;p.prototype={constructor:p,when:function(e,t){for(var n in t)this._tracks[n]||(this._tracks[n]=[],0!==e&&this._tracks[n].push({time:0,value:u(this._getter(this._target,n))})),this._tracks[n].push({time:parseInt(e),value:t[n]});return this},during:function(e){return this._onframeList.push(e),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var e=this._doneList,t=e.length,n=0;n<t;n++)e[n].call(this)},start:function(e){var t,n=this,r=0,i=function(){0===--r&&n._doneCallback()};for(var a in this._tracks){var o=d(this,e,i,this._tracks[a],a,n._interpolater);o&&(this._clipList.push(o),r++,this.animation&&this.animation.addClip(o),t=o)}if(t){var s=t.onframe;t.onframe=function(e,t){s(e,t);for(var r=0;r<n._onframeList.length;r++)n._onframeList[r](e,t)}}return r||this._doneCallback(),this},stop:function(){for(var e=0;e<this._clipList.length;e++){var t=this._clipList[e];this.animation.removeClip(t)}this._clipList=[]},delay:function(e){return this._delay=e,this},done:function(e){return e&&this._doneList.push(e),this},getClips:function(){return this._clipList}},t.a=p},function(e,t,n){"use strict";var r=n(18),i=n(15),a=n(16),o=n(40),s=n(7),u=n(0),l=n.n(u),c=l.a.mat4,f=l.a.vec3,h={merge:function(e,t){if(e.length){var n=e[0],a=n.geometry,o=n.material,u=new r.a;u.boundingBox=new s.a;for(var l=a.getEnabledAttributes(),h=0;h<l.length;h++){var d=l[h],p=a.attributes[d];u.attributes[d]||(u.attributes[d]=p.clone(!1))}for(var _=c.create(),m=0,g=0,v=0;v<e.length;v++){var y=e[v].geometry;y.boundingBox&&(y.boundingBox.applyTransform(t?e[v].worldTransform:e[v].localTransform),u.boundingBox.union(y.boundingBox)),m+=y.vertexCount,g+=y.triangleCount}for(var x=0;x<l.length;x++){var d=l[x];u.attributes[d].init(m)}u.indices=m>=65535?new Uint32Array(3*g):new Uint16Array(3*g);for(var T=0,E=0,b=a.isUseIndices(),S=0;S<e.length;S++){var A=e[S],y=A.geometry,m=y.vertexCount,w=t?A.worldTransform._array:A.localTransform._array;c.invert(_,w),c.transpose(_,_);for(var N=0;N<l.length;N++){var d=l[N],C=y.attributes[d],R=u.attributes[d];if(C.value.length){for(var M=C.value.length,L=C.size,P=T*L,D=M/L,h=0;h<M;h++)R.value[P+h]=C.value[h];"position"===d?f.forEach(R.value,L,P,D,f.transformMat4,w):"normal"!==d&&"tangent"!==d||f.forEach(R.value,L,P,D,f.transformMat4,_)}}if(b){for(var M=y.indices.length,h=0;h<M;h++)u.indices[h+E]=y.indices[h]+T;E+=M}T+=m}return new i.a({material:o,geometry:u})}},splitByJoints:function(e,t,n,s,u){var l=e.geometry,c=e.skeleton,f=e.material,h=f.shader,d=e.joints;if(l&&c&&d.length){if(d.length<t)return e;for(var p={},_=l.indices,m=l.triangleCount,g=m,v=[],y=l.attributes.joint.value,x=0;x<m;x++)v[x]=!1;for(var T=[],E=[],b=function(e){return d[e]};g>0;){for(var S=[],A=[],w=[],N=0,x=0;x<d.length;x++)A[x]=-1;for(var C=0;C<m;C++)if(!v[C]){for(var R=!0,M=0,x=0;x<3;x++)for(var L=_[3*C+x],P=0;P<4;P++){var D=y[4*L+P];D>=0&&-1===A[D]&&(N<t?(A[D]=N,w[N++]=D,T[M++]=D):R=!1)}if(R)S.push(_.subarray(3*C,3*(C+1))),v[C]=!0,g--;else for(var x=0;x<M;x++)A[T[x]]=-1,w.pop(),N--}E.push({triangles:S,joints:w.map(b),jointReverseMap:A})}var I=new a.a({name:e.name}),O=l.getEnabledAttributes();O.splice(O.indexOf("joint"),1);for(var F=[],k=0;k<E.length;k++){var B=E[k],U=B.jointReverseMap,N=B.joints.length,H=f.clone();if(f instanceof o.a)H.jointCount=N;else{var G;if(s&&u){var z={};for(var q in h.vertexDefines)z[q]=h.vertexDefines[q];z.JOINT_COUNT=N,G=s.get(u,{textures:h.getEnabledTextures(),vertexDefines:z,fragmentDefines:h.fragmentDefines,precision:h.precision})}else(G=p[N])||(G=h.clone(),G.define("vertex","JOINT_COUNT",N),p[N]=G);H.attachShader(G,!0)}H.name=[f.name,k].join("-");for(var W=new r.a,V=new i.a({name:[e.name,x].join("-"),material:H,geometry:W,skeleton:c,joints:B.joints.slice()}),j=0,X=l.vertexCount,x=0;x<X;x++)F[x]=-1;for(var C=0;C<B.triangles.length;C++)for(var K=B.triangles[C],x=0;x<3;x++){var L=K[x];-1===F[L]&&(F[L]=j,j++)}for(var Y=0;Y<O.length;Y++){var Z=O[Y],Q=W.attributes[Z];Q.init(j)}W.attributes.joint.value=new Float32Array(4*j),W.indices=j>65535?new Uint32Array(3*B.triangles.length):new Uint16Array(3*B.triangles.length);var J=0;j=0;for(var x=0;x<X;x++)F[x]=-1;for(var C=0;C<B.triangles.length;C++)for(var $=B.triangles[C],x=0;x<3;x++){var L=$[x];if(-1===F[L]){F[L]=j;for(var Y=0;Y<O.length;Y++)for(var Z=O[Y],ee=l.attributes[Z],Q=W.attributes[Z],te=ee.size,P=0;P<te;P++)Q.value[j*te+P]=ee.value[L*te+P];for(var P=0;P<4;P++){var D=l.attributes.joint.value[4*L+P],ne=4*j+P;W.attributes.joint.value[ne]=D>=0?U[D]:-1}j++}W.indices[J++]=F[L]}W.updateBoundingBox(),I.add(V)}for(var re=e.children(),x=0;x<re.length;x++)I.add(re[x]);if(I.position.copy(e.position),I.rotation.copy(e.rotation),I.scale.copy(e.scale),n&&e.getParent()){var ie=e.getParent();ie.remove(e),ie.add(I)}return I}}};t.a=h},function(e,t,n){"use strict";var r=n(11),i=n(58),a=function(){i.a.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},o=function(){};o.prototype=i.a.prototype,a.prototype=new o,a.prototype.constructor=a,a.prototype.all=function(e){var t=0,n=this,i=[];return this._tasks=e,this._fulfilledNumber=0,this._rejectedNumber=0,r.a.each(e,function(e,r){e&&e.once&&(t++,e.once("success",function(a){t--,n._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,i[r]=a,0===t&&n.resolve(i)}),e.once("error",function(){n._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,n.reject(e)}))}),0===t?(setTimeout(function(){n.resolve(i)}),this):this},a.prototype.allSettled=function(e){var t=0,n=this,i=[];return 0===e.length?(setTimeout(function(){n.trigger("success",i)}),this):(this._tasks=e,r.a.each(e,function(e,r){e&&e.once&&(t++,e.once("success",function(a){t--,n._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,i[r]=a,0===t&&n.resolve(i)}),e.once("error",function(a){t--,n._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,i[r]=null,0===t&&n.resolve(i)}))}),this)},a.prototype.getFulfilledNumber=function(e){if(e){for(var t=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?t+=r.getFulfilledNumber(e):r._fulfilled&&(t+=1)}return t}return this._fulfilledNumber},a.prototype.getRejectedNumber=function(e){if(e){for(var t=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?t+=r.getRejectedNumber(e):r._rejected&&(t+=1)}return t}return this._rejectedNumber},a.prototype.getSettledNumber=function(e){if(e){for(var t=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];r instanceof a?t+=r.getSettledNumber(e):(r._rejected||r._fulfilled)&&(t+=1)}return t}return this._fulfilledNumber+this._rejectedNumber},a.prototype.getTaskNumber=function(e){if(e){for(var t=0,n=0;n<this._tasks.length;n++){var r=this._tasks[n];t+=r instanceof a?r.getTaskNumber(e):1}return t}return this._tasks.length},t.a=a},function(e,t,n){"use strict";var r=n(1),i=n(47),a=n(24),o=n(2),s=n(9),u=n(42),l=n(6),c=n(0),f=n.n(c),h=f.a.vec3,d=r.a.extend({scene:null,camera:null,renderer:null},function(){this._ray=new i.a,this._ndc=new a.a},{pick:function(e,t,n){return this.pickAll(e,t,[],n)[0]||null},pickAll:function(e,t,n,r){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),n=n||[],this._intersectNode(this.scene,n,r||!1),n.sort(this._intersectionCompareFunc),n},_intersectNode:function(e,t,n){e instanceof u.a&&e.isRenderable()&&(e.ignorePicking&&!n||!(e.mode===l.a.TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)||this._intersectRenderable(e,t));for(var r=0;r<e._children.length;r++)this._intersectNode(e._children[r],t,n)},_intersectRenderable:function(){var e=new o.a,t=new o.a,n=new o.a,r=new i.a,a=new s.a;return function(i,u){var c=i.isSkinnedMesh();r.copy(this._ray),s.a.invert(a,i.worldTransform),c||r.applyTransform(a);var f=i.geometry;if(c||!f.boundingBox||r.intersectBoundingBox(f.boundingBox)){if(f.pick)return void f.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,i,u);if(f.pickByRay)return void f.pickByRay(r,i,u);var p,_,m=i.cullFace===l.a.BACK&&i.frontFace===l.a.CCW||i.cullFace===l.a.FRONT&&i.frontFace===l.a.CW,g=f.indices,v=f.attributes.position,y=f.attributes.weight,x=f.attributes.joint,T=[];if(v&&v.value&&g){if(c){_=i.skeleton.getSubSkinMatrices(i.__GUID__,i.joints);for(var E=0;E<i.joints.length;E++){T[E]=T[E]||[];for(var b=0;b<16;b++)T[E][b]=_[16*E+b]}var S=[],A=[],w=[],N=[],C=[],R=f.attributes.skinnedPosition;R&&R.value||(f.createAttribute("skinnedPosition","f",3),R=f.attributes.skinnedPosition,R.init(f.vertexCount));for(var E=0;E<f.vertexCount;E++){v.get(E,S),y.get(E,A),x.get(E,w),A[3]=1-A[0]-A[1]-A[2],h.set(N,0,0,0);for(var b=0;b<4;b++)w[b]>=0&&A[b]>1e-4&&(h.transformMat4(C,S,T[w[b]]),h.scaleAndAdd(N,N,C,A[b]));R.set(E,N)}}for(var E=0;E<g.length;E+=3){var M=g[E],L=g[E+1],P=g[E+2],D=c?f.attributes.skinnedPosition:v;if(D.get(M,e._array),D.get(L,t._array),D.get(P,n._array),p=m?r.intersectTriangle(e,t,n,i.culling):r.intersectTriangle(e,n,t,i.culling)){var I=new o.a;c?o.a.copy(I,p):o.a.transformMat4(I,p,i.worldTransform),u.push(new d.Intersection(p,I,i,[M,L,P],E/3,o.a.dist(I,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});d.Intersection=function(e,t,n,r,i,a){this.point=e,this.pointWorld=t,this.target=n,this.triangle=r,this.triangleIndex=i,this.distance=a},t.a=d},function(e,t,n){"use strict";var r=n(18),i=n(0),a=n.n(i),o=n(7),s=(a.a.vec3,a.a.vec2,r.a.extend({widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var e=this.heightSegments,t=this.widthSegments,n=this.attributes.position,r=this.attributes.texcoord0,i=this.attributes.normal,a=(t+1)*(e+1);n.init(a),r.init(a),i.init(a);var s,u,l,c,f,h,d,p=a>65535?Uint32Array:Uint16Array,_=this.indices=new p(t*e*6),m=this.radius,g=this.phiStart,v=this.phiLength,y=this.thetaStart,x=this.thetaLength,m=this.radius,T=[],E=[],b=0,S=1/m;for(d=0;d<=e;d++)for(h=0;h<=t;h++)c=h/t,f=d/e,s=-m*Math.cos(g+c*v)*Math.sin(y+f*x),u=m*Math.cos(y+f*x),l=m*Math.sin(g+c*v)*Math.sin(y+f*x),T[0]=s,T[1]=u,T[2]=l,E[0]=c,E[1]=f,n.set(b,T),r.set(b,E),T[0]*=S,T[1]*=S,T[2]*=S,i.set(b,T),b++;var A,w,N,C,R=t+1,M=0;for(d=0;d<e;d++)for(h=0;h<t;h++)w=d*R+h,A=d*R+h+1,C=(d+1)*R+h+1,N=(d+1)*R+h,_[M++]=A,_[M++]=w,_[M++]=C,_[M++]=w,_[M++]=N,_[M++]=C;this.boundingBox=new o.a,this.boundingBox.max.set(m,m,m),this.boundingBox.min.set(-m,-m,-m)}}));t.a=s},function(e,t,n){"use strict";function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var i=n(4),a=n(5),o=(n(19),r("DXT1")),s=r("DXT3"),u=r("DXT5"),l={parse:function(e,t){var n=new Int32Array(e,0,31);if(542327876!==n[0])return null;if(4&!n(20))return null;var r,l,c=n(21),f=n[4],h=n[3],d=512&n[28],p=131072&n[2];switch(c){case o:r=8,l=i.a.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case s:r=16,l=i.a.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case u:r=16,l=i.a.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var _=n[1]+4,m=d?6:1,g=1;p&&(g=Math.max(1,n[7]));for(var v=[],y=0;y<m;y++){var x=f,T=h;v[y]=new a.a({width:x,height:T,format:l});for(var E=[],b=0;b<g;b++){var S=Math.max(4,x)/4*Math.max(4,T)/4*r,A=new Uint8Array(e,_,S);_+=S,x*=.5,T*=.5,E[b]=A}v[y].pixels=E[0],p&&(v[y].mipmaps=E)}if(!t)return v[0];t.width=v[0].width,t.height=v[0].height,t.format=v[0].format,t.pixels=v[0].pixels,t.mipmaps=v[0].mipmaps}};t.a=l},function(e,t,n){"use strict";function r(e,t,n,r){if(e[3]>0){var i=Math.pow(2,e[3]-128-8+r);t[n+0]=e[0]*i,t[n+1]=e[1]*i,t[n+2]=e[2]*i}else t[n+0]=0,t[n+1]=0,t[n+2]=0;return t[n+3]=1,t}function i(e,t,n){for(var r="",i=t;i<n;i++)r+=c(e[i]);return r}function a(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function o(e,t,n,r){for(var i=0,o=0,s=r;s>0;)if(e[o][0]=t[n++],e[o][1]=t[n++],e[o][2]=t[n++],e[o][3]=t[n++],1===e[o][0]&&1===e[o][1]&&1===e[o][2]){for(var u=e[o][3]<<i>>>0;u>0;u--)a(e[o-1],e[o]),o++,s--;i+=8}else o++,s--,i=0;return n}function s(e,t,n,r){if(r<f|r>h)return o(e,t,n,r);var i=t[n++];if(2!=i)return o(e,t,n-1,r);if(e[0][1]=t[n++],e[0][2]=t[n++],i=t[n++],(e[0][2]<<8>>>0|i)>>>0!==r)return null;for(var i=0;i<4;i++)for(var a=0;a<r;){var s=t[n++];if(s>128){s=(127&s)>>>0;for(var u=t[n++];s--;)e[a++][i]=u}else for(;s--;)e[a++][i]=t[n++]}return n}var u=n(4),l=n(5),c=String.fromCharCode,f=8,h=32767,d={parseRGBE:function(e,t,n){null==n&&(n=0);var a=new Uint8Array(e),o=a.length;if("#?"===i(a,0,2)){for(var f=2;f<o&&("\n"!==c(a[f])||"\n"!==c(a[f+1]));f++);if(!(f>=o)){f+=2;for(var h="";f<o;f++){var d=c(a[f]);if("\n"===d)break;h+=d}var p=h.split(" "),_=parseInt(p[1]),m=parseInt(p[3]);if(m&&_){for(var g=f+1,v=[],y=0;y<m;y++){v[y]=[];for(var x=0;x<4;x++)v[y][x]=0}for(var T=new Float32Array(m*_*4),E=0,b=0;b<_;b++){var g=s(v,a,g,m);if(!g)return null;for(var y=0;y<m;y++)r(v[y],T,E,n),E+=4}return t||(t=new l.a),t.width=m,t.height=_,t.pixels=T,t.type=u.a.FLOAT,t}}}},parseRGBEFromPNG:function(e){}};t.a=d},function(e,t,n){"use strict";function r(e,t,n){this.renderer=e,n=n||"perspective",this.scene=new i.a,this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.preZ=!1,this.setProjection(n),this._compositor=new l.a,this._temporalSS=new c.a,t&&(this._shadowMapPass=new a.a({lightFrustumBias:20}));for(var r=[],o=0,s=0;s<30;s++){for(var u=[],h=0;h<6;h++)u.push(4*Object(f.a)(o,2)-2),u.push(4*Object(f.a)(o,3)-2),o++;r.push(u)}this._pcfKernels=r,this._enableTemporalSS="auto",this.scene.on("beforerender",function(e,t,n){this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,n)},this)}var i=n(17),a=n(99),o=n(26),s=n(27),u=(n(9),n(2),n(24)),l=(n(22),n(104)),c=n(130),f=n(28);r.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),"perspective"===e?this.camera instanceof o.a||(this.camera=new o.a,t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof s.a||(this.camera=new s.a,t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3},r.prototype.setViewport=function(e,t,n,r,i){this.camera instanceof o.a&&(this.camera.aspect=n/r),i=i||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=n,this.viewport.height=r,this.viewport.devicePixelRatio=i,this._compositor.resize(n*i,r*i),this._temporalSS.resize(n*i,r*i)},r.prototype.containPoint=function(e,t){var n=this.viewport;return t=this.layer.renderer.getHeight()-t,e>=n.x&&t>=n.y&&e<=n.x+n.width&&t<=n.y+n.height};var h=new u.a;r.prototype.castRay=function(e,t,n){var r=this.layer.renderer,i=r.viewport;return r.viewport=this.viewport,r.screenToNDC(e,t,h),this.camera.castRay(h,n),r.viewport=i,n},r.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this._frame=0,this._temporalSS.resetFrame()},r.prototype.render=function(e){this._doRender(e,this._frame),this._frame++},r.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},r.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return"auto"==e&&(e=this._enablePostEffect),e},r.prototype.hasDOF=function(){return this._enableDOF},r.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>30},r.prototype._doRender=function(e,t){var n=this.scene,r=this.camera,i=this.renderer;if(t=t||0,!e&&this._shadowMapPass&&(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(i,n,r,!0)),this._updateShadowPCFKernel(t),i.gl.clearColor(0,0,0,0),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(i,r),this._compositor.updateNormal(i,n,r,this._temporalSS.getFrame())),this._updateSSAO(i,n,r,this._temporalSS.getFrame()),this._enablePostEffect){var a=this._compositor.getSourceFrameBuffer();a.bind(i),i.gl.clear(i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT),i.render(n,r,!0,this.preZ),this.afterRenderScene(i,n,r),a.unbind(i),this.needsTemporalSS()&&e?(this._compositor.composite(i,r,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),i.setViewport(this.viewport),this._temporalSS.render(i)):(i.setViewport(this.viewport),this._compositor.composite(i,r,null,0))}else if(this.needsTemporalSS()&&e){var a=this._temporalSS.getSourceFrameBuffer();a.bind(i),i.saveClear(),i.clearBit=i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT,i.render(n,r,!0,this.preZ),this.afterRenderScene(i,n,r),i.restoreClear(),a.unbind(i),i.setViewport(this.viewport),this._temporalSS.render(i)}else i.setViewport(this.viewport),i.render(n,r,!0,this.preZ),this.afterRenderScene(i,n,r);this.afterRenderAll(i,n,r)},r.prototype.afterRenderScene=function(e,t,n){},r.prototype.afterRenderAll=function(e,t,n){},r.prototype._updateSSAO=function(e,t,n,r){function i(e){for(var t=0;t<e.length;t++){var n=e[t];n.material.shader[a?"enableTexture":"disableTexture"]("ssaoMap"),a&&n.material.set("ssaoMap",o.getSSAOTexture())}}var a=this._enableSSAO&&this._enablePostEffect,o=this._compositor;a&&this._compositor.updateSSAO(e,t,n,this._temporalSS.getFrame()),i(t.opaqueQueue),i(t.transparentQueue)},r.prototype._updateShadowPCFKernel=function(e){function t(e){for(var t=0;t<e.length;t++)e[t].receiveShadow&&(e[t].material.set("pcfKernel",n),e[t].material.shader&&e[t].material.shader.define("fragment","PCF_KERNEL_SIZE",n.length/2))}var n=this._pcfKernels[e%this._pcfKernels.length];t(this.scene.opaqueQueue),t(this.scene.transparentQueue)},r.prototype.dispose=function(e){this._compositor.dispose(e),this._temporalSS.dispose(e),this._shadowMapPass&&this._shadowMapPass.dispose(e)},r.prototype.setPostEffect=function(e,t){var n=this._compositor;e=e||{},this._enablePostEffect=!!e.enable;var r=e.bloom||{},i=e.edge||{},a=e.depthOfField||{},o=e.screenSpaceAmbientOcclusion||{},s=e.screenSpaceReflection||{},u=e.FXAA||{},l=e.colorCorrection||{};r.enable?n.enableBloom():n.disableBloom(),a.enable?n.enableDOF():n.disableDOF(),s.enable?n.enableSSR():n.disableSSR(),l.enable?n.enableColorCorrection():n.disableColorCorrection(),i.enable?n.enableEdge():n.disableEdge(),u.enable?n.enableFXAA():n.disableFXAA(),this._enableDOF=a.enable,this._enableSSAO=o.enable,this._enableSSAO?n.enableSSAO():n.disableSSAO(),n.setBloomIntensity(r.intensity),n.setEdgeColor(i.color),n.setColorLookupTexture(l.lookupTexture,t),n.setExposure(l.exposure),["radius","quality","intensity"].forEach(function(e){n.setSSAOParameter(e,o[e])}),["quality","maxRoughness"].forEach(function(e){n.setSSRParameter(e,s[e])}),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach(function(e){n.setDOFParameter(e,a[e])}),["brightness","contrast","saturation"].forEach(function(e){n.setColorCorrection(e,l[e])})},r.prototype.isDOFEnabled=function(){return this._enablePostEffect&&this._enableDOF},r.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect){if(e>this.camera.far||e<this.camera.near)return;return this._compositor.setDOFParameter("focalDistance",e),!0}},r.prototype.setTemporalSuperSampling=function(e){e=e||{},this._enableTemporalSS=e.enable},r.prototype.isLinearSpace=function(){return this._enablePostEffect},r.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),n=0;n<t.length;n++)e.add(t[n]);e!==this.scene&&this.scene.add(e),this.rootNode=e}},r.prototype.add=function(e){this.rootNode.add(e)},r.prototype.remove=function(e){this.rootNode.remove(e)},r.prototype.removeAll=function(e){this.rootNode.removeAll(e)},t.a=r},function(e,t,n){"use strict";var r=n(1),i=n(6),a=n(2),o=n(7),s=n(46),u=n(9),l=n(30),c=n(3),f=(n(14),n(15),n(100)),h=n(59),d=n(101),p=(n(20),n(8)),_=n(10),m=n(4),g=n(5),v=n(19),y=n(26),x=n(27),T=n(13),E=n(60),b=n(0),S=n.n(b),A=n(103),w=S.a.mat4,N=(S.a.vec3,["px","nx","py","ny","pz","nz"]);c.a.import(A.a);var C=r.a.extend(function(){return{softShadow:C.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"mediump",_frameBuffer:new _.a,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new E.a}},function(){this._gaussianPassH=new T.a({fragment:c.a.source("qtek.compositor.gaussian_blur")}),this._gaussianPassV=new T.a({fragment:c.a.source("qtek.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new T.a({fragment:c.a.source("qtek.sm.debug_depth")})},{render:function(e,t,n,r){this.trigger("beforerender",this,e,t,n),this._renderShadowPass(e,t,n,r),this.trigger("afterrender",this,e,t,n)},renderDebug:function(e,t){e.saveClear();var n=e.viewport,r=0,i=t||n.width/4,a=i;this.softShadow===C.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.undefine("fragment","USE_VSM");for(var o in this._textures){var s=this._textures[o];e.setViewport(r,0,i*s.width/s.height,a),this._outputDepthPass.setUniform("depthMap",s),this._outputDepthPass.render(e),r+=i*s.width/s.height}e.setViewport(n),e.restoreClear()},_bindDepthMaterial:function(e,t,n){for(var r=0;r<e.length;r++){var i,a,o=e[r],s=o.material.shadowTransparentMap instanceof g.a,u=o.material.shadowTransparentMap,l=o.joints&&o.joints.length;s?(i=l+"-"+u.__GUID__,a=l+"-t"):(i=l,a=l),o.useSkinMatricesTexture&&(i+="-s",a+="-s");var f=o.shadowDepthMaterial||this._depthMaterials[i],h=o.shadowDepthMaterial?o.shadowDepthMaterial.shader:this._depthShaders[a];o.material!==f&&(h||(h=new c.a({vertex:c.a.source("qtek.sm.depth.vertex"),fragment:c.a.source("qtek.sm.depth.fragment"),precision:this.precision}),l>0&&(h.define("vertex","SKINNING"),h.define("vertex","JOINT_COUNT",l)),s&&h.define("both","SHADOW_TRANSPARENT"),o.useSkinMatricesTexture&&h.define("vertex","USE_SKIN_MATRICES_TEXTURE"),this._depthShaders[a]=h),f||(f=new p.a({shader:h}),this._depthMaterials[i]=f),o.material=f,this.softShadow===C.VSM?h.define("fragment","USE_VSM"):h.undefine("fragment","USE_VSM"),f.setUniform("bias",t),f.setUniform("slopeScale",n),s&&f.set("shadowTransparentMap",u))}},_bindDistanceMaterial:function(e,t){for(var n=t.getWorldPosition()._array,r=0;r<e.length;r++){var i=e[r],a=i.joints&&i.joints.length,o=this._distanceMaterials[a];i.material!==o&&(o||(o=new p.a({shader:new c.a({vertex:c.a.source("qtek.sm.distance.vertex"),fragment:c.a.source("qtek.sm.distance.fragment"),precision:this.precision})}),a>0&&(o.shader.define("vertex","SKINNING"),o.shader.define("vertex","JOINT_COUNT",a)),this._distanceMaterials[a]=o),i.material=o,this.softShadow===C.VSM?o.shader.define("fragment","USE_VSM"):o.shader.undefine("fragment","USE_VSM")),o.set("lightPosition",n),o.set("range",t.range)}},saveMaterial:function(e){for(var t=0;t<e.length;t++){var n=e[t];this._meshMaterials[n.__GUID__]=n.material}},restoreMaterial:function(e){for(var t=0;t<e.length;t++){var n=e[t],r=this._meshMaterials[n.__GUID__];r&&(n.material=r)}},_updateCasterAndReceiver:function(e,t){t.castShadow&&this._opaqueCasters.push(t),t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),!t.material.shader&&t.material.updateShader&&t.material.updateShader(e);var n=t.material.shader;if(this.softShadow===C.VSM)n.define("fragment","USE_VSM"),n.undefine("fragment","PCF_KERNEL_SIZE");else{n.undefine("fragment","USE_VSM");var r=this.kernelPCF;r&&r.length?n.define("fragment","PCF_KERNEL_SIZE",r.length/2):n.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){for(var n=0;n<t.opaqueQueue.length;n++)this._updateCasterAndReceiver(e,t.opaqueQueue[n]);for(var n=0;n<t.transparentQueue.length;n++)this._updateCasterAndReceiver(e,t.transparentQueue[n]);for(var n=0;n<t.lights.length;n++){var r=t.lights[n];r.castShadow&&this._lightsCastShadow.push(r)}},_renderShadowPass:function(e,t,n,r){function i(e){return e.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var o=e.gl;if(r||t.update(),this._update(e,t),this._lightsCastShadow.length){o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);var s=[],u=[],l=[],c=[],p=[],_=[];this.saveMaterial(this._opaqueCasters);for(var m,g=0;g<this._lightsCastShadow.length;g++){var v=this._lightsCastShadow[g];if(v instanceof h.a){if(m){console.warn("Only one dire light supported with shadow cascade");continue}if(v.shadowCascade>1&&(m=v,v.shadowCascade>4)){console.warn("Support at most 4 cascade");continue}this.renderDirectionalLightShadow(e,t,n,v,this._opaqueCasters,p,c,l)}else v instanceof f.a?this.renderSpotLightShadow(e,v,this._opaqueCasters,u,s):v instanceof d.a&&this.renderPointLightShadow(e,v,this._opaqueCasters,_);this._shadowMapNumber[v.type]++}this.restoreMaterial(this._opaqueCasters);var y=p.slice(),x=p.slice();y.pop(),x.shift(),y.reverse(),x.reverse(),c.reverse();for(var T=s.map(i),E=l.map(i),b={},g=0;g<this._receivers.length;g++){var S=this._receivers[g],A=S.material,w=A.shader;if(!b[w.__GUID__]){var N=!1;for(var C in this._shadowMapNumber){var R=this._shadowMapNumber[C],M=C+"_SHADOWMAP_COUNT";w.fragmentDefines[M]!==R&&R>0&&(w.fragmentDefines[M]=R,N=!0)}N&&w.dirty(),m?w.define("fragment","SHADOW_CASCADE",m.shadowCascade):w.undefine("fragment","SHADOW_CASCADE"),b[w.__GUID__]=!0}s.length>0&&(A.setUniform("spotLightShadowMaps",s),A.setUniform("spotLightMatrices",u),A.setUniform("spotLightShadowMapSizes",T)),l.length>0&&(A.setUniform("directionalLightShadowMaps",l),m&&(A.setUniform("shadowCascadeClipsNear",y),A.setUniform("shadowCascadeClipsFar",x)),A.setUniform("directionalLightMatrices",c),A.setUniform("directionalLightShadowMapSizes",E)),_.length>0&&A.setUniform("pointLightShadowMaps",_)}}},renderDirectionalLightShadow:function(){var e=new s.a,t=new u.a,n=new o.a,r=new u.a,i=new u.a,a=new u.a,c=new u.a;return function(o,s,f,h,d,p,_,m){var g=h.shadowBias;this._bindDepthMaterial(d,g,h.shadowSlopeScale),d.sort(l.a.opaqueSortFunc);var v=Math.min(-s.viewBoundingBoxLastFrame.min.z,f.far),x=Math.max(-s.viewBoundingBoxLastFrame.max.z,f.near),T=this._getDirectionalLightCamera(h,s,f),E=a._array;c.copy(T.projectionMatrix),w.invert(i._array,T.worldTransform._array),w.multiply(i._array,i._array,f.worldTransform._array),w.multiply(E,c._array,i._array);for(var b=[],S=f instanceof y.a,A=(f.near+f.far)/(f.near-f.far),N=2*f.near*f.far/(f.near-f.far),R=0;R<=h.shadowCascade;R++){var M=x*Math.pow(v/x,R/h.shadowCascade),L=x+(v-x)*R/h.shadowCascade,P=M*h.cascadeSplitLogFactor+L*(1-h.cascadeSplitLogFactor);b.push(P),p.push(-(-P*A+N)/-P)}var D=this._getTexture(h,h.shadowCascade);m.push(D);var I=o.viewport,O=o.gl;this._frameBuffer.attach(D),this._frameBuffer.bind(o),O.clear(O.COLOR_BUFFER_BIT|O.DEPTH_BUFFER_BIT);for(var R=0;R<h.shadowCascade;R++){var F=b[R],k=b[R+1];S?w.perspective(t._array,f.fov/180*Math.PI,f.aspect,F,k):w.ortho(t._array,f.left,f.right,f.bottom,f.top,F,k),e.setFromProjection(t),e.getTransformedBoundingBox(n,i),n.applyProjection(c);var B=n.min._array,U=n.max._array;B[0]=Math.max(B[0],-1),B[1]=Math.max(B[1],-1),U[0]=Math.min(U[0],1),U[1]=Math.min(U[1],1),r.ortho(B[0],U[0],B[1],U[1],1,-1),T.projectionMatrix.multiplyLeft(r);var H=h.shadowResolution||512;o.setViewport((h.shadowCascade-R-1)*H,0,H,H,1);for(var G in this._depthMaterials)this._depthMaterials[G].set("shadowBias",g);o.renderQueue(d,T),this.softShadow===C.VSM&&this._gaussianFilter(o,D,D.width);var z=new u.a;z.copy(T.viewMatrix).multiplyLeft(T.projectionMatrix),_.push(z._array),T.projectionMatrix.copy(c)}this._frameBuffer.unbind(o),o.setViewport(I)}}(),renderSpotLightShadow:function(e,t,n,r,i){this._bindDepthMaterial(n,t.shadowBias,t.shadowSlopeScale),n.sort(l.a.opaqueSortFunc);var a=this._getTexture(t),o=this._getSpotLightCamera(t),s=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),e.renderQueue(n,o),this._frameBuffer.unbind(e),this.softShadow===C.VSM&&this._gaussianFilter(e,a,a.width);var c=new u.a;c.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),r.push(c._array)},renderPointLightShadow:function(e,t,n,r){var i=this._getTexture(t),a=e.gl;r.push(i),this._bindDistanceMaterial(n,t);for(var o=0;o<6;o++){var s=N[o],u=this._getPointLightCamera(t,s);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(e),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),e.renderQueue(n,u)}this._frameBuffer.unbind(e)},_gaussianFilter:function(e,t,n){var r={width:n,height:n,type:m.a.FLOAT},i=(e.gl,this._texturePool.get(r));this._frameBuffer.attach(i),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",n),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",n),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(i)},_getTexture:function(e,t){var n=e.__GUID__,r=this._textures[n],a=e.shadowResolution||512;return t=t||1,r||(r=e instanceof d.a?new v.a:new g.a,r.width=a*t,r.height=a,this.softShadow===C.VSM?(r.type=m.a.FLOAT,r.anisotropic=4):(r.minFilter=i.a.NEAREST,r.magFilter=i.a.NEAREST,r.useMipmap=!1),this._textures[n]=r),r},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new y.a,nx:new y.a,py:new y.a,ny:new y.a,pz:new y.a,nz:new y.a});var n=this._lightCameras.point[t];switch(n.far=e.range,n.fov=90,n.position.set(0,0,0),t){case"px":n.lookAt(a.a.POSITIVE_X,a.a.NEGATIVE_Y);break;case"nx":n.lookAt(a.a.NEGATIVE_X,a.a.NEGATIVE_Y);break;case"py":n.lookAt(a.a.POSITIVE_Y,a.a.POSITIVE_Z);break;case"ny":n.lookAt(a.a.NEGATIVE_Y,a.a.NEGATIVE_Z);break;case"pz":n.lookAt(a.a.POSITIVE_Z,a.a.NEGATIVE_Y);break;case"nz":n.lookAt(a.a.NEGATIVE_Z,a.a.NEGATIVE_Y)}return e.getWorldPosition(n.position),n.update(),n},_getDirectionalLightCamera:function(){var e=new u.a,t=new o.a,n=new o.a;return function(r,i,a){this._lightCameras.directional||(this._lightCameras.directional=new x.a);var o=this._lightCameras.directional;t.copy(i.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),o.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(r.rotation),o.scale.copy(r.scale),o.updateWorldTransform(),u.a.invert(e,o.worldTransform),u.a.multiply(e,e,a.worldTransform),n.copy(t).applyTransform(e);var s=n.min._array,l=n.max._array;return o.position.set((s[0]+l[0])/2,(s[1]+l[1])/2,l[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+l[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=l[0],o.top=l[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new y.a);var t=this._lightCameras.spot;return t.fov=2*e.penumbraAngle,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),w.invert(t.viewMatrix._array,t.worldTransform._array),t},dispose:function(e){var t=e.gl||e;for(var n in this._depthMaterials){var r=this._depthMaterials[n];r.dispose(t)}for(var n in this._distanceMaterials){var r=this._distanceMaterials[n];r.dispose(t)}this._frameBuffer&&this._frameBuffer.dispose(t);for(var i in this._textures)this._textures[i].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var a=0;a<this._receivers.length;a++){var o=this._receivers[a];if(o.material&&o.material.shader){var s=o.material,u=s.shader;u.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),u.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),u.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),s.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});C.VSM=1,C.PCF=2,t.a=C},function(e,t,n){"use strict";var r=n(14),i=n(2),a=r.a.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new i.a,e.__dir.copy(e.worldTransform.z).negate()._array}},spotLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=r.a.prototype.clone.call(this);return e.range=this.range,e.umbraAngle=this.umbraAngle,e.penumbraAngle=this.penumbraAngle,e.falloffFactor=this.falloffFactor,e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});t.a=a},function(e,t,n){"use strict";var r=n(14),i=r.a.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=r.a.prototype.clone.call(this);return e.range=this.range,e}});t.a=i},function(e,t,n){"use strict";t.a="\n@export qtek.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end"},function(e,t,n){"use strict";t.a="@export qtek.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n@import qtek.chunk.skinning_header\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nvoid main(){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\n    v_Texcoord = texcoord;\n#endif\n}\n@end\n@export qtek.sm.depth.fragment\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n@import qtek.util.encode_float\nvoid main(){\n    float depth = v_ViewPosition.z / v_ViewPosition.w;\n#ifdef USE_VSM\n    depth = depth * 0.5 + 0.5;\n    float moment1 = depth;\n    float moment2 = depth * depth;\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    moment2 += 0.25*(dx*dx+dy*dy);\n    gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n#ifdef SHADOW_TRANSPARENT\n    if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n        gl_FragColor = encodeFloat(0.9999);\n        return;\n    }\n#endif\n    gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export qtek.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import qtek.util.decode_float\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n    gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n    float depth = decodeFloat(tex);\n    gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export qtek.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n@end\n@export qtek.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import qtek.util.encode_float\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n    dist = dist / range;\n    gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export qtek.plugin.shadow_map_common\n@import qtek.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n    return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n    float shadowContrib = tapShadowMap(map, uv, z);\n    vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n    for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n        shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n    }}\n    return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n    return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n    return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n    variance = max(variance, 0.0000001);\n    float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n    pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(\n    sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n    vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n    if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv * scale + offset).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv * scale + offset, z, textureSize, scale);\n        #endif\n    }\n    return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n    return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n    float dist = length(direction);\n    vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n    vec2 moments = shadowTex.xy;\n    float variance = moments.y - moments.x * moments.x;\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n#else\n    return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export qtek.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT];\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float directionalLightShadowMapSizes[1];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT];\nuniform float pointLightShadowMapSizes[POINT_LIGHT_SHADOWMAP_COUNT];\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import qtek.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n            spotLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n    float shadowContrib;\n    shadowContribs[0] = 1.0;\n    for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n        if (\n            depth >= shadowCascadeClipsNear[_idx_] &&\n            depth <= shadowCascadeClipsFar[_idx_]\n        ) {\n            shadowContrib = computeShadowContrib(\n                directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n                directionalLightShadowMapSizes[0],\n                vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n                vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n            );\n            shadowContribs[0] = shadowContrib;\n        }\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n            directionalLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n    vec3 lightPosition;\n    vec3 direction;\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        lightPosition = pointLightPosition[_idx_];\n        direction = position - lightPosition;\n        shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n    }}\n    for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n@end"},function(e,t,n){"use strict";function r(){this._sourceTexture=new a.a({type:o.a.HALF_FLOAT}),this._depthTexture=new a.a({format:o.a.DEPTH_COMPONENT,type:o.a.UNSIGNED_INT}),this._framebuffer=new s.a,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,s.a.DEPTH_ATTACHMENT),this._gBufferPass=new h.a({enableTargetTexture3:!1});var e=new u.a;this._compositor=e.parse(d.a);var t=this._compositor.getNodeByName("source");t.texture=this._sourceTexture;var n=this._compositor.getNodeByName("coc");this._sourceNode=t,this._cocNode=n,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map(function(e){return this._compositor.getNodeByName(e)},this),this._dofBlurKernel=null,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=w.map(function(e){return this._compositor.getNodeByName(e)},this);var r={normalTexture:this._gBufferPass.getTargetTexture1(),depthTexture:this._gBufferPass.getTargetTexture2()};this._ssaoPass=new l.a(r),this._ssrPass=new c.a(r)}var i=n(3),a=n(5),o=n(4),s=n(10),u=n(105),l=n(111),c=n(113),f=n(115),h=n(116),d=(n(9),n(29),n(127)),p=n(50),_=n(51),m=n(52),g=n(53),v=n(54),y=n(55),x=n(56),T=n(57),E=n(61),b=n(128),S=n(129);i.a.import(p.a),i.a.import(_.a),i.a.import(m.a),i.a.import(g.a),i.a.import(v.a),i.a.import(y.a),i.a.import(x.a),i.a.import(T.a),i.a.import(E.a),i.a.import(b.a),i.a.import(S.a);var A={color:{parameters:{width:function(e){return e.getWidth()},height:function(e){return e.getHeight()}}}},w=["composite","FXAA"];r.prototype.resize=function(e,t,n){n=n||1,e*=n,t*=n;var r=this._sourceTexture,i=this._depthTexture;r.width=e,r.height=t,i.width=e,i.height=t,this._gBufferPass.resize(e,t)},r.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR},r.prototype._getPrevNode=function(e){for(var t=w.indexOf(e.name)-1,n=this._finalNodesChain[t];n&&!this._compositor.getNodeByName(n.name);)t-=1,n=this._finalNodesChain[t];return n},r.prototype._getNextNode=function(e){for(var t=w.indexOf(e.name)+1,n=this._finalNodesChain[t];n&&!this._compositor.getNodeByName(n.name);)t+=1,n=this._finalNodesChain[t];return n},r.prototype._addChainNode=function(e){var t=this._getPrevNode(e),n=this._getNextNode(e);t&&(t.outputs=A,e.inputs.texture=t.name,n?(e.outputs=A,n.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))},r.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),n=this._getNextNode(e);t&&(n?(t.outputs=A,n.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))},r.prototype.updateNormal=function(e,t,n,r){this._ifRenderNormalPass()&&this._gBufferPass.update(e,t,n)},r.prototype.updateSSAO=function(e,t,n,r){this._ssaoPass.update(e,n,r)},r.prototype.enableSSAO=function(){this._enableSSAO=!0},r.prototype.disableSSAO=function(){this._enableSSAO=!1},r.prototype.enableSSR=function(){this._enableSSR=!0},r.prototype.disableSSR=function(){this._enableSSR=!1},r.prototype.getSSAOTexture=function(e,t,n,r){return this._ssaoPass.getTargetTexture()},r.prototype.getSourceFrameBuffer=function(){return this._framebuffer},r.prototype.getSourceTexture=function(){return this._sourceTexture},r.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)},r.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)},r.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()},r.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()},r.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()},r.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()},r.prototype.enableColorCorrection=function(){this._compositeNode.shaderDefine("COLOR_CORRECTION"),this._enableColorCorrection=!0},r.prototype.disableColorCorrection=function(){this._compositeNode.shaderUndefine("COLOR_CORRECTION"),this._enableColorCorrection=!1},r.prototype.enableEdge=function(){this._enableEdge=!0},r.prototype.disableEdge=function(){this._enableEdge=!1},r.prototype.setBloomIntensity=function(e){null!=e&&this._compositeNode.setParameter("bloomIntensity",e)},r.prototype.setSSAOParameter=function(e,t){if(null!=t)switch(e){case"quality":var n={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",n);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/50);break;case"intensity":this._ssaoPass.setParameter(e,t)}},r.prototype.setDOFParameter=function(e,t){if(null!=t)switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var n=0;n<this._dofBlurNodes.length;n++)this._dofBlurNodes[n].setParameter("blurRadius",t);break;case"quality":var r={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=r;for(var n=0;n<this._dofBlurNodes.length;n++)this._dofBlurNodes[n].shaderDefine("POISSON_KERNEL_SIZE",r);this._dofBlurKernel=new Float32Array(2*r)}},r.prototype.setSSRParameter=function(e,t){if(null!=t)switch(e){case"quality":var n={low:10,medium:20,high:40,ultra:80}[t]||20,r={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",n),this._ssrPass.setParameter("pixelStride",r);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;default:__DEV__&&console.warn("Unkown SSR parameter "+e)}},r.prototype.setEdgeColor=function(e){},r.prototype.setExposure=function(e){null!=e&&this._compositeNode.setParameter("exposure",Math.pow(2,e))},r.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:o.a.NEAREST,magFilter:o.a.NEAREST,flipY:!1})},r.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)},r.prototype.composite=function(e,t,n,r){var i=this._sourceTexture,a=i;this._enableSSR&&(this._ssrPass.update(e,t,i,r),a=this._ssrPass.getTargetTexture()),this._sourceNode.texture=a,this._cocNode.setParameter("depth",this._depthTexture);for(var o=this._dofBlurKernel,s=this._dofBlurKernelSize,u=Math.floor(f.a.length/2/s),l=r%u,c=0;c<2*s;c++)o[c]=f.a[c+l*s*2];for(var c=0;c<this._dofBlurNodes.length;c++)this._dofBlurNodes[c].setParameter("percent",r/30),this._dofBlurNodes[c].setParameter("poissonKernel",o);this._cocNode.setParameter("zNear",t.near),this._cocNode.setParameter("zFar",t.far),this._compositor.render(e,n)},r.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._gBufferPass.dispose(e),this._ssaoPass.dispose(e)},t.a=r},function(e,t,n){"use strict";function r(e,t){return function(n){var r=n.getDevicePixelRatio(),i=n.getWidth(),a=n.getHeight(),o=t(i,a,r);this.setParameter(e,o)}}function i(e,t){return function(e){var n=e.getDevicePixelRatio(),r=e.getWidth(),i=e.getHeight();return t(r,i,n)}}function a(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var n=new Function("width","height","dpr","return "+t[1]);return n(1,1),n}catch(e){throw new Error("Invalid expression.")}}var o=n(1),s=n(25),u=n(11),l=n(106),c=(n(21),n(108)),f=n(109),h=n(110),d=n(3),p=n(4),_=n(5),m=n(19),g=/#source\((.*?)\)/,v=/#url\((.*?)\)/,y=o.a.extend({rootPath:"",textureRootPath:"",shaderRootPath:"",scene:null,camera:null},{load:function(e){var t=this;this.rootPath||(this.rootPath=e.slice(0,e.lastIndexOf("/"))),s.a.get({url:e,onprogress:function(e,n,r){t.trigger("progress",e,n,r)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(e){var t=this,n=new l.a,r={textures:{},shaders:{},parameters:{}},i=function(i,a){for(var o=0;o<e.nodes.length;o++){var s=e.nodes[o],u=t._createNode(s,r);u&&n.addNode(u)}t.trigger("success",n)};for(var a in e.parameters){var o=e.parameters[a];r.parameters[a]=this._convertParameter(o)}return this._loadShaders(e,function(n){t._loadTextures(e,r,function(e){r.textures=e,r.shaders=n,i()})}),n},_createNode:function(e,t){var n,i,o,s=e.type||"filter";if("filter"===s){var u=e.shader.trim(),l=g.exec(u);if(l?n=d.a.source(l[1].trim()):"#"===u.charAt(0)&&(n=t.shaders[u.substr(1)]),n||(n=u),!n)return}if(e.inputs){i={};for(var p in e.inputs)"string"==typeof e.inputs[p]?i[p]=e.inputs[p]:i[p]={node:e.inputs[p].node,pin:e.inputs[p].pin}}if(e.outputs){o={};for(var p in e.outputs){var _=e.outputs[p];if(o[p]={},null!=_.attachment&&(o[p].attachment=_.attachment),null!=_.keepLastFrame&&(o[p].keepLastFrame=_.keepLastFrame),null!=_.outputLastFrame&&(o[p].outputLastFrame=_.outputLastFrame),"string"==typeof _.parameters){var m=_.parameters;"#"===m.charAt(0)&&(o[p].parameters=t.parameters[m.substr(1)])}else _.parameters&&(o[p].parameters=this._convertParameter(_.parameters))}}var v;if(v="scene"===s?new c.a({name:e.name,scene:this.scene,camera:this.camera,outputs:o}):"texture"===s?new f.a({name:e.name,outputs:o}):new h.a({name:e.name,shader:n,inputs:i,outputs:o})){if(e.parameters)for(var p in e.parameters){var y=e.parameters[p];"string"==typeof y&&(y=y.trim(),"#"===y.charAt(0)?y=t.textures[y.substr(1)]:v.on("beforerender",r(p,a(y)))),v.setParameter(p,y)}if(e.defines&&v.pass)for(var p in e.defines){var y=e.defines[p];v.pass.material.shader.define("fragment",p,y)}}return v},_convertParameter:function(e){var t={};return e?(["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(n){var r=e[n];null!=r&&("string"==typeof r&&(r=p.a[r]),t[n]=r)}),["width","height"].forEach(function(n){if(null!=e[n]){var r=e[n];"string"==typeof r?(r=r.trim(),t[n]=i(n,a(r))):t[n]=r}}),null!=e.useMipmap&&(t.useMipmap=e.useMipmap),t):t},_loadShaders:function(e,t){if(!e.shaders)return void t({});var n={},r=0,i=!1,a=this.shaderRootPath||this.rootPath;u.a.each(e.shaders,function(e,o){var l=v.exec(e);if(l){var c=l[1];c=u.a.relative2absolute(c,a),r++,s.a.get({url:c,onload:function(e){n[o]=e,d.a.import(e),0===--r&&(t(n),i=!0)}})}else n[o]=e,d.a.import(e)},this),0!==r||i||t(n)},_loadTextures:function(e,t,n){if(!e.textures)return void n({});var r={},i=0,a=!1,o=this.textureRootPath||this.rootPath;u.a.each(e.textures,function(e,t){var s,l=e.path,c=this._convertParameter(e.parameters);if(Array.isArray(l)&&6===l.length)l=l.map(function(e){return u.a.relative2absolute(e,o)}),s=new m.a(c);else{if("string"!=typeof l)return;l=u.a.relative2absolute(l,o),s=new _.a(c)}s.load(l),i++,s.once("success",function(){r[t]=s,0===--i&&(n(r),a=!0)})},this),0!==i||a||n(r)}});t.a=y},function(e,t,n){"use strict";var r=n(107),i=n(60),a=n(10),o=r.a.extend(function(){return{_outputs:[],_texturePool:new i.a,_frameBuffer:new a.a({depthBuffer:!1})}},{addNode:function(e){r.a.prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var n=0;n<this.nodes.length;n++)this.nodes[n].outputs||this._outputs.push(this.nodes[n])}for(var n=0;n<this.nodes.length;n++)this.nodes[n].beforeFrame();for(var n=0;n<this._outputs.length;n++)this._outputs[n].updateReference();for(var n=0;n<this._outputs.length;n++)this._outputs[n].render(e,t);for(var n=0;n<this.nodes.length;n++)this.nodes[n].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}});t.a=o},function(e,t,n){"use strict";var r=n(1),i=n(21),a=r.a.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){"string"==typeof e&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs)for(var n in t.inputs)if(t.inputs[n])if(!t.pass||t.pass.material.isUniformEnabled(n)){var r=t.inputs[n],i=this.findPin(r);i?t.link(n,i.node,i.pin):"string"==typeof r?console.warn("Node "+r+" not exist"):console.warn("Pin of "+r.node+"."+r.pin+" not exist")}else console.warn("Pin "+t.name+"."+n+" not used.")}},findPin:function(e){var t;if(("string"==typeof e||e instanceof i.a)&&(e={node:e}),"string"==typeof e.node)for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n];r.name===e.node&&(t=r)}else t=e.node;if(t){var a=e.pin;if(a||t.outputs&&(a=Object.keys(t.outputs)[0]),t.outputs[a])return{node:t,pin:a}}}});t.a=a},function(e,t,n){"use strict";var r=n(21),i=n(6),a=n(10),o=r.a.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new a.a},{render:function(e){this._rendering=!0;var t=e.gl;this.trigger("beforerender");var n;if(this.outputs){var r=this.frameBuffer;for(var a in this.outputs){var o=this.updateParameter(a,e),s=this.outputs[a],u=this._compositor.allocateTexture(o);this._outputTextures[a]=u;var l=s.attachment||t.COLOR_ATTACHMENT0;"string"==typeof l&&(l=t[l]),r.attach(u,l)}r.bind(e);var c=e.getGLExtension("EXT_draw_buffers");if(c){var f=[];for(var l in this.outputs)(l=parseInt(l))>=t.COLOR_ATTACHMENT0&&l<=t.COLOR_ATTACHMENT0+8&&f.push(l);c.drawBuffersEXT(f)}e.saveClear(),e.clearBit=i.a.DEPTH_BUFFER_BIT|i.a.COLOR_BUFFER_BIT,n=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),r.unbind(e)}else n=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",n),this._rendering=!1,this._rendered=!0}});t.a=o},function(e,t,n){"use strict";var r=n(21),i=r.a.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}});t.a=i},function(e,t,n){"use strict";var r=n(13),i=n(21),a=i.a.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var e=new r.a({fragment:this.shader});this.pass=e},{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var n=e.gl;for(var r in this.inputLinks){var i=this.inputLinks[r],a=i.node.getOutput(e,i.pin);this.pass.setUniform(r,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var u=this.updateParameter(s,e);isNaN(u.width)&&this.updateParameter(s,e);var l=this.outputs[s],c=this._compositor.allocateTexture(u);this._outputTextures[s]=c;var f=l.attachment||n.COLOR_ATTACHMENT0;"string"==typeof f&&(f=n[f]),o[f]=c}this._compositor.getFrameBuffer().bind(e);for(var f in o)this._compositor.getFrameBuffer().attach(o[f],f);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e.gl)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);for(var r in this.inputLinks){var i=this.inputLinks[r];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var n=this.outputs[e],r=n.parameters,i=n._parametersCopy;if(i||(i=n._parametersCopy={}),r)for(var a in r)"width"!==a&&"height"!==a&&(i[a]=r[a]);var o,s;return o=r.width instanceof Function?r.width.call(this,t):r.width,s=r.height instanceof Function?r.height.call(this,t):r.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t),i.width=o,i.height=s,i},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},setShader:function(e){var t=this.pass.material;t.shader.setFragment(e),t.attachShader(t.shader,!0)},shaderDefine:function(e,t){this.pass.material.shader.define("fragment",e,t)},shaderUndefine:function(e){this.pass.material.shader.undefine("fragment",e)},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,n){this.inputLinks[e]={node:t,pin:n},t.outputLinks[n]||(t.outputLinks[n]=[]),t.outputLinks[n].push({node:this,pin:e}),this.pass.material.shader.enableTexture(e)},clear:function(){i.a.prototype.clear.call(this),this.pass.material.shader.disableTexturesAll()},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var n=this.inputLinks[t];n.node.updateReference(n.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}});t.a=a},function(e,t,n){"use strict";function r(e){for(var t=new Uint8Array(e*e*4),n=0,r=new u.a,i=0;i<e;i++)for(var a=0;a<e;a++)r.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),t[n++]=255*(.5*r.x+.5),t[n++]=255*(.5*r.y+.5),t[n++]=0,t[n++]=255;return t}function i(e){return new l.a({pixels:r(e),wrapS:c.a.REPEAT,wrapT:c.a.REPEAT,width:e,height:e})}function a(e,t,n){var r=new Float32Array(3*e);t=t||0;for(var i=0;i<e;i++){var a=Object(p.a)(i+t,2)*(n?1:2)*Math.PI,o=Object(p.a)(i+t,3)*Math.PI,s=Math.random(),u=Math.cos(a)*Math.sin(o)*s,l=Math.cos(o)*s,c=Math.sin(a)*Math.sin(o)*s;r[3*i]=u,r[3*i+1]=l,r[3*i+2]=c}return r}function o(e){e=e||{},this._ssaoPass=new f.a({fragment:h.a.source("ecgl.ssao.estimate")}),this._blurPass=new f.a({fragment:h.a.source("ecgl.ssao.blur")}),this._framebuffer=new d.a,this._ssaoTexture=new l.a,this._blurTexture=new l.a,this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),null!=e.radius&&this.setParameter("radius",e.radius),null!=e.power&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.shader.disableTexture("normalTex"),this._blurPass.material.shader.disableTexture("normalTex")),this._blurPass.material.shader.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex)}var s=n(9),u=n(2),l=n(5),c=n(4),f=n(13),h=n(3),d=n(10),p=n(28),_=n(112);h.a.import(_.a),o.prototype.setDepthTexture=function(e){this._depthTex=e},o.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material.shader[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)},o.prototype.update=function(e,t,n){var r=e.getWidth(),i=e.getHeight(),a=this._ssaoPass,o=this._blurPass;a.setUniform("kernel",this._kernels[n%this._kernels.length]),a.setUniform("depthTex",this._depthTex),null!=this._normalTex&&a.setUniform("normalTex",this._normalTex),a.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var u=new s.a;s.a.transpose(u,t.worldTransform),a.setUniform("projection",t.projectionMatrix._array),a.setUniform("projectionInv",t.invProjectionMatrix._array),a.setUniform("viewInverseTranspose",u._array);var l=this._ssaoTexture,c=this._blurTexture;l.width=r,l.height=i,c.width=r,c.height=i,this._framebuffer.attach(l),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),a.render(e),o.setUniform("textureSize",[r,i]),this._framebuffer.attach(c),o.setUniform("direction",0),o.setUniform("ssaoTexture",l),o.render(e),this._framebuffer.attach(l),o.setUniform("direction",1),o.setUniform("ssaoTexture",c),o.render(e),this._framebuffer.unbind(e);var f=e.clearColor;e.gl.clearColor(f[0],f[1],f[2],f[3])},o.prototype.getTargetTexture=function(){return this._ssaoTexture},o.prototype.setParameter=function(e,t){"noiseTexSize"===e?this.setNoiseSize(t):"kernelSize"===e?this.setKernelSize(t):"intensity"===e?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)},o.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.shader.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=a(e,t*e,!!this._normalTex)},o.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=r(e),t.width=t.height=e,t.dirty()):(t=i(e),this._ssaoPass.setUniform("noiseTex",i(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])},o.prototype.dispose=function(e){this._targetTexture.dispose(e),this._ssaoTexture.dispose(e)},t.a=o},function(e,t,n){"use strict";t.a="@export ecgl.ssao.estimate\n\nuniform sampler2D depthTex;\n\nuniform sampler2D normalTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 1;\n\nuniform float bias: 0.01;\n\nuniform float intensity: 1.0;\n\nvarying vec2 v_Texcoord;\n\nfloat ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {\n float occlusion = 0.0;\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec3 samplePos = kernel[i];\n#ifdef NORMALTEX_ENABLED\n samplePos = kernelBasis * samplePos;\n#endif\n samplePos = samplePos * radius + originPos;\n\n vec4 texCoord = projection * vec4(samplePos, 1.0);\n texCoord.xy /= texCoord.w;\n\n vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\n\n float sampleDepth = depthTexel.r * 2.0 - 1.0;\n if (projection[3][3] == 0.0) {\n sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\n }\n else {\n sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];\n }\n \n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\n occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\n }\n#ifdef NORMALTEX_ENABLED\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\n#else\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n#endif\n return pow(occlusion, power);\n}\n\nvoid main()\n{\n\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n\n#ifdef NORMALTEX_ENABLED\n vec4 tex = texture2D(normalTex, v_Texcoord);\n if (dot(tex.rgb, tex.rgb) == 0.0) {\n gl_FragColor = vec4(1.0);\n return;\n }\n vec3 N = tex.rgb * 2.0 - 1.0;\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\n\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n vec3 T = normalize(rvec - N * dot(rvec, N));\n vec3 BT = normalize(cross(N, T));\n mat3 kernelBasis = mat3(T, BT, N);\n#else\n if (depthTexel.r > 0.99999) {\n gl_FragColor = vec4(1.0);\n return;\n }\n mat3 kernelBasis;\n#endif\n\n float z = depthTexel.r * 2.0 - 1.0;\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n\n vec3 position = p4.xyz / p4.w;\n\n float ao = ssaoEstimator(position, kernelBasis);\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\n gl_FragColor = vec4(vec3(ao), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n#define SHADER_NAME SSAO_BLUR\n\nuniform sampler2D ssaoTexture;\n\n#ifdef NORMALTEX_ENABLED\nuniform sampler2D normalTex;\n#endif\n\n#ifdef DEPTHTEX_ENABLED\nuniform sampler2D depthTex;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n#endif\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\nuniform int direction: 0.0;\n\n#ifdef DEPTHTEX_ENABLED\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(depthTex, v_Texcoord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n#endif\n\nvoid main()\n{\n @import qtek.compositor.kernel.gaussian_9\n\n vec2 off = vec2(0.0);\n if (direction == 0) {\n off[0] = blurSize / textureSize.x;\n }\n else {\n off[1] = blurSize / textureSize.y;\n }\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n#ifdef NORMALTEX_ENABLED\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\n#elif defined(DEPTHTEX_ENABLED)\n float centerDepth = getLinearDepth(v_Texcoord);\n#endif\n\n for (int i = 0; i < 9; i++) {\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 4.0) * off, vec2(0.0), vec2(1.0));\n\n#ifdef NORMALTEX_ENABLED\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\n float w = gaussianKernel[i] * clamp(dot(normal, centerNormal), 0.0, 1.0);\n#elif defined(DEPTHTEX_ENABLED)\n float d = getLinearDepth(coord);\n float w = gaussianKernel[i] * (1.0 - clamp(abs(centerDepth - d) / depthRange, 0.0, 1.0));\n#else\n float w = gaussianKernel[i];\n#endif\n\n weightAll += w;\n sum += texture2D(ssaoTexture, coord) * w;\n }\n\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\n}\n\n\n\n\n\n\n\n\n@end\n"},function(e,t,n){"use strict";function r(e){e=e||{},this._ssrPass=new s.a({fragment:u.a.source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new s.a({fragment:u.a.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new s.a({fragment:u.a.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.material.shader.define("fragment","VERTICAL"),this._blurPass2.material.shader.define("fragment","BLEND"),this._texture1=new a.a({type:o.a.HALF_FLOAT}),this._texture2=new a.a({type:o.a.HALF_FLOAT}),this._frameBuffer=new l.a}var i=n(9),a=(n(2),n(5)),o=n(4),s=n(13),u=n(3),l=n(10),c=(n(28),n(114));u.a.import(c.a),r.prototype.update=function(e,t,n,r){var a=e.getWidth(),o=e.getHeight(),s=this._texture1,u=this._texture2;s.width=u.width=a,s.height=u.height=o;var l=this._frameBuffer,c=this._ssrPass,f=this._blurPass1,h=this._blurPass2,d=new i.a;i.a.transpose(d,t.worldTransform),c.setUniform("sourceTexture",n),c.setUniform("projection",t.projectionMatrix._array),c.setUniform("projectionInv",t.invProjectionMatrix._array),c.setUniform("viewInverseTranspose",d._array),c.setUniform("nearZ",t.near),c.setUniform("jitterOffset",r/30);var p=[a,o];f.setUniform("textureSize",p),h.setUniform("textureSize",p),h.setUniform("sourceTexture",n),l.attach(u),l.bind(e),c.render(e),l.attach(s),f.setUniform("texture",u),f.render(e),l.attach(u),h.setUniform("texture",s),h.render(e),l.unbind(e)},r.prototype.getTargetTexture=function(){return this._texture2},r.prototype.setParameter=function(e,t){"maxIteration"===e?this._ssrPass.material.shader.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)},r.prototype.dispose=function(e){this._texture1.dispose(e),this._texture2.dispose(e),this._frameBuffer.dispose(e)},t.a=r},function(e,t,n){"use strict";t.a="@export ecgl.ssr.main\n\n#define MAX_ITERATION 20;\n\nuniform sampler2D sourceTexture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\n\nuniform mat4 projection;\nuniform mat4 projectionInv;\nuniform mat4 viewInverseTranspose;\n\nuniform float maxRayDistance: 50;\n\nuniform float pixelStride: 16;\nuniform float pixelStrideZCutoff: 50; \nuniform float screenEdgeFadeStart: 0.9; \nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 10;\n\nuniform float nearZ;\nuniform vec2 viewportSize : VIEWPORT_SIZE;\n\nuniform float jitterOffset: 0;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_DECODE\n@import qtek.util.decode_float\n#endif\n\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\n{\n vec4 depthTexel = texture2D(depthTexture, uv);\n return depthTexel.r * 2.0 - 1.0;\n}\n\nfloat linearDepth(float depth)\n{\n if (projection[3][3] == 0.0) {\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n }\n else {\n return (depth - projection[3][2]) / projection[2][2];\n }\n}\n\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\n{\n if (rayZFar > rayZNear)\n {\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\n }\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\n}\n\n\nbool traceScreenSpaceRay(\n vec3 rayOrigin, vec3 rayDir, float jitter,\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\n)\n{\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\n\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\n\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\n vec4 H1 = projection * vec4(rayEnd, 1.0);\n\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\n\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\n\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\n\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\n vec2 delta = P1 - P0;\n\n bool permute = false;\n if (abs(delta.x) < abs(delta.y)) {\n permute = true;\n delta = delta.yx;\n P0 = P0.yx;\n P1 = P1.yx;\n }\n float stepDir = sign(delta.x);\n float invdx = stepDir / delta.x;\n\n vec3 dQ = (Q1 - Q0) * invdx;\n float dk = (k1 - k0) * invdx;\n\n vec2 dP = vec2(stepDir, delta.y * invdx);\n\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\n float pixStride = 1.0 + strideScaler * pixelStride;\n\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\n\n vec4 pqk = vec4(P0, Q0.z, k0);\n vec4 dPQK = vec4(dP, dQ.z, dk);\n\n pqk += dPQK * jitter;\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n float rayZNear;\n\n bool intersect = false;\n\n vec2 texelSize = 1.0 / viewportSize;\n\n iterationCount = 0.0;\n\n for (int i = 0; i < MAX_ITERATION; i++)\n {\n pqk += dPQK;\n\n rayZNear = rayZFar;\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n\n hitPixel = permute ? pqk.yx : pqk.xy;\n hitPixel *= texelSize;\n\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\n\n iterationCount += 1.0;\n\n if (intersect) {\n break;\n }\n }\n\n\n Q0.xy += dQ.xy * iterationCount;\n Q0.z = pqk.z;\n hitPoint = Q0 / pqk.w;\n\n return intersect;\n}\n\nfloat calculateAlpha(\n float iterationCount, float reflectivity,\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\n)\n{\n float alpha = clamp(reflectivity, 0.0, 1.0);\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\n\n float _eyeFadeStart = eyeFadeStart;\n float _eyeFadeEnd = eyeFadeEnd;\n if (_eyeFadeStart > _eyeFadeEnd) {\n float tmp = _eyeFadeEnd;\n _eyeFadeEnd = _eyeFadeStart;\n _eyeFadeStart = tmp;\n }\n\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\n\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\n\n return alpha;\n}\n\n@import qtek.util.rand\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\n\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n\n float g = normalAndGloss.a;\n if (g <= minGlossiness) {\n discard;\n }\n\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\n\n vec3 N = normalAndGloss.rgb * 2.0 - 1.0;\n N = normalize((viewInverseTranspose * vec4(N, 0.0)).xyz);\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\n vec4 pos = projectionInv * projectedPos;\n vec3 rayOrigin = pos.xyz / pos.w;\n\n vec3 rayDir = normalize(reflect(normalize(rayOrigin), N));\n vec2 hitPixel;\n vec3 hitPoint;\n float iterationCount;\n\n vec2 uv2 = v_Texcoord * viewportSize;\n float jitter = rand(fract(v_Texcoord + jitterOffset));\n\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\n\n float dist = distance(rayOrigin, hitPoint);\n\n float alpha = calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir) * float(intersect);\n\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\n hitNormal = normalize((viewInverseTranspose * vec4(hitNormal, 0.0)).xyz);\n\n if (dot(hitNormal, rayDir) >= 0.0) {\n discard;\n }\n\n \n if (!intersect) {\n discard;\n }\n vec4 color = decodeHDR(texture2D(sourceTexture, hitPixel));\n gl_FragColor = encodeHDR(vec4(color.rgb * alpha, color.a));\n}\n@end\n\n@export ecgl.ssr.blur\n\nuniform sampler2D texture;\nuniform sampler2D gBufferTexture1;\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 4.0;\n\n#ifdef BLEND\nuniform sampler2D sourceTexture;\n#endif\n\n@import qtek.util.rgbm\n\n\nvoid main()\n{\n @import qtek.compositor.kernel.gaussian_13\n\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\n float g = centerNTexel.a;\n float maxBlurSize = clamp(1.0 - g + 0.1, 0.0, 1.0) * blurSize;\n#ifdef VERTICAL\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\n#else\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\n#endif\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\n for (int i = 0; i < 13; i++) {\n vec2 coord = clamp((float(i) - 6.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\n float w = gaussianKernel[i] * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\n weightAll += w;\n sum += decodeHDR(texture2D(texture, coord)) * w;\n }\n\n#ifdef BLEND\n gl_FragColor = encodeHDR(\n sum / weightAll + decodeHDR(texture2D(sourceTexture, v_Texcoord))\n );\n#else\n gl_FragColor = encodeHDR(sum / weightAll);\n#endif\n}\n\n@end"},function(e,t,n){"use strict";t.a=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925]},function(e,t,n){"use strict";function r(e){var t=document.createElement("canvas");t.width=t.height=1;var n=t.getContext("2d");return n.fillStyle=e||"#000",n.fillRect(0,0,1,1),t}function i(e,t,n,r,i){var a=e.gl;t.setUniform(a,"1i",n,i),a.activeTexture(a.TEXTURE0+i),r.isRenderable()?r.bind(e):r.unbind(e)}function a(e,t,n){var r,a,o;return function(s,u,l){if(!o||o.__standardMat!==s.__standardMat){var c,f,h,d=s.__standardMat,p=s.material,_=d.shader.isDefined("fragment","USE_ROUGHNESS");_?(c=1-d.get("roughness"),f=d.get("roughnessMap"),h=d.shader.getDefine("fragment","ROUGHNESS_CHANNEL")):(c=d.get("glossiness"),f=d.get("glossinessMap"),h=d.shader.getDefine("fragment","GLOSSINESS_CHANNEL"));var m=!!f,g=d.get("normalMap")||t,v=d.get("uvRepeat"),y=d.get("uvOffset");f=f||n,u!==p?(p.set("glossiness",c),p.set("normalMap",g),p.set("roughGlossMap",f),p.set("useRoughGlossMap",+m),p.set("useRoughness",+_),p.set("roughGlossChannel",+h||0),p.set("uvRepeat",v),p.set("uvOffset",y)):(p.shader.setUniform(e,"1f","glossiness",c),r!==g&&i(this,p.shader,"normalMap",g,0),a!==f&&i(this,p.shader,"roughGlossMap",f,1),p.shader.setUniform(e,"1i","useRoughGlossMap",+m),p.shader.setUniform(e,"1i","useRoughness",+_),p.shader.setUniform(e,"1i","roughGlossChannel",+h||0),null!=v&&p.shader.setUniform(e,"2f","uvRepeat",v),null!=y&&p.shader.setUniform(e,"2f","uvOffset",y)),r=g,a=f,o=s}}}function o(e,t,n){var r,a,o;return function(s,u,l){if(!a||a.__standardMat!==s.__standardMat){var c=s.__standardMat,f=s.material,h=c.get("color"),d=c.get("metalness"),p=c.get("diffuseMap"),_=c.get("metalnessMap"),m=c.get("uvRepeat"),g=c.get("uvOffset"),v=!!_;p=p||t,_=_||n,u!==f?(f.set("color",h),f.set("metalness",d),f.set("diffuseMap",p),f.set("metalnessMap",_),f.set("useMetalnessMap",+v),f.set("uvRepeat",m),f.set("uvOffset",g),f.set("linear",+c.linear)):(f.shader.setUniform(e,"1f","metalness",d),f.shader.setUniform(e,"3f","color",h),r!==p&&i(this,f.shader,"diffuseMap",p,0),o!==_&&i(this,f.shader,"metalnessMap",_,1),f.shader.setUniform(e,"1i","useMetalnessMap",+v),f.shader.setUniform(e,"2f","uvRepeat",m),f.shader.setUniform(e,"2f","uvOffset",g),f.shader.setUniform(e,"1i","linear",+c.linear)),r=p,o=_,a=s}}}var s=n(1),u=n(5),l=n(4),c=n(8),f=n(10),h=n(3),d=n(30),p=n(13),_=n(9),m=n(61),g=n(117);h.a.import(m.a),h.a.import(g.a);var v=s.a.extend(function(){return{enableTargetTexture1:!0,enableTargetTexture2:!0,enableTargetTexture3:!0,_renderQueue:[],_gBufferTex1:new u.a({minFilter:l.a.NEAREST,magFilter:l.a.NEAREST,type:l.a.HALF_FLOAT}),_gBufferTex2:new u.a({minFilter:l.a.NEAREST,magFilter:l.a.NEAREST,format:l.a.DEPTH_STENCIL,type:l.a.UNSIGNED_INT_24_8_WEBGL}),_gBufferTex3:new u.a({minFilter:l.a.NEAREST,magFilter:l.a.NEAREST}),_defaultNormalMap:new u.a({image:r("#000")}),_defaultRoughnessMap:new u.a({image:r("#fff")}),_defaultMetalnessMap:new u.a({image:r("#fff")}),_defaultDiffuseMap:new u.a({image:r("#fff")}),_frameBuffer:new f.a,_gBufferMaterials:{},_debugPass:new p.a({fragment:h.a.source("qtek.deferred.gbuffer.debug")})}},{resize:function(e,t){this._gBufferTex1.width===e&&this._gBufferTex1.height===t||(this._gBufferTex1.width=e,this._gBufferTex1.height=t,this._gBufferTex2.width=e,this._gBufferTex2.height=t,this._gBufferTex3.width=e,this._gBufferTex3.height=t)},setViewport:function(e,t,n,r,i){var a;a="object"==typeof e?e:{x:e,y:t,width:n,height:r,devicePixelRatio:i||1},this._frameBuffer.viewport=a},getViewport:function(){return this._frameBuffer.viewport?this._frameBuffer.viewport:{x:0,y:0,width:this._gBufferTex1.width,height:this._gBufferTex1.height,devicePixelRatio:1}},update:function(e,t,n){for(var r=e.gl,i=this._frameBuffer,s=i.viewport,u=t.opaqueQueue,l=t.transparentQueue,c=e.beforeRenderObject,f=0;f<u.length;f++){var h=u[f].material;h.updateShader&&h.updateShader(e)}for(var f=0;f<l.length;f++){var h=l[f].material;h.updateShader&&h.updateShader(e)}u.sort(d.a.opaqueSortFunc),l.sort(d.a.transparentSortFunc);for(var p=0,_=this._renderQueue,f=0;f<u.length;f++)u[f].ignoreGBuffer||(_[p++]=u[f]);for(var f=0;f<l.length;f++)l[f].ignoreGBuffer||(_[p++]=l[f]);_.length=p,r.clearColor(0,0,0,0),r.depthMask(!0),r.colorMask(!0,!0,!0,!0),r.disable(r.BLEND);var m=this.enableTargetTexture1,g=this.enableTargetTexture2,v=this.enableTargetTexture3;if(m||v||(console.warn("Can't disable targetTexture1 targetTexture2 both"),m=!0),g&&i.attach(this._gBufferTex2,e.gl.DEPTH_STENCIL_ATTACHMENT),e.bindSceneRendering(t),m){if(i.attach(this._gBufferTex1),i.bind(e),s){var y=s.devicePixelRatio;r.enable(r.SCISSOR_TEST),r.scissor(s.x*y,s.y*y,s.width*y,s.height*y)}r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),s&&r.disable(r.SCISSOR_TEST),this._resetGBufferMaterials(),this._replaceGBufferMat(_,1),e.beforeRenderObject=a(r,this._defaultNormalMap,this._defaultRoughnessMap),e.renderQueue(_,n)}if(v){if(i.attach(this._gBufferTex3),i.bind(e),s){var y=s.devicePixelRatio;r.enable(r.SCISSOR_TEST),r.scissor(s.x*y,s.y*y,s.width*y,s.height*y)}r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),s&&r.disable(r.SCISSOR_TEST),this._replaceGBufferMat(_,2),e.beforeRenderObject=o(r,this._defaultDiffuseMap,this._defaultMetalnessMap),e.renderQueue(_,n)}e.bindSceneRendering(null),e.beforeRenderObject=c,this._cleanGBufferMaterials(e),this._restoreMaterial(_),i.unbind(e)},renderDebug:function(e,t,n,r){var i={normal:0,depth:1,position:2,glossiness:3,metalness:4,albedo:5};null==i[n]&&(console.warn('Unkown type "'+n+'"'),n="normal"),e.saveClear(),e.saveViewport(),e.clearBit=e.gl.DEPTH_BUFFER_BIT,r&&e.setViewport(r);var a=new _.a;_.a.multiply(a,t.worldTransform,t.invProjectionMatrix);var o=this._debugPass;o.setUniform("viewportSize",[e.getWidth(),e.getHeight()]),o.setUniform("gBufferTexture1",this._gBufferTex1),o.setUniform("gBufferTexture2",this._gBufferTex2),o.setUniform("gBufferTexture3",this._gBufferTex3),o.setUniform("debug",i[n]),o.setUniform("viewProjectionInv",a._array),o.render(e),e.restoreViewport(),e.restoreClear()},getTargetTexture1:function(){return this._gBufferTex1},getTargetTexture2:function(){return this._gBufferTex2},getTargetTexture3:function(){return this._gBufferTex3},_getMaterial:function(e){var t=this._gBufferMaterials,n=t[e];if(!n){var r=new c.a({shader:new h.a({vertex:h.a.source("qtek.deferred.gbuffer.vertex"),fragment:h.a.source("qtek.deferred.gbuffer1.fragment")})}),i=new c.a({shader:new h.a({vertex:h.a.source("qtek.deferred.gbuffer.vertex"),fragment:h.a.source("qtek.deferred.gbuffer2.fragment")})});r.shader.define("vertex","FIRST_PASS"),e>0&&(r.shader.define("vertex","SKINNING"),r.shader.define("vertex","JOINT_COUNT",e),i.shader.define("vertex","SKINNING"),i.shader.define("vertex","JOINT_COUNT",e)),n={material1:r,material2:i},t[e]=n}return n.used=!0,n},_resetGBufferMaterials:function(){for(var e in this._gBufferMaterials)this._gBufferMaterials[e].used=!1},_cleanGBufferMaterials:function(e){for(var t in this._gBufferMaterials){var n=this._gBufferMaterials[t];n.used||(n.material1.dispose(e),n.material2.dispose(e))}},_replaceGBufferMat:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];1===t&&(r.__standardMat=r.material);var i=this._getMaterial(r.joints?r.joints.length:0,!1);r.material=1===t?i.material1:i.material2}},_restoreMaterial:function(e){for(var t=0;t<e.length;t++){var n=e[t];n.__standardMat&&(n.material=n.__standardMat)}},dispose:function(e){for(var t in this._gBufferMaterials){var n=this._gBufferMaterials[t];n.material1.dispose(e),n.material2.dispose(e)}}});t.a=v},function(e,t,n){"use strict";t.a="@export qtek.deferred.chunk.light_head\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform vec2 windowSize: WINDOW_SIZE;\nuniform vec4 viewport: VIEWPORT;\nuniform mat4 viewProjectionInv;\n#ifdef DEPTH_ENCODED\n@import qtek.util.decode_float\n#endif\n@end\n@export qtek.deferred.chunk.gbuffer_read\n    vec2 uv = gl_FragCoord.xy / windowSize;\n    vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\n    vec4 texel1 = texture2D(gBufferTexture1, uv);\n    vec4 texel3 = texture2D(gBufferTexture3, uv);\n    if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n    float glossiness = texel1.a;\n    float metalness = texel3.a;\n    vec3 N = texel1.rgb * 2.0 - 1.0;\n    float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\n    vec2 xy = uv2 * 2.0 - 1.0;\n    vec4 projectedPos = vec4(xy, z, 1.0);\n    vec4 p4 = viewProjectionInv * projectedPos;\n    vec3 position = p4.xyz / p4.w;\n    vec3 albedo = texel3.rgb;\n    vec3 diffuseColor = albedo * (1.0 - metalness);\n    vec3 specularColor = mix(vec3(0.04), albedo, metalness);\n@end\n@export qtek.deferred.chunk.light_equation\nfloat D_Phong(in float g, in float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(in float g, in float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (3.1415926 * tmp * tmp);\n}\nvec3 F_Schlick(in float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nvec3 lightEquation(\n    in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\n    in float ndl, in float ndh, in float ndv, in float g\n)\n{\n    return ndl * lightColor\n        * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\n}\n@end"},function(e,t,n){"use strict";var r=n(14),i=n(119),a=r.a.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){this._brdfLookup||(this._normalDistribution=i.a.generateNormalDistribution(),this._brdfLookup=i.a.integrateBRDF(e,this._normalDistribution));var n=this.cubemap;if(!n.__prefiltered){var r=i.a.prefilterEnvironmentMap(e,n,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=r.environmentMap,this.cubemap.__prefiltered=!0,n.dispose(e)}},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}});t.a=a},function(e,t,n){"use strict";var r=n(5),i=n(19),a=n(4),o=n(10),s=n(13),u=n(8),l=n(3),c=n(36),f=n(17),h=n(34),d=n(12),p=n(33),_=n(121),m=n(122),g={},v=["px","nx","py","ny","pz","nz"];g.prefilterEnvironmentMap=function(e,t,n,s,_){_&&s||(s=g.generateNormalDistribution(),_=g.integrateBRDF(e,s)),n=n||{};var y=n.width||64,x=n.height||64,T=n.type||t.type,E=new i.a({width:y,height:x,type:T,flipY:!1,mipmaps:[]});E.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var b=Math.min(y,x),S=Math.log(b)/Math.log(2)+1,A=new u.a({shader:new l.a({vertex:l.a.source("qtek.skybox.vertex"),fragment:m.a})});A.set("normalDistribution",s),n.encodeRGBM&&A.shader.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&A.shader.define("fragment","RGBM_DECODE");var w,N=new f.a;if(t instanceof r.a){var C=new i.a({width:y,height:x,type:T===a.a.FLOAT?a.a.HALF_FLOAT:T});p.a.panoramaToCubeMap(e,t,C,{encodeRGBM:n.decodeRGBM}),t=C}w=new c.a({scene:N,material:A}),w.material.set("environmentMap",t);var R=new h.a({texture:E});n.encodeRGBM&&(T=E.type=a.a.UNSIGNED_BYTE);for(var M=new r.a({width:y,height:x,type:T}),L=new o.a({depthBuffer:!1}),P=d.a[T===a.a.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],D=0;D<S;D++){E.mipmaps[D]={pixels:{}},w.material.set("roughness",D/(v.length-1));for(var I=M.width,O=2*Math.atan(I/(I-.5))/Math.PI*180,F=0;F<v.length;F++){var k=new P(M.width*M.height*4);L.attach(M),L.bind(e);var B=R.getCamera(v[F]);B.fov=O,e.render(N,B),e.gl.readPixels(0,0,M.width,M.height,a.a.RGBA,T,k),L.unbind(e),E.mipmaps[D].pixels[v[F]]=k}M.width/=2,M.height/=2,M.dirty()}return L.dispose(e),M.dispose(e),w.dispose(e),s.dispose(e),{environmentMap:E,brdfLookup:_,normalDistribution:s,maxMipmapLevel:S}},g.integrateBRDF=function(e,t){t=t||g.generateNormalDistribution();var n=new o.a({depthBuffer:!1}),i=new s.a({fragment:_.a}),u=new r.a({width:512,height:256,type:a.a.HALF_FLOAT,minFilter:a.a.NEAREST,magFilter:a.a.NEAREST,useMipmap:!1});return i.setUniform("normalDistribution",t),i.setUniform("viewportSize",[512,256]),i.attachOutput(u),i.render(e,n),n.dispose(e),u},g.generateNormalDistribution=function(e,t){for(var e=e||256,t=t||1024,n=new r.a({width:e,height:t,type:a.a.FLOAT,minFilter:a.a.NEAREST,magFilter:a.a.NEAREST,useMipmap:!1}),i=new Float32Array(t*e*4),o=0;o<t;o++){var s=o/t,u=(o<<16|o>>>16)>>>0;u=((1431655765&u)<<1|(2863311530&u)>>>1)>>>0,u=((858993459&u)<<2|(3435973836&u)>>>2)>>>0,u=((252645135&u)<<4|(4042322160&u)>>>4)>>>0,u=(((16711935&u)<<8|(4278255360&u)>>>8)>>>0)/4294967296;for(var l=0;l<e;l++){var c=l/e,f=c*c,h=2*Math.PI*s,d=Math.sqrt((1-u)/(1+(f*f-1)*u)),p=Math.sqrt(1-d*d),_=4*(o*e+l);i[_]=p*Math.cos(h),i[_+1]=p*Math.sin(h),i[_+2]=d,i[_+3]=1}}return n.pixels=i,n},t.a=g},function(e,t,n){"use strict";function r(e,t,n){c.identity();var r=new a.a({widthSegments:t,heightSegments:n});switch(e){case"px":o.a.translate(c,c,s.a.POSITIVE_X),o.a.rotateY(c,c,Math.PI/2);break;case"nx":o.a.translate(c,c,s.a.NEGATIVE_X),o.a.rotateY(c,c,-Math.PI/2);break;case"py":o.a.translate(c,c,s.a.POSITIVE_Y),o.a.rotateX(c,c,-Math.PI/2);break;case"ny":o.a.translate(c,c,s.a.NEGATIVE_Y),o.a.rotateX(c,c,Math.PI/2);break;case"pz":o.a.translate(c,c,s.a.POSITIVE_Z);break;case"nz":o.a.translate(c,c,s.a.NEGATIVE_Z),o.a.rotateY(c,c,Math.PI)}return r.applyTransform(c),r}var i=n(18),a=n(32),o=n(9),s=n(2),u=n(7),l=n(12),c=new o.a,f=i.a.extend({widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var e={px:r("px",this.depthSegments,this.heightSegments),nx:r("nx",this.depthSegments,this.heightSegments),py:r("py",this.widthSegments,this.depthSegments),ny:r("ny",this.widthSegments,this.depthSegments),pz:r("pz",this.widthSegments,this.heightSegments),nz:r("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],n=0,i=0;for(var a in e)n+=e[a].vertexCount,i+=e[a].indices.length;for(var o=0;o<t.length;o++)this.attributes[t[o]].init(n);this.indices=new l.a.Uint16Array(i);var s=0,c=0;for(var a in e){for(var f=e[a],o=0;o<t.length;o++)for(var h=t[o],d=f.attributes[h].value,p=f.attributes[h].size,_="normal"===h,m=0;m<d.length;m++){var g=d[m];this.inside&&_&&(g=-g),this.attributes[h].value[m+p*c]=g}for(var m=0;m<f.indices.length;m++)this.indices[m+s]=c+f.indices[m];s+=f.indices.length,c+=f.vertexCount}this.boundingBox=new u.a,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});t.a=f},function(e,t,n){"use strict";t.a="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n    float k = roughness * roughness / 2.0;\n    float G1V = NoV / (NoV * (1.0 - k) + k);\n    float G1L = NoL / (NoL * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / viewportSize;\n    float NoV = uv.x;\n    float roughness = uv.y;\n    vec3 V;\n    V.x = sqrt(1.0 - NoV * NoV);\n    V.y = 0.0;\n    V.z = NoV;\n    float A = 0.0;\n    float B = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(L.z, 0.0, 1.0);\n        float NoH = clamp(H.z, 0.0, 1.0);\n        float VoH = clamp(dot(V, H), 0.0, 1.0);\n        if (NoL > 0.0) {\n            float G = G_Smith(roughness, NoV, NoL);\n            float G_Vis = G * VoH / (NoH * NoV);\n            float Fc = pow(1.0 - VoH, 5.0);\n            A += (1.0 - Fc) * G_Vis;\n            B += Fc * G_Vis;\n        }\n    }\n    gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"},function(e,t,n){"use strict";t.a="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\nconst float fSampleNumber = float(SAMPLE_NUMBER);\n@import qtek.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nvoid main() {\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(v_WorldPosition - eyePos);\n    vec3 N = V;\n    vec3 R = V;\n    vec3 prefilteredColor = vec3(0.0);\n    float totalWeight = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(dot(N, L), 0.0, 1.0);\n        if (NoL > 0.0) {\n            prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n            totalWeight += NoL;\n        }\n    }\n    gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"},function(e,t,n){"use strict";var r=n(14),i=n(12),a=r.a.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new i.a.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,n=0;n<e.coefficients.length;n++)t[n]=e.coefficients[n];return t}}}});t.a=a},function(e,t,n){"use strict";function r(e,t){var n=e[0],r=e[1],i=e[2];return 0===t?1:1===t?n:2===t?r:3===t?i:4===t?n*i:5===t?r*i:6===t?n*r:7===t?3*i*i-1:n*n-r*r}function i(e,t,n,i){for(var a=new u.a.Float32Array(27),o=_.create(),s=_.create(),l=_.create(),c=0;c<9;c++){for(var f=_.create(),h=0;h<g.length;h++){for(var d=t[g[h]],p=_.create(),m=0,y=0,x=v[g[h]],T=0;T<i;T++)for(var E=0;E<n;E++){o[0]=E/(n-1)*2-1,o[1]=T/(i-1)*2-1,o[2]=-1,_.normalize(o,o),l[0]=o[x[0]]*x[3],l[1]=o[x[1]]*x[4],l[2]=o[x[2]]*x[5],s[0]=d[y++]/255,s[1]=d[y++]/255,s[2]=d[y++]/255;var b=d[y++]/255*51.5;s[0]*=b,s[1]*=b,s[2]*=b,_.scaleAndAdd(p,p,s,r(l,c)*-o[2]),m+=-o[2]}_.scaleAndAdd(f,f,p,1/m)}a[3*c]=f[0]/6,a[3*c+1]=f[1]/6,a[3*c+2]=f[2]/6}return a}var a=n(4),o=n(10),s=n(5),u=(n(13),n(12)),l=n(36),c=n(35),f=n(34),h=n(17),d=n(0),p=n.n(d),_=(n(125),p.a.vec3),m={},g=["px","nx","py","ny","pz","nz"],v={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};m.projectEnvironmentMap=function(e,t,n){n=n||{},n.lod=n.lod||0;var r,u=new h.a,d=64;t instanceof s.a?r=new c.a({scene:u,environmentMap:t}):(d=t.image&&t.image.px?t.image.px.width:t.width,r=new l.a({scene:u,environmentMap:t}));var p=Math.ceil(d/Math.pow(2,n.lod)),_=Math.ceil(d/Math.pow(2,n.lod)),m=new s.a({width:p,height:_}),v=new o.a;r.material.shader.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&r.material.shader.define("fragment","RGBM_DECODE"),r.material.set("lod",n.lod);for(var y=new f.a({texture:m}),x={},T=0;T<g.length;T++){x[g[T]]=new Uint8Array(p*_*4);var E=y.getCamera(g[T]);E.fov=90,v.attach(m),v.bind(e),e.render(u,E),e.gl.readPixels(0,0,p,_,a.a.RGBA,a.a.UNSIGNED_BYTE,x[g[T]]),v.unbind(e)}return r.dispose(e),v.dispose(e),m.dispose(e),i(e,x,p,_)},t.a=m},function(e,t,n){"use strict";t.a="uniform samplerCube environmentMap;\nvarying vec2 v_Texcoord;\n#define TEXTURE_SIZE 16\nmat3 front = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  1.0,  0.0,\n     0.0,  0.0,  1.0\n);\nmat3 back = mat3(\n    -1.0,  0.0,  0.0,\n     0.0,  1.0,  0.0,\n     0.0,  0.0, -1.0\n);\nmat3 left = mat3(\n     0.0,  0.0, -1.0,\n     0.0,  1.0,  0.0,\n     1.0,  0.0,  0.0\n);\nmat3 right = mat3(\n     0.0,  0.0,  1.0,\n     0.0,  1.0,  0.0,\n    -1.0,  0.0,  0.0\n);\nmat3 up = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  0.0,  1.0,\n     0.0, -1.0,  0.0\n);\nmat3 down = mat3(\n     1.0,  0.0,  0.0,\n     0.0,  0.0, -1.0,\n     0.0,  1.0,  0.0\n);\nfloat harmonics(vec3 normal){\n    int index = int(gl_FragCoord.x);\n    float x = normal.x;\n    float y = normal.y;\n    float z = normal.z;\n    if(index==0){\n        return 1.0;\n    }\n    else if(index==1){\n        return x;\n    }\n    else if(index==2){\n        return y;\n    }\n    else if(index==3){\n        return z;\n    }\n    else if(index==4){\n        return x*z;\n    }\n    else if(index==5){\n        return y*z;\n    }\n    else if(index==6){\n        return x*y;\n    }\n    else if(index==7){\n        return 3.0*z*z - 1.0;\n    }\n    else{\n        return x*x - y*y;\n    }\n}\nvec3 sampleSide(mat3 rot)\n{\n    vec3 result = vec3(0.0);\n    float divider = 0.0;\n    for (int i = 0; i < TEXTURE_SIZE * TEXTURE_SIZE; i++) {\n        float x = mod(float(i), float(TEXTURE_SIZE));\n        float y = float(i / TEXTURE_SIZE);\n        vec2 sidecoord = ((vec2(x, y) + vec2(0.5, 0.5)) / vec2(TEXTURE_SIZE)) * 2.0 - 1.0;\n        vec3 normal = normalize(vec3(sidecoord, -1.0));\n        vec3 fetchNormal = rot * normal;\n        vec3 texel = textureCube(environmentMap, fetchNormal).rgb;\n        result += harmonics(fetchNormal) * texel * -normal.z;\n        divider += -normal.z;\n    }\n    return result / divider;\n}\nvoid main()\n{\n    vec3 result = (\n        sampleSide(front) +\n        sampleSide(back) +\n        sampleSide(left) +\n        sampleSide(right) +\n        sampleSide(up) +\n        sampleSide(down)\n    ) / 6.0;\n    gl_FragColor = vec4(result, 1.0);\n}"},function(e,t,n){function r(e){return e=Math.round(e),e<0?0:e>255?255:e}function i(e){return e=Math.round(e),e<0?0:e>360?360:e}function a(e){return e<0?0:e>1?1:e}function o(e){return r(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100*255:parseInt(e,10))}function s(e){return a(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100:parseFloat(e))}function u(e,t,n){return n<0?n+=1:n>1&&(n-=1),6*n<1?e+(t-e)*n*6:2*n<1?t:3*n<2?e+(t-e)*(2/3-n)*6:e}function l(e,t,n){return e+(t-e)*n}function c(e,t,n,r,i){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e}function f(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function h(e,t){w&&f(w,t),w=A.put(e,w||t.slice())}function d(e,t){if(e){t=t||[];var n=A.get(e);if(n)return f(t,n);e+="";var r=e.replace(/ /g,"").toLowerCase();if(r in S)return f(t,S[r]),h(e,t),t;if("#"!==r.charAt(0)){var i=r.indexOf("("),a=r.indexOf(")");if(-1!==i&&a+1===r.length){var u=r.substr(0,i),l=r.substr(i+1,a-(i+1)).split(","),d=1;switch(u){case"rgba":if(4!==l.length)return void c(t,0,0,0,1);d=s(l.pop());case"rgb":return 3!==l.length?void c(t,0,0,0,1):(c(t,o(l[0]),o(l[1]),o(l[2]),d),h(e,t),t);case"hsla":return 4!==l.length?void c(t,0,0,0,1):(l[3]=s(l[3]),p(l,t),h(e,t),t);case"hsl":return 3!==l.length?void c(t,0,0,0,1):(p(l,t),h(e,t),t);default:return}}c(t,0,0,0,1)}else{if(4===r.length){var _=parseInt(r.substr(1),16);return _>=0&&_<=4095?(c(t,(3840&_)>>4|(3840&_)>>8,240&_|(240&_)>>4,15&_|(15&_)<<4,1),h(e,t),t):void c(t,0,0,0,1)}if(7===r.length){var _=parseInt(r.substr(1),16);return _>=0&&_<=16777215?(c(t,(16711680&_)>>16,(65280&_)>>8,255&_,1),h(e,t),t):void c(t,0,0,0,1)}}}}function p(e,t){var n=(parseFloat(e[0])%360+360)%360/360,i=s(e[1]),a=s(e[2]),o=a<=.5?a*(i+1):a+i-a*i,l=2*a-o;return t=t||[],c(t,r(255*u(l,o,n+1/3)),r(255*u(l,o,n)),r(255*u(l,o,n-1/3)),1),4===e.length&&(t[3]=e[3]),t}function _(e){if(e){var t,n,r=e[0]/255,i=e[1]/255,a=e[2]/255,o=Math.min(r,i,a),s=Math.max(r,i,a),u=s-o,l=(s+o)/2;if(0===u)t=0,n=0;else{n=l<.5?u/(s+o):u/(2-s-o);var c=((s-r)/6+u/2)/u,f=((s-i)/6+u/2)/u,h=((s-a)/6+u/2)/u;r===s?t=h-f:i===s?t=1/3+c-h:a===s&&(t=2/3+f-c),t<0&&(t+=1),t>1&&(t-=1)}var d=[360*t,n,l];return null!=e[3]&&d.push(e[3]),d}}function m(e,t){var n=d(e);if(n){for(var r=0;r<3;r++)n[r]=t<0?n[r]*(1-t)|0:(255-n[r])*t+n[r]|0;return E(n,4===n.length?"rgba":"rgb")}}function g(e,t){var n=d(e);if(n)return((1<<24)+(n[0]<<16)+(n[1]<<8)+ +n[2]).toString(16).slice(1)}function v(e,t,n){if(t&&t.length&&e>=0&&e<=1){n=n||[];var i=e*(t.length-1),o=Math.floor(i),s=Math.ceil(i),u=t[o],c=t[s],f=i-o;return n[0]=r(l(u[0],c[0],f)),n[1]=r(l(u[1],c[1],f)),n[2]=r(l(u[2],c[2],f)),n[3]=a(l(u[3],c[3],f)),n}}function y(e,t,n){if(t&&t.length&&e>=0&&e<=1){var i=e*(t.length-1),o=Math.floor(i),s=Math.ceil(i),u=d(t[o]),c=d(t[s]),f=i-o,h=E([r(l(u[0],c[0],f)),r(l(u[1],c[1],f)),r(l(u[2],c[2],f)),a(l(u[3],c[3],f))],"rgba");return n?{color:h,leftIndex:o,rightIndex:s,value:i}:h}}function x(e,t,n,r){if(e=d(e))return e=_(e),null!=t&&(e[0]=i(t)),null!=n&&(e[1]=s(n)),null!=r&&(e[2]=s(r)),E(p(e),"rgba")}function T(e,t){if((e=d(e))&&null!=t)return e[3]=a(t),E(e,"rgba")}function E(e,t){if(e&&e.length){var n=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(n+=","+e[3]),t+"("+n+")"}}var b=n(62),S={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},A=new b(20),w=null;e.exports={parse:d,lift:m,toHex:g,fastMapToColor:v,mapToColor:y,modifyHSL:x,modifyAlpha:T,stringify:E}},function(e,t,n){"use strict";t.a={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(qtek.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 32, height * 1.0 / 32] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bloom_composite",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(qtek.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},defines:{}},{name:"FXAA",shader:"#source(qtek.compositor.fxaa)",inputs:{texture:"composite"}}]}},function(e,t,n){"use strict";t.a="@export ecgl.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDistance: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDistance + focalRange;\n float lower = focalDistance - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n@end\n\n\n@export ecgl.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\nvoid main()\n{\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n}\n\n@end\n\n\n\n@export ecgl.dof.diskBlur\n\n#define POISSON_KERNEL_SIZE 16;\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurRadius : 10.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\n\nuniform float percent;\n\nfloat nrand(const in vec2 n) {\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\n\nvoid main()\n{\n vec2 offset = blurRadius / textureSize;\n\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\n float cosa = cos(rnd);\n float sina = sin(rnd);\n vec4 basis = vec4(cosa, -sina, sina, cosa);\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n\n float weightSum = 0.0;\n\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\n vec2 ofs = poissonKernel[i];\n\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\n\n vec2 uv = v_Texcoord + ofs * offset;\n vec4 texel = texture2D(texture, uv);\n\n float w = 1.0;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n texel = decodeHDR(texel);\n #if !defined(BLUR_NEARFIELD)\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\n w *= abs(fCoc);\n #endif\n color += texel * w;\n#endif\n\n weightSum += w;\n }\n\n#ifdef BLUR_COC\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n color /= weightSum;\n gl_FragColor = encodeHDR(color);\n#endif\n}\n\n@end"},function(e,t,n){"use strict";t.a="@export ecgl.edge\n\nuniform sampler2D texture;\n\nuniform sampler2D normalTexture;\nuniform sampler2D depthTexture;\n\nuniform mat4 projectionInv;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,0.8];\n\nvarying vec2 v_Texcoord;\n\nvec3 packColor(vec2 coord) {\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * p;\n\n return vec3(\n texture2D(normalTexture, coord).rg,\n -p4.z / p4.w / 5.0\n );\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n vec3 center = packColor(cc);\n\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\n float dx = size / textureSize.x;\n float dy = size / textureSize.y;\n\n vec2 coord;\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\n vec3 top = packColor(cc+vec2(0.0, -dy));\n vec3 topRight = packColor(cc+vec2(dx, -dy));\n vec3 left = packColor(cc+vec2(-dx, 0.0));\n vec3 right = packColor(cc+vec2(dx, 0.0));\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\n vec3 bottom = packColor(cc+vec2(0.0, dy));\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\n\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(dot(h, h) + dot(v, v));\n\n edge = smoothstep(0.8, 1.0, edge);\n\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\n}\n@end"},function(e,t,n){"use strict";function r(){for(var e=[],t=0;t<30;t++)e.push([Object(i.a)(t,2),Object(i.a)(t,3)]);this._haltonSequence=e,this._frame=0,this._sourceTex=new s.a,this._sourceFb=new o.a,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new s.a,this._outputTex=new s.a;var n=this._blendPass=new a.a({fragment:u.a.source("qtek.compositor.blend")});n.material.shader.disableTexturesAll(),n.material.shader.enableTexture(["texture1","texture2"]),this._blendFb=new o.a({depthBuffer:!1}),this._outputPass=new a.a({fragment:u.a.source("qtek.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.shader.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(e){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}var i=n(28),a=n(13),o=n(10),s=n(5),u=n(3),l=n(9);r.prototype={constructor:r,jitterProjection:function(e,t){var n=e.viewport,r=n.devicePixelRatio||e.getDevicePixelRatio(),i=n.width*r,a=n.height*r,o=this._haltonSequence[this._frame],s=new l.a;s._array[12]=(2*o[0]-1)/i,s._array[13]=(2*o[1]-1)/a,l.a.mul(t.projectionMatrix,s,t.projectionMatrix),l.a.invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},resize:function(e,t){this._sourceTex.width===e&&this._sourceTex.height===t||(this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty())},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e){var t=this._blendPass;0===this._frame?(t.setUniform("weight1",0),t.setUniform("weight2",1)):(t.setUniform("weight1",.9),t.setUniform("weight2",.1)),t.setUniform("texture1",this._prevFrameTex),t.setUniform("texture2",this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),t.render(e),this._blendFb.unbind(e),this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e);var n=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=n,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}},t.a=r},function(e,t,n){"use strict";function r(e){this.setScene(e)}var i=n(29),a=n(36),o=n(35),s=n(2),u=n(59),l=n(132);r.prototype={constructor:r,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new u.a({shadowBias:.005}),this.secondaryLight=new u.a({shadowBias:.005}),this.tertiaryLight=new u.a({shadowBias:.005}),this.ambientLight=new l.a},dispose:function(e){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.ambientLight)),this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(e)))},updateMainLight:function(e,t){this._updateDirectionalLight(this.mainLight,e,t)},updateSecondaryLight:function(e,t){this._updateDirectionalLight(this.secondaryLight,e,t)},updateTertiaryLight:function(e,t){this._updateDirectionalLight(this.tertiaryLight,e,t)},_updateDirectionalLight:function(e,t,n){t=t||{},null!=t.intensity&&(e.intensity=t.intensity,this._lightRoot[t.intensity?"add":"remove"](e)),null!=t.color&&(e.color=i.a.parseColor(t.color).slice(0,3));var r=i.a.firstNotNull(t.alpha,45),a=i.a.firstNotNull(t.beta,45);e.position.setArray(i.a.directionFromAlphaBeta(r,a)),e.lookAt(s.a.ZERO);var o={low:512,medium:1024,high:2048,ultra:4096}[t.quality]||1024;e.castShadow=i.a.firstNotNull(t.shadow,!0),e.shadowResolution=o},updateAmbientLight:function(e,t){e=e||{},null!=e.intensity&&(this.ambientLight.intensity=e.intensity,this._lightRoot[e.intensity?"add":"remove"](this.ambientLight)),null!=e.color&&(this.ambientLight.color=i.a.parseColor(e.color).slice(0,3))},updateAmbientCubemapLight:function(e,t){e=e||{};var n=t.getRenderer(),r=e.texture,o=this;if(!this._currentCubemapLights||r!==this._currentCubemapLights.textureUrl)if(this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(n.gl))),r){var s=i.a.createAmbientCubemap(e,t,function(){s.specular&&o._skybox instanceof a.a&&o._skybox.setEnvironmentMap(s.specular.cubemap),t.refresh()});s.diffuse&&this._lightRoot.add(s.diffuse),s.specular&&this._lightRoot.add(s.specular),this._currentCubemapLights=s,this._currentCubemapLights.textureUrl=r}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null);this._currentCubemapLights&&(null!=e.specularIntensity&&this._currentCubemapLights.specular&&(this._currentCubemapLights.specular.intensity=e.specularIntensity),null!=e.diffuseIntensity&&this._currentCubemapLights.diffuse&&(this._currentCubemapLights.diffuse.intensity=e.diffuseIntensity))},updateSkybox:function(e,t,n){var r=n.getRenderer(),s=this;if(e&&"none"!==e)if("auto"===e)if(this._currentCubemapLights){var u=function(){return s._skybox instanceof a.a||(s._skybox&&s._skybox.dispose(r),s._skybox=new a.a),s._skybox}();if(this._currentCubemapLights.specular){var l=this._currentCubemapLights.specular.cubemap;u.setEnvironmentMap(l)}this._scene&&u.attachScene(this._scene),u.material.set("lod",2)}else this._skybox&&this._skybox.detachScene();else{var c=function(){return s._skybox instanceof o.a||(s._skybox&&s._skybox.dispose(r),s._skybox=new o.a),s._skybox}(),f=i.a.loadTexture(e,n,{flipY:!1},function(){n.refresh()});c.setEnvironmentMap(f),c.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;if(this._skybox)if("auto"===e||e.match&&e.match(/.hdr$/))this._skybox.material.shader.undefine("fragment","SRGB_DECODE");else{var h=t?"define":"undefine";this._skybox.material.shader[h]("fragment","SRGB_DECODE")}}},t.a=r},function(e,t,n){"use strict";var r=n(14),i=r.a.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}}});t.a=i},function(e,t,n){"use strict";t.a={devicePixelRatio:null,picking:!1,shadow:!0,environment:"",ground:{show:!1},mainLight:{shadow:!0,shadowQuality:"medium",intensity:.8,color:"#fff",alpha:45,beta:45},secondaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:60,beta:-50},tertiaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:89,beta:0},ambientLight:{intensity:.3,color:"#fff"},ambientCubemapLight:{texture:"",exposure:1,diffuseIntensity:.5,specularIntensity:.5},postEffect:{enable:!1,bloom:{enable:!1,intensity:.1},depthOfField:{enable:!1,focalDistance:5,focalRange:1,blurRadius:5,fstop:2.8,quality:"medium"},screenSpaceAmbientOcculusion:{enable:!1,radius:.5,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},FXAA:{enable:!1}}}},function(e,t,n){"use strict";function r(e,t){for(var n=[],r=[],i=[],a=[],o=[],s=[],l=e.geometry,c=e.skeleton.getSubSkinMatrices(e.__GUID__,e.joints),f=0;f<e.joints.length;f++){a[f]=a[f]||[];for(var h=0;h<16;h++)a[f][h]=c[16*f+h]}for(var d=l.attributes.position,p=l.attributes.weight,_=l.attributes.joint,m=[1/0,1/0,1/0],g=[-1/0,-1/0,-1/0],f=0;f<l.vertexCount;f++){d.get(f,n),p.get(f,i),_.get(f,r),i[3]=1-i[0]-i[1]-i[2],u.set(o,0,0,0);for(var h=0;h<4;h++)r[h]>=0&&i[h]>1e-6&&(u.transformMat4(s,n,a[r[h]]),u.scaleAndAdd(o,o,s,i[h]));u.min(m,m,o),u.max(g,g,o)}t.min.setArray(m),t.max.setArray(g)}function i(e,t){t=t||new a.a;var n=new a.a;return e.traverse(function(e){e.geometry&&(e.isSkinnedMesh()?(r(e,n),e.geometry.boundingBox.copy(n)):(n.copy(e.geometry.boundingBox),n.applyTransform(e.worldTransform)),t.union(n))}),t}var a=n(7),o=n(0),s=n.n(o),u=s.a.vec3;t.a=i},function(e,t,n){"use strict";function r(e){return Array.isArray(e)||(e=[e,e]),e}var i=n(1),a=n(24),o=n(2),s=n(136),u=i.a.extend(function(){return{animation:null,domElement:null,target:null,_center:new o.a,minDistance:.1,maxDistance:1e3,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new a.a,_panVelocity:new a.a,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new s.a}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this.update=this.update.bind(this),this.init()},{init:function(){var e=this.domElement;e.addEventListener("touchstart",this._mouseDownHandler),e.addEventListener("mousedown",this._mouseDownHandler),e.addEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.on("frame",this.update)},dispose:function(){var e=this.domElement;e.removeEventListener("touchstart",this._mouseDownHandler),e.removeEventListener("touchmove",this._mouseMoveHandler),e.removeEventListener("touchend",this._mouseUpHandler),e.removeEventListener("mousedown",this._mouseDownHandler),e.removeEventListener("mousemove",this._mouseMoveHandler),e.removeEventListener("mouseup",this._mouseUpHandler),e.removeEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.off("frame",this.update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setOption:function(e){e=e||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(t){null!=e[t]&&(this[t]=e[t])},this),null!=e.distance&&this.setDistance(e.distance),null!=e.alpha&&this.setAlpha(e.alpha),null!=e.beta&&this.setBeta(e.beta),e.center&&this.setCenter(e.center)},animateTo:function(e){var t=this,n={},r={},i=this.animation;if(i)return null!=e.distance&&(n.distance=this.getDistance(),r.distance=e.distance),null!=e.alpha&&(n.alpha=this.getAlpha(),r.alpha=e.alpha),null!=e.beta&&(n.beta=this.getBeta(),r.beta=e.beta),null!=e.center&&(n.center=this.getCenter(),r.center=e.center),this._addAnimator(i.animate(n).when(e.duration||1e3,r).during(function(){null!=n.alpha&&t.setAlpha(n.alpha),null!=n.beta&&t.setBeta(n.beta),null!=n.distance&&t.setDistance(n.distance),null!=n.center&&t.setCenter(n.center),t._needsUpdate=!0}).done(e.done)).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},update:function(e){if(e=e||16,this._rotating){var t=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(Math.min(e,50)),this._updatePan(Math.min(e,50)),this._updateRotate(Math.min(e,50)),this._updateTransform(),this.target.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,this.damping)},_updateDistance:function(e){this._setDistance(this._distance+this._zoomSpeed*e/20),this._zoomSpeed*=this.damping},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_updatePan:function(e){var t=this._panVelocity,n=this._distance,r=this.target,i=r.worldTransform.y,a=r.worldTransform.x;this._center.scaleAndAdd(a,-t.x*n/200).scaleAndAdd(i,-t.y*n/200),this._vectorDamping(t,0)},_updateTransform:function(){var e=this.target,t=new o.a,n=this._theta+Math.PI/2,r=this._phi+Math.PI/2,i=Math.sin(n);t.x=i*Math.cos(r),t.y=-Math.cos(n),t.z=i*Math.sin(r),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout(function(){t._rotating=!0},1e3*e))},_vectorDamping:function(e,t){var n=e.len();n*=t,n<1e-4&&(n=0),e.normalize().scale(n)},decomposeTransform:function(){if(this.target){var e=new o.a;e.eulerFromQuat(this.target.rotation.normalize(),"ZYX"),this._theta=-e.x,this._phi=-e.y,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center))}},_mouseDownHandler:function(e){if(!this._isAnimating()){var t=e.clientX,n=e.clientY;if(e.targetTouches){var r=e.targetTouches[0];t=r.clientX,n=r.clientY,this._mode="rotate",this._processGesture(e,"start")}var i=this.domElement;i.addEventListener("touchmove",this._mouseMoveHandler),i.addEventListener("touchend",this._mouseUpHandler),i.addEventListener("mousemove",this._mouseMoveHandler),i.addEventListener("mouseup",this._mouseUpHandler),0===e.button?this._mode="rotate":1===e.button&&(this._mode="pan"),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=t,this._mouseY=n}},_mouseMoveHandler:function(e){if(!this._isAnimating()){var t,n=e.clientX,i=e.clientY;if(e.targetTouches){var a=e.targetTouches[0];n=a.clientX,i=a.clientY,t=this._processGesture(e,"change")}var o=r(this.panSensitivity),s=r(this.rotateSensitivity);t||("rotate"===this._mode?(this._rotateVelocity.y=(n-this._mouseX)/this.domElement.clientHeight*2*s[0],this._rotateVelocity.x=(i-this._mouseY)/this.domElement.clientWidth*2*s[1]):"pan"===this._mode&&(this._panVelocity.x=(n-this._mouseX)/this.domElement.clientWidth*o[0]*400,this._panVelocity.y=(-i+this._mouseY)/this.domElement.clientHeight*o[1]*400)),this._mouseX=n,this._mouseY=i,e.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.wheelDelta||-e.detail;0!==t&&this._zoomHandler(e,t>0?-1:1)}},_pinchHandler:function(e){this._isAnimating()||this._zoomHandler(e,e.pinchScale>1?-.4:.4)},_zoomHandler:function(e,t){var n=Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance));this._zoomSpeed=t*Math.max(n/40*this.zoomSensitivity,.2),this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),e.preventDefault()},_mouseUpHandler:function(e){var t=this.domElement;t.removeEventListener("touchmove",this._mouseMoveHandler),t.removeEventListener("touchend",this._mouseUpHandler),t.removeEventListener("mousemove",this._mouseMoveHandler),t.removeEventListener("mouseup",this._mouseUpHandler),this._processGesture(e,"end")},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done(function(){var n=t.indexOf(e);n>=0&&t.splice(n,1)}),e},_processGesture:function(e,t){var n=this._gestureMgr;"start"===t&&n.clear();var r=n.recognize(e,null,this.domElement);if("end"===t&&n.clear(),r){var i=r.type;e.gestureEvent=i,this._pinchHandler(r.event)}return r}});Object.defineProperty(u.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}}),Object.defineProperty(u.prototype,"target",{get:function(){return this._target},set:function(e){e&&e.target&&this.setCenter(e.target.toArray()),this._target=e,this.decomposeTransform()}}),t.a=u},function(e,t,n){"use strict";function r(e){var t=e[1][0]-e[0][0],n=e[1][1]-e[0][1];return Math.sqrt(t*t+n*n)}function i(e){return[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2]}var a=function(){this._track=[]};a.prototype={constructor:a,recognize:function(e,t,n){return this._doTrack(e,t,n),this._recognize(e)},clear:function(){return this._track.length=0,this},_doTrack:function(e,t,n){var r=e.targetTouches;if(r){for(var i={points:[],touches:[],target:t,event:e},a=0,o=r.length;a<o;a++){var s=r[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(e){for(var t in o)if(o.hasOwnProperty(t)){var n=o[t](this._track,e);if(n)return n}}};var o={pinch:function(e,t){var n=e.length;if(n){var a=(e[n-1]||{}).points,o=(e[n-2]||{}).points||a;if(o&&o.length>1&&a&&a.length>1){var s=r(a)/r(o);!isFinite(s)&&(s=1),t.pinchScale=s;var u=i(a);return t.pinchX=u[0],t.pinchY=u[1],{type:"pinch",target:e[0].target,event:t}}}}};t.a=a},function(e,t,n){"use strict";var r=n(1),i=n(138),a=n(7),o=r.a.extend(function(){return{dom:null,renderer:null,camera:null,_boundingBox:new a.a,_hotspotRoot:null,_hotspots:[]}},function(){if(!this.dom||!this.renderer||!this.camera)throw new Error("Tip manager needs `root`,  `camera`, `renderer`");var e=this._hotspotRoot=document.createElement("div");e.style.cssText="position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;",this.dom.appendChild(e)},{setBoundingBox:function(e,t){this._boundingBox.min.setArray(e),this._boundingBox.max.setArray(t)},add:function(e,t){if("string"==typeof t){var n=document.createElement("div");n.innerHTML=t,t=n}return t.classList.add("qmv-annotation"),t.style.position="absolute",this._hotspotRoot.appendChild(t),this._hotspots.push({position:e,dom:t}),t},remove:function(e){for(var t=-1,n=0;n<this._hotspots.length;n++)if(this._hotspots[n].dom===e){t=n;break}t>=0&&(this._hotspots.splice(t,1),this._hotspotRoot.removeChild(e))},update:function(){var e=new i.a,t=new a.a;this._hotspots.forEach(function(n){var r=n.position;e.set(r[0],r[1],r[2],1),e.transformMat4(this.camera.viewMatrix);var i=e.z;e.transformMat4(this.camera.projectionMatrix),e.scale(1/e.w);var a=.5*(e.x+1)*this.renderer.getWidth(),o=.5*(e.y+1)*this.renderer.getHeight();n.dom.style.left=a+"px",n.dom.style.top=this.renderer.getHeight()-o+"px";var s=null==n.farAlpha?.1:n.farAlpha,u=null==n.nearAlpha?1:n.nearAlpha;t.copy(this._boundingBox),t.applyTransform(this.camera.viewMatrix);var l=(i-t.max.z)/(t.min.z-t.max.z);Math.max(Math.min(l,1),0);n.dom.style.opacity=1,n.onupdate&&n.onupdate(a,o)},this)}});t.a=o},function(e,t,n){"use strict";var r=n(0),i=n.n(r),a=i.a.vec4,o=function(e,t,n,r){e=e||0,t=t||0,n=n||0,r=r||0,this._array=a.fromValues(e,t,n,r),this._dirty=!0};o.prototype={constructor:o,add:function(e){return a.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,n,r){return this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=r,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._array[3]=e[3],this._dirty=!0,this},clone:function(){return new o(this.x,this.y,this.z,this.w)},copy:function(e){return a.copy(this._array,e._array),this._dirty=!0,this},dist:function(e){return a.dist(this._array,e._array)},distance:function(e){return a.distance(this._array,e._array)},div:function(e){return a.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return a.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return a.dot(this._array,e._array)},len:function(){return a.len(this._array)},length:function(){return a.length(this._array)},lerp:function(e,t,n){return a.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},min:function(e){return a.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return a.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return a.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return a.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return a.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return a.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return a.random(this._array,e),this._dirty=!0,this},scale:function(e){return a.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return a.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return a.sqrDist(this._array,e._array)},squaredDistance:function(e){return a.squaredDistance(this._array,e._array)},sqrLen:function(){return a.sqrLen(this._array)},squaredLength:function(){return a.squaredLength(this._array)},sub:function(e){return a.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return a.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return a.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return a.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var s=Object.defineProperty;if(s){var u=o.prototype;s(u,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),s(u,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),s(u,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}}),s(u,"w",{get:function(){return this._array[3]},set:function(e){this._array[3]=e,this._dirty=!0}})}o.add=function(e,t,n){return a.add(e._array,t._array,n._array),e._dirty=!0,e},o.set=function(e,t,n,r,i){a.set(e._array,t,n,r,i),e._dirty=!0},o.copy=function(e,t){return a.copy(e._array,t._array),e._dirty=!0,e},o.dist=function(e,t){return a.distance(e._array,t._array)},o.distance=o.dist,o.div=function(e,t,n){return a.divide(e._array,t._array,n._array),e._dirty=!0,e},o.divide=o.div,o.dot=function(e,t){return a.dot(e._array,t._array)},o.len=function(e){return a.length(e._array)},o.lerp=function(e,t,n,r){return a.lerp(e._array,t._array,n._array,r),e._dirty=!0,e},o.min=function(e,t,n){return a.min(e._array,t._array,n._array),e._dirty=!0,e},o.max=function(e,t,n){return a.max(e._array,t._array,n._array),e._dirty=!0,e},o.mul=function(e,t,n){return a.multiply(e._array,t._array,n._array),e._dirty=!0,e},o.multiply=o.mul,o.negate=function(e,t){return a.negate(e._array,t._array),e._dirty=!0,e},o.normalize=function(e,t){return a.normalize(e._array,t._array),e._dirty=!0,e},o.random=function(e,t){return a.random(e._array,t),e._dirty=!0,e},o.scale=function(e,t,n){return a.scale(e._array,t._array,n),e._dirty=!0,e},o.scaleAndAdd=function(e,t,n,r){return a.scaleAndAdd(e._array,t._array,n._array,r),e._dirty=!0,e},o.sqrDist=function(e,t){return a.sqrDist(e._array,t._array)},o.squaredDistance=o.sqrDist,o.sqrLen=function(e){return a.sqrLen(e._array)},o.squaredLength=o.sqrLen,o.sub=function(e,t,n){return a.subtract(e._array,t._array,n._array),e._dirty=!0,e},o.subtract=o.sub,o.transformMat4=function(e,t,n){return a.transformMat4(e._array,t._array,n._array),e._dirty=!0,e},o.transformQuat=function(e,t,n){return a.transformQuat(e._array,t._array,n._array),e._dirty=!0,e},t.a=o},function(e,t,n){"use strict";t.a="@export qmv.ground.vertex\n@import qtek.lambert.vertex\n@end\n\n\n@export qmv.ground.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform float gridSize: 5;\nuniform float gridSize2: 1;\nuniform vec4 gridColor: [0, 0, 0, 1];\nuniform vec4 gridColor2: [0.3, 0.3, 0.3, 1];\n\nuniform float glossiness: 0.7;\n\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n\n@import qtek.plugin.compute_shadow_map\n\nvoid main()\n{\n gl_FragColor = color;\n\n float wx = v_WorldPosition.x;\n float wz = v_WorldPosition.z;\n float x0 = abs(fract(wx / gridSize - 0.5) - 0.5) / fwidth(wx) * gridSize / 2.0;\n float z0 = abs(fract(wz / gridSize - 0.5) - 0.5) / fwidth(wz) * gridSize / 2.0;\n\n float x1 = abs(fract(wx / gridSize2 - 0.5) - 0.5) / fwidth(wx) * gridSize2;\n float z1 = abs(fract(wz / gridSize2 - 0.5) - 0.5) / fwidth(wz) * gridSize2;\n\n float v0 = 1.0 - clamp(min(x0, z0), 0.0, 1.0);\n float v1 = 1.0 - clamp(min(x1, z1), 0.0, 1.0);\n if (v0 > 0.1) {\n gl_FragColor = mix(gl_FragColor, gridColor, v0);\n }\n else {\n gl_FragColor = mix(gl_FragColor, gridColor2, v1);\n }\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {\n diffuseColor += ambientLightColor[_idx_];\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float ndl = dot(v_Normal, normalize(lightDirection));\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n }\n#endif\n\n#ifdef SSAOMAP_ENABLED\n diffuseColor *= texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n\n gl_FragColor.a *= 1.0 - clamp(length(v_WorldPosition.xz) / 30.0, 0.0, 1.0);\n\n}\n\n@end"},function(e,t,n){"use strict";var r=n(64);t.a=function(){return{materials:[],takes:[],textureFlipY:!1,zUpToYUp:!1,shadow:!0,environment:"auto",viewControl:{alpha:20,beta:30,distance:18},ground:{show:!0},mainLight:{shadow:!0,shadowQuality:"medium",intensity:.8,color:"#fff",alpha:45,beta:45,$padAngle:[.25,.5]},secondaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:60,beta:-50,$padAngle:[-50/180,60/90]},tertiaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:89,beta:0,$padAngle:[0,89/90]},ambientLight:{intensity:0,color:"#fff"},ambientCubemapLight:{texture:r.a.ENV_TEXTURE_ROOT+"pisa.hdr",$texture:"pisa",$textureOptions:["pisa","Barce_Rooftop_C","Factory_Catwalk","Grand_Canyon_C","Ice_Lake","Hall","Old_Industrial_Hall"],exposure:1,diffuseIntensity:.5,specularIntensity:.5,$intensity:.5},postEffect:{enable:!0,bloom:{enable:!0,intensity:.1},depthOfField:{enable:!1,focalDistance:4,focalRange:1,blurRadius:5,fstop:10,quality:"medium",$qualityOptions:["low","medium","high","ultra"]},screenSpaceAmbientOcclusion:{enable:!1,radius:1.5,quality:"medium",intensity:1,$qualityOptions:["low","medium","high","ultra"]},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8,$qualityOptions:["low","medium","high","ultra"]},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},FXAA:{enable:!1}}}}},function(e,t,n){"use strict";t.a=function(){return{name:"",type:"pbrMetallicRoughness",color:"#fff",transparent:!1,alpha:1,diffuseMap:"",normalMap:"",emission:"#fff",emissionIntensity:0,emissiveMap:"",uvRepeat:[1,1],metalness:0,roughness:.5,metalnessMap:"",roughnessMap:"",glossiness:.5,specularColor:"#111",glossinessMap:"",specularMap:"",$alphaRange:[0,1],$metalnessRange:[0,1],$roughnessRange:[0,1],$glossinessRange:[0,1],$textureTiling:1}}},function(e,t,n){"use strict";function r(e){m.init({persistent:!0,size:209715200},function(t){g=!0,m.mkdir("/project",!1,function(){Promise.all([s(),o()]).then(function(t){e&&e(t[0][0],t[0][1],t[1])})},function(e){swal("Create project error."+e.toString())})},function(e){swal("Init error."+e.toString())})}function i(e){function t(){m.mkdir("/project/model",!1,function(){var t=e.length;e.forEach(function(e){m.write("/project/model/"+e.name,{data:e,type:e.type},function(){t--},function(e){swal(e.toString())})})},function(e){swal(e.toString())})}g||swal("Not inited yet."),m.ls("/project/model",function(e){var n=e.length;0===n&&t(),e.forEach(function(e){m.rm(e,function(){0===--n&&t()})})},function(e){t()})}function a(e){m.mkdir("/project",!1,function(){m.write("/project/scene.json",{data:JSON.stringify(e,null,2),type:"application/json"},function(){console.log("Saved scene")},function(e){console.error("Failed to save scene,"+e.toString())})})}function o(){return new Promise(function(e,t){m.create("/project/scene.json",!0,function(){e(null)},function(){m.open("/project/scene.json",function(t){FileAPI.readAsText(t,"utf-8",function(t){"load"===t.type&&e(JSON.parse(t.result||"{}"))})},function(t){e(null)})})})}function s(){return new Promise(function(e,t){f().then(function(t){t?l(t,function(t,n){e([t,n])}):e([])})})}function u(e){m.write("/project/model/"+e.name,{data:e,type:e.type},function(){console.log("Writed file "+e.name)},function(e){swal(e.toString())})}function l(e,t){function n(t){var n=0;e.forEach(function(e){e!==r&&(n++,v[e.name]=URL.createObjectURL(e))}),t&&t(v)}var r=e.find(function(e){return e.name.match(/.gltf$/)});r||swal("glTF file nout found");for(var i in v)URL.revokeObjectURL(v[i]);v={},FileAPI.readAsText(r,"utf-8",function(e){if("load"==e.type){var r=JSON.parse(e.result);n(function(e){t&&t(r,e)})}else if("progress"==e.type){e.loaded,e.total}})}function c(){m.rm("/project",function(){m.mkdir("/project",!1,function(){},function(e){console.error(e.toString())})},function(e){console.log(e.toString())})}function f(){return new Promise(function(e,t){m.ls("/project/model",function(t){var n=[];t=t.filter(function(e){return e.isFile}),t.forEach(function(r){m.open(r,function(r){n.push(r),n.length===t.length&&e(n)})})},function(t){e(null)})})}function h(){Promise.all([f(),o()]).then(function(e){var t,n=e[0],r=e[1],i=new JSZip,a={};n=(n||[]).filter(function(e){if(!e.name.match(/.gltf$/))return a[e.name]=e,!0;t=e}),t||swal("No glTF file in project!"),Promise.all(r.materials.map(function(e,t){if(e.metalnessMap||e.roughnessMap){var n=a[e.metalnessMap],r=a[e.roughnessMap];return new Promise(function(a){Object(_.a)(n,r,e.metalness,e.roughness).then(function(n){var r=e.name+"$"+t+"_metallicRoughness.png",o=n.toDataURL();o=o.slice("data:image/png;base64,".length),i.file(r,o,{base64:!0}),e.metalnessMap=e.roughnessMap=r,console.log("Merged %s, %s to %s",e.metalnessMap,e.roughnessMap,r),a()})})}if(e.specularMap||e.glossinessMap){var o=a[e.specularMap],s=a[e.glossinessMap];return new Promise(function(n){Object(_.b)(o,s,e.specularColor,e.glossiness).then(function(r){var a=e.name+"$"+t+"_specularGlossiness.png",o=r.toDataURL();o=o.slice("data:image/png;base64,".length),i.file(a,o,{base64:!0}),e.specularMap=e.glossinessMap=a,console.log("Merged %s, %s to %s",e.specularMap,e.glossinessMap,a),n()})})}return null}).filter(function(e){return null!=e})).then(function(){FileAPI.readAsText(t,"utf-8",function(e){if("load"==e.type){var a=Object(_.c)(JSON.parse(e.result),r);n=n.filter(function(e){return!e.type.match(/image/)||a.images&&a.images.some(function(t){return t.uri===e.name})}),i.file(t.name,JSON.stringify(a,null,2)),n.forEach(function(e){i.file(e.name,e)}),i.generateAsync({type:"blob"}).then(function(e){saveAs(e,"model.zip")})}})})})}n.d(t,"b",function(){return r}),n.d(t,"e",function(){return i}),n.d(t,"c",function(){return l}),n.d(t,"f",function(){return a}),n.d(t,"g",function(){return u}),n.d(t,"d",function(){return c}),n.d(t,"a",function(){return h});var d=n(143),p=n.n(d),_=n(144),m=new p.a,g=!1,v={}},function(e,t,n){"use strict";if(self.URL=self.URL||self.webkitURL,self.requestFileSystem=self.requestFileSystem||self.webkitRequestFileSystem,self.resolveLocalFileSystemURL=self.resolveLocalFileSystemURL||self.webkitResolveLocalFileSystemURL,navigator.temporaryStorage=navigator.temporaryStorage||navigator.webkitTemporaryStorage,navigator.persistentStorage=navigator.persistentStorage||navigator.webkitPersistentStorage,self.BlobBuilder=self.BlobBuilder||self.MozBlobBuilder||self.WebKitBlobBuilder,void 0===self.FileError){var r=function(){};r.prototype.prototype=Error.prototype}var i={toArray:function(e){return Array.prototype.slice.call(e||[],0)},strToDataURL:function(e,t,n){return void 0==n||n?"data:"+t+";base64,"+self.btoa(e):"data:"+t+","+e},strToObjectURL:function(e,t){for(var n=new Uint8Array(e.length),r=0;r<n.length;++r)n[r]=e.charCodeAt(r);var i=new Blob([n],t?{type:t}:{});return self.URL.createObjectURL(i)},fileToObjectURL:function(e){return self.URL.createObjectURL(e)},fileToArrayBuffer:function(e,t,n){var r=new FileReader;r.onload=function(e){t(e.target.result)},r.onerror=function(e){n&&n(e)},r.readAsArrayBuffer(e)},dataURLToBlob:function(e){if(-1==e.indexOf(";base64,")){var t=e.split(","),n=t[0].split(":")[1],r=decodeURIComponent(t[1]);return new Blob([r],{type:n})}for(var t=e.split(";base64,"),n=t[0].split(":")[1],r=window.atob(t[1]),i=r.length,a=new Uint8Array(i),o=0;o<i;++o)a[o]=r.charCodeAt(o);return new Blob([a],{type:n})},arrayBufferToBlob:function(e,t){var n=new Uint8Array(e);return new Blob([n],t?{type:t}:{})},arrayBufferToBinaryString:function(e,t,n){var r=new FileReader;r.onload=function(e){t(e.target.result)},r.onerror=function(e){n&&n(e)};var i=new Uint8Array(e);r.readAsBinaryString(new Blob([i]))},arrayToBinaryString:function(e){if(typeof e!=typeof[])return null;for(var t=e.length,n=new Array(t);t--;)n[t]=String.fromCharCode(e[t]);return n.join("")},getFileExtension:function(e){var t=e.lastIndexOf(".");return-1!=t?e.substring(t):""}},a=function(e){this.prototype=r.prototype,this.code=e.code,this.name=e.name};r.BROWSER_NOT_SUPPORTED=1e3,r.prototype.__defineGetter__("name",function(){for(var e,t=Object.keys(r),n=0;e=t[n];++n)if(r[e]==this.code)return e;return"Unknown Error"});var o=new function(){function e(e){(n=e||null)&&(o=n.root,s=!0)}var t="Filesystem has not been initialized.",n=null,o=null,s=!1,u=function(e){return 0==e.indexOf("filesystem:")},l=function(e){return u(e)||(e="/"==e[0]?n.root.toURL()+e.substring(1):0==e.indexOf("./")||0==e.indexOf("../")?"../"==e&&o!=n.root?o.toURL()+"/"+e:o.toURL()+e:o.toURL()+"/"+e),e},c=function(e,t){var n=arguments[1],i=arguments[2],a=function(e){throw e.code==r.NOT_FOUND_ERR?i?new Error('"'+n+'" or "'+i+'" does not exist.'):new Error('"'+n+'" does not exist.'):new Error("Problem getting Entry for one or more paths.")},o=l(n);if(3==arguments.length){var s=l(i);self.resolveLocalFileSystemURL(o,function(t){self.resolveLocalFileSystemURL(s,function(n){e(t,n)},a)},a)}else self.resolveLocalFileSystemURL(o,e,a)},f=function(e,r,i,a,o,s){if(!n)throw new Error(t);if(typeof e!=typeof r)throw new Error("These method arguments are not supported.");var u=i||null,l=void 0!=s&&s;(e.isFile||r.isDirectory)&&r.isDirectory?l?e.moveTo(r,u,a,o):e.copyTo(r,u,a,o):c(function(e,t){if(!t.isDirectory){var n=new Error('Oops! "'+t.name+" is not a directory!");if(!o)throw n;return void o(n)}l?e.moveTo(t,u,a,o):e.copyTo(t,u,a,o)},e,r)};return e.DEFAULT_FS_SIZE=1048576,e.version="0.4.3",e.prototype={get fs(){return n},get isOpen(){return s},get cwd(){return o}},e.prototype.pathToFilesystemURL=function(e){return l(e)},e.prototype.init=function(e,t,i){if(!self.requestFileSystem)throw new a({code:r.BROWSER_NOT_SUPPORTED,name:"BROWSER_NOT_SUPPORTED"});var u=e||{},l=u.size||1048576;this.type=self.TEMPORARY,"persistent"in u&&u.persistent&&(this.type=self.PERSISTENT);var c=function(e){this.size=l,n=e,o=n.root,s=!0,t&&t(e)};this.type==self.PERSISTENT&&navigator.persistentStorage?navigator.persistentStorage.requestQuota(l,function(e){self.requestFileSystem(this.type,e,c.bind(this),i)}.bind(this),i):self.requestFileSystem(this.type,l,c.bind(this),i)},e.prototype.ls=function(e,r,a){if(!n)throw new Error(t);var s=function(e){o=e;var t=[],n=o.createReader(),s=function(){n.readEntries(function(e){e.length?(t=t.concat(i.toArray(e)),s()):(t.sort(function(e,t){return e.name<t.name?-1:t.name<e.name?1:0}),r(t))},a)};s()};e.isDirectory?s(e):u(e)?c(s,e):o.getDirectory(e,{},s,a)},e.prototype.mkdir=function(e,i,a,s){if(!n)throw new Error(t);var u=null!=i&&i,l=e.split("/"),c=function(t,n){"."!=n[0]&&""!=n[0]||(n=n.slice(1)),t.getDirectory(n[0],{create:!0,exclusive:u},function(t){if(t.isDirectory)n.length&&1!=l.length?c(t,n.slice(1)):a&&a(t);else{var r=new Error(e+" is not a directory");if(!s)throw r;s(r)}},function(t){if(t.code==r.INVALID_MODIFICATION_ERR){if(t.message="'"+e+"' already exists",!s)throw t;s(t)}})};c(o,l)},e.prototype.open=function(e,r,i){if(!n)throw new Error(t);e.isFile?e.file(r,i):c(function(e){e.file(r,i)},l(e))},e.prototype.create=function(e,i,a,s){if(!n)throw new Error(t);var u=null==i||i;o.getFile(e,{create:!0,exclusive:u},a,function(t){if(t.code==r.INVALID_MODIFICATION_ERR&&(t.message="'"+e+"' already exists"),!s)throw t;s(t)})},e.prototype.mv=function(e,t,n,r,i){f.bind(this,e,t,n,r,i,!0)()},e.prototype.rm=function(e,r,i){if(!n)throw new Error(t);var a=function(e){e.isFile?e.remove(r,i):e.isDirectory&&e.removeRecursively(r,i)};e.isFile||e.isDirectory?a(e):c(a,e)},e.prototype.cd=function(e,r,i){if(!n)throw new Error(t);if(e.isDirectory)o=e,r&&r(o);else{var e=l(e);c(function(e){if(e.isDirectory)o=e,r&&r(o);else{var t=new Error("Path was not a directory.");if(!i)throw t;i(t)}},e)}},e.prototype.cp=function(e,t,n,r,i){f.bind(this,e,t,n,r,i)()},e.prototype.write=function(e,r,i,a){if(!n)throw new Error(t);var s=function(e){e.createWriter(function(t){if(t.onerror=a,r.append)t.onwriteend=function(t){i&&i(e,this)},t.seek(t.length);else{var n=!1;t.onwriteend=function(t){if(!n)return n=!0,void this.truncate(this.position);i&&i(e,this)}}r.data.__proto__==ArrayBuffer.prototype&&(r.data=new Uint8Array(r.data));var o=new Blob([r.data],r.type?{type:r.type}:{});t.write(o)},a)};e.isFile?s(e):u(e)?c(s,e):o.getFile(e,{create:!0,exclusive:!1},s,a)},e.prototype.df=function(e,t){var n=function(t,n){e(t,n-t,n)};if(!navigator.temporaryStorage.queryUsageAndQuota||!navigator.persistentStorage.queryUsageAndQuota)throw new Error("Not implemented.");self.TEMPORARY==this.type?navigator.temporaryStorage.queryUsageAndQuota(n,t):self.PERSISTENT==this.type&&navigator.persistentStorage.queryUsageAndQuota(n,t)},e};void 0!==e&&e.exports&&(e.exports=o),t.Filer=o},function(e,t,n){"use strict";function r(e,t){return new Promise(function(t,n){Promise.all(e.map(function(e){var t=e&&URL.createObjectURL(e);return new Promise(function(e,n){if(t){var r=new Image;r.src=t,r.onload=function(){e(r)}}else e(null)})})).then(function(e){var n=e.find(function(e){return null!=e});n||t(null);var r=document.createElement("canvas"),i=r.getContext("2d"),a=r.width=n.width,o=r.height=n.height,s=e.map(function(e){return e?(i.drawImage(e,0,0,a,o),i.getImageData(0,0,a,o).data):null});t({canvas:r,imageDataList:s})})})}function i(e,t,n,i){return new Promise(function(a,o){r([e,t]).then(function(e){for(var t=e.canvas,r=t.getContext("2d"),o=e.imageDataList[0],s=e.imageDataList[1],u=r.createImageData(t.width,t.height),l=0;l<(o||s).length;l+=4){var c=n;if(o){var f=o[l+2]/255;c=Math.min(Math.max(f+2*(c-.5),0),1)}var h=i;if(s){var d=s[l+1]/255;h=Math.min(Math.max(d+2*(h-.5),0),1)}u.data[l]=u.data[l+3]=0,u.data[l+1]=Math.round(255*h),u.data[l+2]=Math.round(255*c)}r.putImageData(u,0,0),a(t)})})}function a(e,t,n,i){return n=c.a.parseColor(n).slice(0,3),new Promise(function(a,o){r([e,t]).then(function(e){for(var t=e.canvas,r=t.getContext("2d"),o=e.imageDataList[0],s=e.imageDataList[1],u=r.createImageData(t.width,t.height),l=0;l<(o||s).length;l+=4){var c=n.slice();o&&(c[0]*=o[l]/255,c[1]*=o[l+1]/255,c[2]*=o[l+2]/255);var f=i;if(s){var h=s[l+3]/255;f=Math.min(Math.max(h+2*(f-.5),0),1)}for(var d=0;d<3;d++)u.data[l+d]=Math.round(255*c[d]);u.data[l+3]=Math.round(255*f)}r.putImageData(u,0,0),a(t)})})}function o(e,t){var n={},r=0;return e.images=[],e.textures=[],e.samplers=[{minFilter:h.a.LINEAR_MIPMAP_LINEAR,magFilter:h.a.LINEAR,wrapS:h.a.REPEAT,wrapT:h.a.REPEAT}],t.materials.forEach(function(t,i){d.forEach(function(i){t[i]&&!n.hasOwnProperty(i)&&(e.images.push({uri:t[i]}),e.textures.push({sampler:0,source:r}),n[t[i]]=r++)})}),n}function s(e,t){var n={baseColorFactor:c.a.parseColor(e.color),metallicFactor:e.metalness,roughnessFactor:e.roughness};return n.baseColorFactor[3]=e.alpha,e.diffuseMap&&(n.baseColorTexture={index:t[e.diffuseMap],texCoord:0}),e.metalnessMap&&(n.metallicRoughnessTexture={index:t[e.metalnessMap],texCoord:0},n.metallicFactor=1,n.roughnessFactor=1),n}function u(e,t){var n={diffuseFactor:c.a.parseColor(e.color),specularFactor:c.a.parseColor(e.specularColor).slice(0,3),glossinessFactor:e.glossiness};return n.diffuseFactor[3]=e.alpha,e.specularMap&&(n.specularGlossinessTexture={index:t[e.specularMap],texCoord:0},n.specularFactor=[1,1,1],n.glossinessFactor=1),n}function l(e,t){if(e.materials){var n=o(e,t),r={};return e.materials=[],e.meshes.forEach(function(t,n){t.primitives.forEach(function(t,i){r[f.a.generateMeshName(e.meshes,n,i)]=primitie})}),t.materials.forEach(function(t,i){var a={name:t.name,emissiveFactor:c.a.parseColor(t.emission).slice(0,3).map(function(e){return e*t.emissionIntensity})};t.normalMap&&(a.normalTexture={texCoord:0,scale:1,index:n[t.normalMap]}),t.emissiveMap&&(a.emissiveTexture={texCoord:0,index:n[t.emissiveMap]}),"pbrMetallicRoughness"===t.type?a.pbrMetallicRoughness=s(t,n):a.extensions={KHR_materials_pbrSpecularGlossiness:u(t,n)},t.targetMeshes.forEach(function(e){r[e].material=i}),e.materials[i]=a}),e.extras=e.extras||{},e.extras.qtekModelViewerConfig=t,e}}n.d(t,"c",function(){return l}),n.d(t,"a",function(){return i}),n.d(t,"b",function(){return a});var c=n(29),f=n(39),h=n(4),d=["diffuseMap","normalMap","emissiveMap","metalnessMap","roughnessMap","specularMap","glossinessMap"]},function(e,t,n){"use strict";var r=n(15),i=n(7),a=n(8),o=n(3),s=n(146),u=n(147);o.a.import(u.a);var l=[[-1,1,1],[1,1,1],[1,1,1],[1,-1,1],[1,-1,1],[-1,-1,1],[-1,-1,1],[-1,1,1],[-1,1,-1],[1,1,-1],[1,1,-1],[1,-1,-1],[1,-1,-1],[-1,-1,-1],[-1,-1,-1],[-1,1,-1],[-1,1,1],[-1,1,-1],[1,1,1],[1,1,-1],[-1,-1,1],[-1,-1,-1],[1,-1,1],[1,-1,-1]],c=r.a.extend(function(){return{target:null,lineWidth:3,ignorePicking:!0,_boundingBox:new i.a}},function(){if(!this.geometry){var e=this.geometry=new s.a({useNativeLine:!1});e.setVertexCount(12*e.getLineVertexCount()),e.setTriangleCount(12*e.getLineTriangleCount()),e.resetOffset();for(var t=0;t<l.length;t+=2)e.addLine(l[t],l[t+1],[1,1,1,1],this.lineWidth*window.devicePixelRatio)}this.material||(this.material=new a.a({shader:new o.a({vertex:o.a.source("ecgl.meshLines3D.vertex"),fragment:o.a.source("ecgl.meshLines3D.fragment")})}))},{updateLocalTransform:function(e){var t=this._boundingBox;this.target&&(this.target.getBoundingBox(null,t),t.applyTransform(this.target.worldTransform),this.position.copy(t.max).add(t.min).scale(.5),this.scale.copy(t.max).sub(t.min).scale(.5)),r.a.prototype.updateLocalTransform.call(this,e)}});t.a=c},function(e,t,n){"use strict";var r=n(18),i=n(0),a=n.n(i),o=a.a.vec3,s=[[0,0],[1,1]],u=r.a.extend(function(){return{segmentScale:1,dynamic:!0,useNativeLine:!0,attributes:{position:new r.a.Attribute("position","float",3,"POSITION"),positionPrev:new r.a.Attribute("positionPrev","float",3),positionNext:new r.a.Attribute("positionNext","float",3),prevPositionPrev:new r.a.Attribute("prevPositionPrev","float",3),prevPosition:new r.a.Attribute("prevPosition","float",3),prevPositionNext:new r.a.Attribute("prevPositionNext","float",3),offset:new r.a.Attribute("offset","float",1),color:new r.a.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.positionPrev.init(e),t.positionNext.init(e),t.offset.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(this.indices=0===e?null:this.vertexCount>65535?new Uint32Array(3*e):new Uint16Array(3*e))},_getCubicCurveApproxStep:function(e,t,n,r){return 1/(o.dist(e,t)+o.dist(n,t)+o.dist(r,n)+1)*this.segmentScale},getCubicCurveVertexCount:function(e,t,n,r){var i=this._getCubicCurveApproxStep(e,t,n,r),a=Math.ceil(1/i);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(e,t,n,r){var i=this._getCubicCurveApproxStep(e,t,n,r),a=Math.ceil(1/i);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(s)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(s)},getPolylineVertexCount:function(e){var t="number"!=typeof e[0],n=t?e.length:e.length/3;return this.useNativeLine?2*(n-1):2*(n-1)+2},getPolylineTriangleCount:function(e){var t="number"!=typeof e[0],n=t?e.length:e.length/3;return this.useNativeLine?0:2*Math.max(n-1,0)},addCubicCurve:function(e,t,n,r,i,a){null==a&&(a=1);for(var o=e[0],s=e[1],u=e[2],l=t[0],c=t[1],f=t[2],h=n[0],d=n[1],p=n[2],_=r[0],m=r[1],g=r[2],v=this._getCubicCurveApproxStep(e,t,n,r),y=v*v,x=y*v,T=3*v,E=3*y,b=6*y,S=6*x,A=o-2*l+h,w=s-2*c+d,N=u-2*f+p,C=3*(l-h)-o+_,R=3*(c-d)-s+m,M=3*(f-p)-u+g,L=o,P=s,D=u,I=(l-o)*T+A*E+C*x,O=(c-s)*T+w*E+R*x,F=(f-u)*T+N*E+M*x,k=A*b+C*S,B=w*b+R*S,U=N*b+M*S,H=C*S,G=R*S,z=M*S,q=0,W=0,V=Math.ceil(1/v),j=new Float32Array(3*(V+1)),j=[],X=0,W=0;W<V+1;W++)j[X++]=L,j[X++]=P,j[X++]=D,L+=I,P+=O,D+=F,I+=k,O+=B,F+=U,k+=H,B+=G,U+=z,(q+=v)>1&&(L=I>0?Math.min(L,_):Math.max(L,_),P=O>0?Math.min(P,m):Math.max(P,m),D=F>0?Math.min(D,g):Math.max(D,g));return this.addPolyline(j,i,a,!1)},addLine:function(e,t,n,r){return this.addPolyline([e,t],n,r,!1)},addPolyline:function(e,t,n,r){if(e.length){this._itemVertexOffsets.push(this._vertexOffset);var i,a,o="number"!=typeof e[0],s=this.attributes.position,u=this.attributes.positionPrev,l=this.attributes.positionNext,c=this.attributes.color,f=this.attributes.offset,h=this.indices,d=this._vertexOffset,p=o?e.length:e.length/3,_=p;if(!(p<2)){null==n&&(n=1),n=Math.max(n,.01);for(var m=0;m<_;m++){if(o)i=e[m],a=r?t[m]:t;else{var g=3*m;if(i=i||[],i[0]=e[g],i[1]=e[g+1],i[2]=e[g+2],r){var v=4*m;a=a||[],a[0]=t[v],a[1]=t[v+1],a[2]=t[v+2],a[3]=t[v+3]}else a=t}if(this.useNativeLine?m>1&&(s.copy(d,d-1),c.copy(d,d-1),d++):(m<_-1&&(u.set(d+2,i),u.set(d+3,i)),m>0&&(l.set(d-2,i),l.set(d-1,i)),s.set(d,i),s.set(d+1,i),c.set(d,a),c.set(d+1,a),f.set(d,n/2),f.set(d+1,-n/2),d+=2),this.useNativeLine)c.set(d,a),s.set(d,i),d++;else if(m>0){var y=3*this._triangleOffset,h=this.indices;h[y]=d-4,h[y+1]=d-3,h[y+2]=d-2,h[y+3]=d-3,h[y+4]=d-1,h[y+5]=d-2,this._triangleOffset+=2}}if(!this.useNativeLine){var x=this._vertexOffset,T=this._vertexOffset+2*p;u.copy(x,x+2),u.copy(x+1,x+3),l.copy(T-1,T-3),l.copy(T-2,T-4)}return this._vertexOffset=d,this._vertexOffset}}},setItemColor:function(e,t){for(var n=this._itemVertexOffsets[e],r=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,i=n;i<r;i++)this.attributes.color.set(i,t);this.dirty("color")},currentTriangleOffset:function(){return this._triangleOffset},currentVertexOffset:function(){return this._vertexOffset}});t.a=u},function(e,t,n){"use strict";t.a="@export ecgl.lines3D.clipNear\n\nvec4 clipNear(vec4 p1, vec4 p2) {\n float n = (p1.w - near) / (p1.w - p2.w);\n return vec4(mix(p1.xy, p2.xy, n), -near, near);\n}\n\n@end\n\n@export ecgl.lines3D.expandLine\n vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\n vec4 currProj = worldViewProjection * vec4(position, 1.0);\n vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\n\n if (currProj.w < 0.0) {\n if (nextProj.w > 0.0) {\n currProj = clipNear(currProj, nextProj);\n }\n else if (prevProj.w > 0.0) {\n currProj = clipNear(currProj, prevProj);\n }\n }\n\n vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\n\n vec2 dir;\n float len = offset;\n if (position == positionPrev) {\n dir = normalize(nextScreen - currScreen);\n }\n else if (position == positionNext) {\n dir = normalize(currScreen - prevScreen);\n }\n else {\n vec2 dirA = normalize(currScreen - prevScreen);\n vec2 dirB = normalize(nextScreen - currScreen);\n\n vec2 tanget = normalize(dirA + dirB);\n\n float miter = 1.0 / max(dot(tanget, dirA), 0.5);\n len *= miter;\n dir = tanget;\n }\n\n dir = vec2(-dir.y, dir.x) * len;\n currScreen += dir;\n\n currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\n@end\n\n\n@export ecgl.meshLines3D.vertex\n\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute vec3 prevPositionPrev;\nattribute vec3 prevPositionNext;\nuniform float percent : 1.0;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nvarying vec4 v_Color;\n\n@import ecgl.lines3D.clipNear\n\nvoid main()\n{\n @import ecgl.lines3D.expandLine\n\n gl_Position = currProj;\n\n v_Color = a_Color;\n}\n@end\n\n\n@export ecgl.meshLines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\n@import qtek.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n}\n\n@end"},function(e,t,n){"use strict";function r(e,t,n,r){ControlKit.ObjectComponent.apply(this,arguments),this._object=t,this._key=n,this._onChange=r.onChange||function(){};var i=this,a=this._wrapNode;a.setStyleClass("texture-wrap");var o=document.createElement("img"),s=document.createElement("div");s.className="texture-delete button",this._img=o,a.getElement().appendChild(o),a.getElement().appendChild(s),this.update(),this._wrapNode.getParent().setHeight(85);var u=this._wrapNode.getParent().getElement();FileAPI.event.dnd(u,function(e){e?u.classList.add("drag-hover"):u.classList.remove("drag-hover")},function(e){var r=e.filter(function(e){return e.type.match(/image/)})[0];r&&(t[n]=URL.createObjectURL(r),i.update(),i._onChange(r,t[n]))}),s.addEventListener("click",function(){t[n]="none",i.update(),i._onChange(null,"none")})}r.prototype=Object.create(ControlKit.ObjectComponent.prototype),r.prototype.constructor=r,r.prototype.update=function(){var e=this._object[this._key];this._img.src=e&&"none"!==e.toLowerCase()?e:"./img/chessboard.jpg",this._img.style.opacity=this._object[this._key]?1:.5},t.a=r},function(e,t,n){"use strict";function r(){document.getElementById("timeline").style.display="block"}function i(){document.getElementById("timeline").style.display="none"}function a(e){c=e,l=e.getAnimationDuration(),l>0?r():i();var t=document.getElementById("timeline-pause-resume");t.removeEventListener("click",h),t.addEventListener("click",h=function(){d?u():s(n)}),_=0,p=0,o();var n=Math.random();f=n,l>0?s(n):u();var a=null;if(!$("#timeline-progress input").data("ionRangeSlider")){$("#timeline-progress input").ionRangeSlider({from_shadow:!0,force_edges:!0,onChange:function(e){p=e.from,c.setPose(p),null==a&&(a=d),u()},onFinish:function(){a&&s(n),a=null}}),$("#timeline-range input").ionRangeSlider({from_shadow:!0,force_edges:!0,type:"double",drag_interval:!0,grid:!0,grid_num:10,onChange:function(e){l=e.to-e.from,_=e.from,p=Math.min(Math.max(e.from,p),e.to),c.setPose(p),m.update({from_min:e.from,from_max:e.to})}});var m=$("#timeline-progress input").data("ionRangeSlider"),g=$("#timeline-range input").data("ionRangeSlider");m.update({min:0,max:l,from:p,from_min:0,from_max:l}),g.update({min:0,max:l,from:0,to:l})}}function o(){var e=$("#timeline-progress input").data("ionRangeSlider");e&&e.update({from:p})}function s(e){function t(){if(d&&e===f){c.setPose(p);var r=Math.min(Date.now()-n,20);n=Date.now(),o(),p+=r,p>_+l&&(p=_),requestAnimationFrame(t)}}if(!d){d=!0;var n=Date.now(),r=document.getElementById("timeline-pause-resume");r.classList.remove("icon-resume"),r.classList.add("icon-pause"),requestAnimationFrame(t)}}function u(){if(d){d=!1;var e=document.getElementById("timeline-pause-resume");e.classList.remove("icon-pause"),e.classList.add("icon-resume")}}n.d(t,"a",function(){return a});var l,c,f,h,d=!1,p=0,_=0},function(e,t,n){"use strict";var r=n(5),i=(n(4),n(13)),a=n(3),o=n(10),s=n(8),u=n(151);a.a.import(u.a);var l=new r.a,c=new o.a;c.attach(l);var f=new i.a({fragment:a.a.source("qmv.editor.edge")});t.a=function(e,t,n){var r=e.getRenderer();l.width=r.getWidth(),l.height=r.getHeight(),c.bind(r),r.gl.clearColor(0,0,0,0),r.gl.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),n.update();var i={};t.forEach(function(t){if(i[t.__GUID__]=t.material,!t.__outlineBasicMaterial){var n={};t.material.shader.isDefined("vertex","SKINNING")&&(n.SKINNING=null,n.JOINT_COUNT=t.material.shader.getDefine("vertex","JOINT_COUNT")),t.__outlineBasicMaterial=new s.a({shader:e.shaderLibrary.get("qtek.basic",{vertexDefines:n})})}t.material=t.__outlineBasicMaterial,t.material.setUniform("color",[1,1,1,1])}),r.renderQueue(t,n),t.forEach(function(e){e.material=i[e.__GUID__]}),c.unbind(r),f.setUniform("edgeWidth",1.5),f.setUniform("edgeColor",[1,1,0,1]),f.setUniform("texture",l),f.setUniform("textureSize",[l.width,l.height]),f.render(r)}},function(e,t,n){"use strict";t.a="@export qmv.editor.edge\n\nuniform sampler2D texture;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,1.0];\nuniform float edgeWidth: 1;\n\nvarying vec2 v_Texcoord;\n\nfloat getCol(vec2 coord) {\n return texture2D(texture, coord).a;\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n float center = getCol(cc);\n\n float dx = edgeWidth / textureSize.x;\n float dy = edgeWidth / textureSize.y;\n\n vec2 coord;\n float topLeft = getCol(cc+vec2(-dx, -dy));\n float top = getCol(cc+vec2(0.0, -dy));\n float topRight = getCol(cc+vec2(dx, -dy));\n float left = getCol(cc+vec2(-dx, 0.0));\n float right = getCol(cc+vec2(dx, 0.0));\n float bottomLeft = getCol(cc+vec2(-dx, dy));\n float bottom = getCol(cc+vec2(0.0, dy));\n float bottomRight = getCol(cc+vec2(dx, dy));\n\n float v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n float h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(h * h + v * v);\n\n edge = smoothstep(0.9, 1.0, edge);\n if (edge < 0.5) {\n discard;\n }\n\n gl_FragColor = edgeColor;\n}\n@end"}]);